

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Sep 19 06:53:58 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0016                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001C                     	;# 
    44  001E                     	;# 
    45  001F                     	;# 
    46  008C                     	;# 
    47  008D                     	;# 
    48  0091                     	;# 
    49  0092                     	;# 
    50  0093                     	;# 
    51  0094                     	;# 
    52  0095                     	;# 
    53  0096                     	;# 
    54  0097                     	;# 
    55  0098                     	;# 
    56  0099                     	;# 
    57  009A                     	;# 
    58  009B                     	;# 
    59  009B                     	;# 
    60  009C                     	;# 
    61  009D                     	;# 
    62  009E                     	;# 
    63  010C                     	;# 
    64  010D                     	;# 
    65  0111                     	;# 
    66  0112                     	;# 
    67  0113                     	;# 
    68  0114                     	;# 
    69  0115                     	;# 
    70  0116                     	;# 
    71  0117                     	;# 
    72  0118                     	;# 
    73  0119                     	;# 
    74  011A                     	;# 
    75  011B                     	;# 
    76  011D                     	;# 
    77  011E                     	;# 
    78  018C                     	;# 
    79  018D                     	;# 
    80  0191                     	;# 
    81  0191                     	;# 
    82  0192                     	;# 
    83  0193                     	;# 
    84  0193                     	;# 
    85  0193                     	;# 
    86  0194                     	;# 
    87  0195                     	;# 
    88  0196                     	;# 
    89  0199                     	;# 
    90  019A                     	;# 
    91  019B                     	;# 
    92  019B                     	;# 
    93  019B                     	;# 
    94  019B                     	;# 
    95  019C                     	;# 
    96  019C                     	;# 
    97  019D                     	;# 
    98  019E                     	;# 
    99  019F                     	;# 
   100  020C                     	;# 
   101  020D                     	;# 
   102  0211                     	;# 
   103  0211                     	;# 
   104  0212                     	;# 
   105  0212                     	;# 
   106  0213                     	;# 
   107  0213                     	;# 
   108  0214                     	;# 
   109  0214                     	;# 
   110  0215                     	;# 
   111  0215                     	;# 
   112  0215                     	;# 
   113  0216                     	;# 
   114  0216                     	;# 
   115  0217                     	;# 
   116  0217                     	;# 
   117  0219                     	;# 
   118  021A                     	;# 
   119  021B                     	;# 
   120  021C                     	;# 
   121  021D                     	;# 
   122  021E                     	;# 
   123  021F                     	;# 
   124  0291                     	;# 
   125  0291                     	;# 
   126  0292                     	;# 
   127  0293                     	;# 
   128  0294                     	;# 
   129  0295                     	;# 
   130  0295                     	;# 
   131  0296                     	;# 
   132  0298                     	;# 
   133  0298                     	;# 
   134  0299                     	;# 
   135  029A                     	;# 
   136  029B                     	;# 
   137  029C                     	;# 
   138  029C                     	;# 
   139  029D                     	;# 
   140  029E                     	;# 
   141  029E                     	;# 
   142  0311                     	;# 
   143  0311                     	;# 
   144  0312                     	;# 
   145  0313                     	;# 
   146  0318                     	;# 
   147  0318                     	;# 
   148  0319                     	;# 
   149  031A                     	;# 
   150  0394                     	;# 
   151  0395                     	;# 
   152  0396                     	;# 
   153  039A                     	;# 
   154  039C                     	;# 
   155  039D                     	;# 
   156  039E                     	;# 
   157  039F                     	;# 
   158  0415                     	;# 
   159  0416                     	;# 
   160  0417                     	;# 
   161  041C                     	;# 
   162  041D                     	;# 
   163  041E                     	;# 
   164  0FE4                     	;# 
   165  0FE5                     	;# 
   166  0FE6                     	;# 
   167  0FE7                     	;# 
   168  0FE8                     	;# 
   169  0FE9                     	;# 
   170  0FEA                     	;# 
   171  0FEB                     	;# 
   172  0FED                     	;# 
   173  0FEE                     	;# 
   174  0FEF                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0008                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  0091                     	;# 
   207  0092                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  0111                     	;# 
   224  0112                     	;# 
   225  0113                     	;# 
   226  0114                     	;# 
   227  0115                     	;# 
   228  0116                     	;# 
   229  0117                     	;# 
   230  0118                     	;# 
   231  0119                     	;# 
   232  011A                     	;# 
   233  011B                     	;# 
   234  011D                     	;# 
   235  011E                     	;# 
   236  018C                     	;# 
   237  018D                     	;# 
   238  0191                     	;# 
   239  0191                     	;# 
   240  0192                     	;# 
   241  0193                     	;# 
   242  0193                     	;# 
   243  0193                     	;# 
   244  0194                     	;# 
   245  0195                     	;# 
   246  0196                     	;# 
   247  0199                     	;# 
   248  019A                     	;# 
   249  019B                     	;# 
   250  019B                     	;# 
   251  019B                     	;# 
   252  019B                     	;# 
   253  019C                     	;# 
   254  019C                     	;# 
   255  019D                     	;# 
   256  019E                     	;# 
   257  019F                     	;# 
   258  020C                     	;# 
   259  020D                     	;# 
   260  0211                     	;# 
   261  0211                     	;# 
   262  0212                     	;# 
   263  0212                     	;# 
   264  0213                     	;# 
   265  0213                     	;# 
   266  0214                     	;# 
   267  0214                     	;# 
   268  0215                     	;# 
   269  0215                     	;# 
   270  0215                     	;# 
   271  0216                     	;# 
   272  0216                     	;# 
   273  0217                     	;# 
   274  0217                     	;# 
   275  0219                     	;# 
   276  021A                     	;# 
   277  021B                     	;# 
   278  021C                     	;# 
   279  021D                     	;# 
   280  021E                     	;# 
   281  021F                     	;# 
   282  0291                     	;# 
   283  0291                     	;# 
   284  0292                     	;# 
   285  0293                     	;# 
   286  0294                     	;# 
   287  0295                     	;# 
   288  0295                     	;# 
   289  0296                     	;# 
   290  0298                     	;# 
   291  0298                     	;# 
   292  0299                     	;# 
   293  029A                     	;# 
   294  029B                     	;# 
   295  029C                     	;# 
   296  029C                     	;# 
   297  029D                     	;# 
   298  029E                     	;# 
   299  029E                     	;# 
   300  0311                     	;# 
   301  0311                     	;# 
   302  0312                     	;# 
   303  0313                     	;# 
   304  0318                     	;# 
   305  0318                     	;# 
   306  0319                     	;# 
   307  031A                     	;# 
   308  0394                     	;# 
   309  0395                     	;# 
   310  0396                     	;# 
   311  039A                     	;# 
   312  039C                     	;# 
   313  039D                     	;# 
   314  039E                     	;# 
   315  039F                     	;# 
   316  0415                     	;# 
   317  0416                     	;# 
   318  0417                     	;# 
   319  041C                     	;# 
   320  041D                     	;# 
   321  041E                     	;# 
   322  0FE4                     	;# 
   323  0FE5                     	;# 
   324  0FE6                     	;# 
   325  0FE7                     	;# 
   326  0FE8                     	;# 
   327  0FE9                     	;# 
   328  0FEA                     	;# 
   329  0FEB                     	;# 
   330  0FED                     	;# 
   331  0FEE                     	;# 
   332  0FEF                     	;# 
   333  0000                     	;# 
   334  0001                     	;# 
   335  0002                     	;# 
   336  0003                     	;# 
   337  0004                     	;# 
   338  0005                     	;# 
   339  0006                     	;# 
   340  0007                     	;# 
   341  0008                     	;# 
   342  0009                     	;# 
   343  000A                     	;# 
   344  000B                     	;# 
   345  000C                     	;# 
   346  000D                     	;# 
   347  0011                     	;# 
   348  0012                     	;# 
   349  0013                     	;# 
   350  0014                     	;# 
   351  0015                     	;# 
   352  0016                     	;# 
   353  0016                     	;# 
   354  0017                     	;# 
   355  0018                     	;# 
   356  0019                     	;# 
   357  001A                     	;# 
   358  001B                     	;# 
   359  001C                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  008C                     	;# 
   363  008D                     	;# 
   364  0091                     	;# 
   365  0092                     	;# 
   366  0093                     	;# 
   367  0094                     	;# 
   368  0095                     	;# 
   369  0096                     	;# 
   370  0097                     	;# 
   371  0098                     	;# 
   372  0099                     	;# 
   373  009A                     	;# 
   374  009B                     	;# 
   375  009B                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  010C                     	;# 
   380  010D                     	;# 
   381  0111                     	;# 
   382  0112                     	;# 
   383  0113                     	;# 
   384  0114                     	;# 
   385  0115                     	;# 
   386  0116                     	;# 
   387  0117                     	;# 
   388  0118                     	;# 
   389  0119                     	;# 
   390  011A                     	;# 
   391  011B                     	;# 
   392  011D                     	;# 
   393  011E                     	;# 
   394  018C                     	;# 
   395  018D                     	;# 
   396  0191                     	;# 
   397  0191                     	;# 
   398  0192                     	;# 
   399  0193                     	;# 
   400  0193                     	;# 
   401  0193                     	;# 
   402  0194                     	;# 
   403  0195                     	;# 
   404  0196                     	;# 
   405  0199                     	;# 
   406  019A                     	;# 
   407  019B                     	;# 
   408  019B                     	;# 
   409  019B                     	;# 
   410  019B                     	;# 
   411  019C                     	;# 
   412  019C                     	;# 
   413  019D                     	;# 
   414  019E                     	;# 
   415  019F                     	;# 
   416  020C                     	;# 
   417  020D                     	;# 
   418  0211                     	;# 
   419  0211                     	;# 
   420  0212                     	;# 
   421  0212                     	;# 
   422  0213                     	;# 
   423  0213                     	;# 
   424  0214                     	;# 
   425  0214                     	;# 
   426  0215                     	;# 
   427  0215                     	;# 
   428  0215                     	;# 
   429  0216                     	;# 
   430  0216                     	;# 
   431  0217                     	;# 
   432  0217                     	;# 
   433  0219                     	;# 
   434  021A                     	;# 
   435  021B                     	;# 
   436  021C                     	;# 
   437  021D                     	;# 
   438  021E                     	;# 
   439  021F                     	;# 
   440  0291                     	;# 
   441  0291                     	;# 
   442  0292                     	;# 
   443  0293                     	;# 
   444  0294                     	;# 
   445  0295                     	;# 
   446  0295                     	;# 
   447  0296                     	;# 
   448  0298                     	;# 
   449  0298                     	;# 
   450  0299                     	;# 
   451  029A                     	;# 
   452  029B                     	;# 
   453  029C                     	;# 
   454  029C                     	;# 
   455  029D                     	;# 
   456  029E                     	;# 
   457  029E                     	;# 
   458  0311                     	;# 
   459  0311                     	;# 
   460  0312                     	;# 
   461  0313                     	;# 
   462  0318                     	;# 
   463  0318                     	;# 
   464  0319                     	;# 
   465  031A                     	;# 
   466  0394                     	;# 
   467  0395                     	;# 
   468  0396                     	;# 
   469  039A                     	;# 
   470  039C                     	;# 
   471  039D                     	;# 
   472  039E                     	;# 
   473  039F                     	;# 
   474  0415                     	;# 
   475  0416                     	;# 
   476  0417                     	;# 
   477  041C                     	;# 
   478  041D                     	;# 
   479  041E                     	;# 
   480  0FE4                     	;# 
   481  0FE5                     	;# 
   482  0FE6                     	;# 
   483  0FE7                     	;# 
   484  0FE8                     	;# 
   485  0FE9                     	;# 
   486  0FEA                     	;# 
   487  0FEB                     	;# 
   488  0FED                     	;# 
   489  0FEE                     	;# 
   490  0FEF                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0008                     	;# 
   500  0009                     	;# 
   501  000A                     	;# 
   502  000B                     	;# 
   503  000C                     	;# 
   504  000D                     	;# 
   505  0011                     	;# 
   506  0012                     	;# 
   507  0013                     	;# 
   508  0014                     	;# 
   509  0015                     	;# 
   510  0016                     	;# 
   511  0016                     	;# 
   512  0017                     	;# 
   513  0018                     	;# 
   514  0019                     	;# 
   515  001A                     	;# 
   516  001B                     	;# 
   517  001C                     	;# 
   518  001E                     	;# 
   519  001F                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  0091                     	;# 
   523  0092                     	;# 
   524  0093                     	;# 
   525  0094                     	;# 
   526  0095                     	;# 
   527  0096                     	;# 
   528  0097                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009A                     	;# 
   532  009B                     	;# 
   533  009B                     	;# 
   534  009C                     	;# 
   535  009D                     	;# 
   536  009E                     	;# 
   537  010C                     	;# 
   538  010D                     	;# 
   539  0111                     	;# 
   540  0112                     	;# 
   541  0113                     	;# 
   542  0114                     	;# 
   543  0115                     	;# 
   544  0116                     	;# 
   545  0117                     	;# 
   546  0118                     	;# 
   547  0119                     	;# 
   548  011A                     	;# 
   549  011B                     	;# 
   550  011D                     	;# 
   551  011E                     	;# 
   552  018C                     	;# 
   553  018D                     	;# 
   554  0191                     	;# 
   555  0191                     	;# 
   556  0192                     	;# 
   557  0193                     	;# 
   558  0193                     	;# 
   559  0193                     	;# 
   560  0194                     	;# 
   561  0195                     	;# 
   562  0196                     	;# 
   563  0199                     	;# 
   564  019A                     	;# 
   565  019B                     	;# 
   566  019B                     	;# 
   567  019B                     	;# 
   568  019B                     	;# 
   569  019C                     	;# 
   570  019C                     	;# 
   571  019D                     	;# 
   572  019E                     	;# 
   573  019F                     	;# 
   574  020C                     	;# 
   575  020D                     	;# 
   576  0211                     	;# 
   577  0211                     	;# 
   578  0212                     	;# 
   579  0212                     	;# 
   580  0213                     	;# 
   581  0213                     	;# 
   582  0214                     	;# 
   583  0214                     	;# 
   584  0215                     	;# 
   585  0215                     	;# 
   586  0215                     	;# 
   587  0216                     	;# 
   588  0216                     	;# 
   589  0217                     	;# 
   590  0217                     	;# 
   591  0219                     	;# 
   592  021A                     	;# 
   593  021B                     	;# 
   594  021C                     	;# 
   595  021D                     	;# 
   596  021E                     	;# 
   597  021F                     	;# 
   598  0291                     	;# 
   599  0291                     	;# 
   600  0292                     	;# 
   601  0293                     	;# 
   602  0294                     	;# 
   603  0295                     	;# 
   604  0295                     	;# 
   605  0296                     	;# 
   606  0298                     	;# 
   607  0298                     	;# 
   608  0299                     	;# 
   609  029A                     	;# 
   610  029B                     	;# 
   611  029C                     	;# 
   612  029C                     	;# 
   613  029D                     	;# 
   614  029E                     	;# 
   615  029E                     	;# 
   616  0311                     	;# 
   617  0311                     	;# 
   618  0312                     	;# 
   619  0313                     	;# 
   620  0318                     	;# 
   621  0318                     	;# 
   622  0319                     	;# 
   623  031A                     	;# 
   624  0394                     	;# 
   625  0395                     	;# 
   626  0396                     	;# 
   627  039A                     	;# 
   628  039C                     	;# 
   629  039D                     	;# 
   630  039E                     	;# 
   631  039F                     	;# 
   632  0415                     	;# 
   633  0416                     	;# 
   634  0417                     	;# 
   635  041C                     	;# 
   636  041D                     	;# 
   637  041E                     	;# 
   638  0FE4                     	;# 
   639  0FE5                     	;# 
   640  0FE6                     	;# 
   641  0FE7                     	;# 
   642  0FE8                     	;# 
   643  0FE9                     	;# 
   644  0FEA                     	;# 
   645  0FEB                     	;# 
   646  0FED                     	;# 
   647  0FEE                     	;# 
   648  0FEF                     	;# 
   649  0000                     	;# 
   650  0001                     	;# 
   651  0002                     	;# 
   652  0003                     	;# 
   653  0004                     	;# 
   654  0005                     	;# 
   655  0006                     	;# 
   656  0007                     	;# 
   657  0008                     	;# 
   658  0009                     	;# 
   659  000A                     	;# 
   660  000B                     	;# 
   661  000C                     	;# 
   662  000D                     	;# 
   663  0011                     	;# 
   664  0012                     	;# 
   665  0013                     	;# 
   666  0014                     	;# 
   667  0015                     	;# 
   668  0016                     	;# 
   669  0016                     	;# 
   670  0017                     	;# 
   671  0018                     	;# 
   672  0019                     	;# 
   673  001A                     	;# 
   674  001B                     	;# 
   675  001C                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  008C                     	;# 
   679  008D                     	;# 
   680  0091                     	;# 
   681  0092                     	;# 
   682  0093                     	;# 
   683  0094                     	;# 
   684  0095                     	;# 
   685  0096                     	;# 
   686  0097                     	;# 
   687  0098                     	;# 
   688  0099                     	;# 
   689  009A                     	;# 
   690  009B                     	;# 
   691  009B                     	;# 
   692  009C                     	;# 
   693  009D                     	;# 
   694  009E                     	;# 
   695  010C                     	;# 
   696  010D                     	;# 
   697  0111                     	;# 
   698  0112                     	;# 
   699  0113                     	;# 
   700  0114                     	;# 
   701  0115                     	;# 
   702  0116                     	;# 
   703  0117                     	;# 
   704  0118                     	;# 
   705  0119                     	;# 
   706  011A                     	;# 
   707  011B                     	;# 
   708  011D                     	;# 
   709  011E                     	;# 
   710  018C                     	;# 
   711  018D                     	;# 
   712  0191                     	;# 
   713  0191                     	;# 
   714  0192                     	;# 
   715  0193                     	;# 
   716  0193                     	;# 
   717  0193                     	;# 
   718  0194                     	;# 
   719  0195                     	;# 
   720  0196                     	;# 
   721  0199                     	;# 
   722  019A                     	;# 
   723  019B                     	;# 
   724  019B                     	;# 
   725  019B                     	;# 
   726  019B                     	;# 
   727  019C                     	;# 
   728  019C                     	;# 
   729  019D                     	;# 
   730  019E                     	;# 
   731  019F                     	;# 
   732  020C                     	;# 
   733  020D                     	;# 
   734  0211                     	;# 
   735  0211                     	;# 
   736  0212                     	;# 
   737  0212                     	;# 
   738  0213                     	;# 
   739  0213                     	;# 
   740  0214                     	;# 
   741  0214                     	;# 
   742  0215                     	;# 
   743  0215                     	;# 
   744  0215                     	;# 
   745  0216                     	;# 
   746  0216                     	;# 
   747  0217                     	;# 
   748  0217                     	;# 
   749  0219                     	;# 
   750  021A                     	;# 
   751  021B                     	;# 
   752  021C                     	;# 
   753  021D                     	;# 
   754  021E                     	;# 
   755  021F                     	;# 
   756  0291                     	;# 
   757  0291                     	;# 
   758  0292                     	;# 
   759  0293                     	;# 
   760  0294                     	;# 
   761  0295                     	;# 
   762  0295                     	;# 
   763  0296                     	;# 
   764  0298                     	;# 
   765  0298                     	;# 
   766  0299                     	;# 
   767  029A                     	;# 
   768  029B                     	;# 
   769  029C                     	;# 
   770  029C                     	;# 
   771  029D                     	;# 
   772  029E                     	;# 
   773  029E                     	;# 
   774  0311                     	;# 
   775  0311                     	;# 
   776  0312                     	;# 
   777  0313                     	;# 
   778  0318                     	;# 
   779  0318                     	;# 
   780  0319                     	;# 
   781  031A                     	;# 
   782  0394                     	;# 
   783  0395                     	;# 
   784  0396                     	;# 
   785  039A                     	;# 
   786  039C                     	;# 
   787  039D                     	;# 
   788  039E                     	;# 
   789  039F                     	;# 
   790  0415                     	;# 
   791  0416                     	;# 
   792  0417                     	;# 
   793  041C                     	;# 
   794  041D                     	;# 
   795  041E                     	;# 
   796  0FE4                     	;# 
   797  0FE5                     	;# 
   798  0FE6                     	;# 
   799  0FE7                     	;# 
   800  0FE8                     	;# 
   801  0FE9                     	;# 
   802  0FEA                     	;# 
   803  0FEB                     	;# 
   804  0FED                     	;# 
   805  0FEE                     	;# 
   806  0FEF                     	;# 
   807                           
   808                           	psect	idataBANK0
   809  0638                     __pidataBANK0:	
   810                           
   811                           ;initializer for _LED_state
   812  0638  3401               	retlw	1
   813                           
   814                           	psect	stringtext
   815  0800                     __pstringtext:	
   816  0800                     _ratio_mph:	
   817  0800  34C5               	retlw	197
   818  0801  3427               	retlw	39
   819  0802  3400               	retlw	0
   820  0803                     __end_of_ratio_mph:	
   821  0803                     convert_to_fp@one:	
   822  0803  3401               	retlw	1
   823  0804  3400               	retlw	0
   824  0805                     __end_ofconvert_to_fp@one:	
   825  0095                     _OPTION_REGbits	set	149
   826  0099                     _OSCCON	set	153
   827  009A                     _OSCSTAT	set	154
   828  0098                     _OSCTUNE	set	152
   829  008C                     _TRISA	set	140
   830  008D                     _TRISB	set	141
   831  04D6                     _PLLR	set	1238
   832  011D                     _APFCON0	set	285
   833  011E                     _APFCON1	set	286
   834  010C                     _LATA	set	268
   835  010D                     _LATB	set	269
   836  018C                     _ANSELA	set	396
   837  018D                     _ANSELB	set	397
   838  020C                     _WPUA	set	524
   839  020D                     _WPUB	set	525
   840                           
   841                           ; #config settings
   842  0000                     
   843                           	psect	cinit
   844  07F1                     start_initialization:	
   845  07F1                     __initialization:	
   846                           
   847                           ; Initialize objects allocated to BANK0
   848  07F1  3186  2638         	fcall	__pidataBANK0	;fetch initializer
   849  07F3  00C5               	movwf	__pdataBANK0& (0+127)
   850                           
   851                           ; Clear objects allocated to COMMON
   852  07F4  01FC               	clrf	__pbssCOMMON& (0+127)
   853  07F5  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   854                           
   855                           ; Clear objects allocated to BANK0
   856  07F6  01BE               	clrf	__pbssBANK0& (0+127)
   857  07F7  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   858  07F8  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   859  07F9  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   860  07FA  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   861  07FB  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   862  07FC  01C4               	clrf	(__pbssBANK0+6)& (0+127)
   863  07FD                     end_of_initialization:	
   864                           ;End of C runtime variable initialization code
   865                           
   866  07FD                     __end_of__initialization:	
   867  07FD  0020               	movlb	0
   868  07FE  3186  2E39         	ljmp	_main	;jump to C main() function
   869                           
   870                           	psect	bssCOMMON
   871  007C                     __pbssCOMMON:	
   872  007C                     _b_last_state:	
   873  007C                     	ds	2
   874                           
   875                           	psect	bssBANK0
   876  003E                     __pbssBANK0:	
   877  003E                     _LED_counter:	
   878  003E                     	ds	1
   879  003F                     _b_confirmed_state:	
   880  003F                     	ds	1
   881  0040                     _b_count_pressed:	
   882  0040                     	ds	1
   883  0041                     _b_count_released:	
   884  0041                     	ds	1
   885  0042                     _b_has_once_been_released:	
   886  0042                     	ds	1
   887  0043                     _b_push_confirmed:	
   888  0043                     	ds	1
   889  0044                     _b_release_confirmed:	
   890  0044                     	ds	1
   891                           
   892                           	psect	dataBANK0
   893  0045                     __pdataBANK0:	
   894  0045                     _LED_state:	
   895  0045                     	ds	1
   896                           
   897                           	psect	cstackCOMMON
   898  0070                     __pcstackCOMMON:	
   899  0070                     ?_main:	
   900  0070                     ?_convert_to_fp:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0070                     ?___lmul:	
   904                           ; 3 bytes @ 0x0
   905                           
   906  0070                     convert_to_fp@int_part:	
   907                           ; 4 bytes @ 0x0
   908                           
   909  0070                     ___lmul@multiplier:	
   910                           ; 2 bytes @ 0x0
   911                           
   912                           
   913                           ; 4 bytes @ 0x0
   914  0070                     	ds	2
   915  0072                     convert_to_fp@fract_part:	
   916                           
   917                           ; 2 bytes @ 0x2
   918  0072                     	ds	2
   919  0074                     ??_convert_to_fp:	
   920  0074                     ___lmul@multiplicand:	
   921                           ; 1 bytes @ 0x4
   922                           
   923                           
   924                           ; 4 bytes @ 0x4
   925  0074                     	ds	4
   926  0078                     ??___lmul:	
   927  0078                     ___lmul@product:	
   928                           ; 1 bytes @ 0x8
   929                           
   930                           
   931                           ; 4 bytes @ 0x8
   932  0078                     	ds	4
   933  007C                     ??_main:	
   934                           
   935                           	psect	cstackBANK0
   936  0020                     __pcstackBANK0:	
   937                           ; 1 bytes @ 0xC
   938                           
   939  0020                     ?_multiply_fp:	
   940  0020                     convert_to_fp@res_fract:	
   941                           ; 3 bytes @ 0x0
   942                           
   943  0020                     multiply_fp@n1:	
   944                           ; 2 bytes @ 0x0
   945                           
   946                           
   947                           ; 3 bytes @ 0x0
   948  0020                     	ds	2
   949  0022                     convert_to_fp@tmp_left:	
   950                           
   951                           ; 2 bytes @ 0x2
   952  0022                     	ds	1
   953  0023                     multiply_fp@n2:	
   954                           
   955                           ; 3 bytes @ 0x3
   956  0023                     	ds	1
   957  0024                     convert_to_fp@i_bit:	
   958                           
   959                           ; 1 bytes @ 0x4
   960  0024                     	ds	1
   961  0025                     convert_to_fp@res:	
   962                           
   963                           ; 3 bytes @ 0x5
   964  0025                     	ds	1
   965  0026                     ??_multiply_fp:	
   966                           
   967                           ; 1 bytes @ 0x6
   968  0026                     	ds	10
   969  0030                     multiply_fp@res:	
   970                           
   971                           ; 4 bytes @ 0x10
   972  0030                     	ds	4
   973  0034                     multiply_fp@n1_fra:	
   974                           
   975                           ; 3 bytes @ 0x14
   976  0034                     	ds	3
   977  0037                     multiply_fp@n2_fra:	
   978                           
   979                           ; 3 bytes @ 0x17
   980  0037                     	ds	3
   981  003A                     main@tmp:	
   982                           
   983                           ; 1 bytes @ 0x1A
   984  003A                     	ds	1
   985  003B                     main@speed:	
   986                           
   987                           ; 3 bytes @ 0x1B
   988  003B                     	ds	3
   989                           
   990                           	psect	maintext
   991  0639                     __pmaintext:	
   992 ;;
   993 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   994 ;;
   995 ;; *************** function _main *****************
   996 ;; Defined at:
   997 ;;		line 59 in file "main.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  speed           3   27[BANK0 ] unsigned um
  1002 ;;  tmp             1   26[BANK0 ] unsigned char 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : B1F/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1012 ;;      Params:         0       0       0       0       0       0
  1013 ;;      Locals:         0       4       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0
  1015 ;;      Totals:         0       4       0       0       0       0
  1016 ;;Total ram usage:        4 bytes
  1017 ;; Hardware stack levels required when called:    2
  1018 ;; This function calls:
  1019 ;;		_convert_to_fp
  1020 ;;		_multiply_fp
  1021 ;; This function is called by:
  1022 ;;		Startup code after reset
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           
  1027                           ;psect for function _main
  1028  0639                     _main:	
  1029                           
  1030                           ;main.c: 62: t_fp speed = convert_to_fp(130, 1500);
  1031                           
  1032                           ;incstack = 0
  1033                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1034  0639  3082               	movlw	130
  1035  063A  00F0               	movwf	convert_to_fp@int_part
  1036  063B  3000               	movlw	0
  1037  063C  00F1               	movwf	convert_to_fp@int_part+1
  1038  063D  30DC               	movlw	220
  1039  063E  00F2               	movwf	convert_to_fp@fract_part
  1040  063F  3005               	movlw	5
  1041  0640  00F3               	movwf	convert_to_fp@fract_part+1
  1042  0641  3186  2696  3186   	fcall	_convert_to_fp
  1043  0644  0870               	movf	?_convert_to_fp,w
  1044  0645  0020               	movlb	0	; select bank0
  1045  0646  00BB               	movwf	main@speed
  1046  0647  0871               	movf	?_convert_to_fp+1,w
  1047  0648  00BC               	movwf	main@speed+1
  1048  0649  0872               	movf	?_convert_to_fp+2,w
  1049  064A  00BD               	movwf	main@speed+2
  1050                           
  1051                           ;main.c: 63: speed = multiply_fp(speed, ratio_mph);
  1052  064B  083B               	movf	main@speed,w
  1053  064C  00A0               	movwf	multiply_fp@n1
  1054  064D  083C               	movf	main@speed+1,w
  1055  064E  00A1               	movwf	multiply_fp@n1+1
  1056  064F  083D               	movf	main@speed+2,w
  1057  0650  00A2               	movwf	multiply_fp@n1+2
  1058  0651  3000               	movlw	low (_ratio_mph| (0+32768))
  1059  0652  0084               	movwf	4
  1060  0653  3088               	movlw	high (_ratio_mph| (0+32768))
  1061  0654  0085               	movwf	5
  1062  0655  3F00               	moviw [0]fsr0
  1063  0656  00A3               	movwf	multiply_fp@n2
  1064  0657  3F01               	moviw [1]fsr0
  1065  0658  00A4               	movwf	multiply_fp@n2+1
  1066  0659  3F02               	moviw [2]fsr0
  1067  065A  00A5               	movwf	multiply_fp@n2+2
  1068  065B  3187  270F  3186   	fcall	_multiply_fp
  1069  065E  0020               	movlb	0	; select bank0
  1070  065F  0820               	movf	?_multiply_fp,w
  1071  0660  00BB               	movwf	main@speed
  1072  0661  0821               	movf	?_multiply_fp+1,w
  1073  0662  00BC               	movwf	main@speed+1
  1074  0663  0822               	movf	?_multiply_fp+2,w
  1075  0664  00BD               	movwf	main@speed+2
  1076                           
  1077                           ;main.c: 65: char tmp=0;
  1078  0665  01BA               	clrf	main@tmp
  1079  0666                     l27:	
  1080                           ;main.c: 84: while (1)
  1081                           
  1082                           
  1083                           ;main.c: 85: {
  1084  0666  2E66               	goto	l27
  1085  0667                     __end_of_main:	
  1086                           
  1087                           	psect	text1
  1088  070F                     __ptext1:	
  1089 ;; *************** function _multiply_fp *****************
  1090 ;; Defined at:
  1091 ;;		line 40 in file "fixed_point.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;  n1              3    0[BANK0 ] unsigned um
  1094 ;;  n2              3    3[BANK0 ] unsigned um
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;  res             4   16[BANK0 ] unsigned long 
  1097 ;;  n2_fra          3   23[BANK0 ] unsigned um
  1098 ;;  n1_fra          3   20[BANK0 ] unsigned um
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  3    0[BANK0 ] unsigned um
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0, pclath, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1108 ;;      Params:         0       6       0       0       0       0
  1109 ;;      Locals:         0      10       0       0       0       0
  1110 ;;      Temps:          0      10       0       0       0       0
  1111 ;;      Totals:         0      26       0       0       0       0
  1112 ;;Total ram usage:       26 bytes
  1113 ;; Hardware stack levels used:    1
  1114 ;; Hardware stack levels required when called:    1
  1115 ;; This function calls:
  1116 ;;		___lmul
  1117 ;; This function is called by:
  1118 ;;		_main
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           
  1123                           ;psect for function _multiply_fp
  1124  070F                     _multiply_fp:	
  1125                           
  1126                           ;fixed_point.c: 42: t_fp n1_fra, n2_fra;
  1127                           ;fixed_point.c: 43: n1_fra = (n1 << (24-14)) >> (24-14);
  1128                           
  1129                           ;incstack = 0
  1130                           ; Regs used in _multiply_fp: [wreg+status,2+status,0+pclath+cstack]
  1131  070F  30FF               	movlw	255
  1132  0710  0020               	movlb	0	; select bank0
  1133  0711  00A6               	movwf	??_multiply_fp
  1134  0712  303F               	movlw	63
  1135  0713  00A7               	movwf	??_multiply_fp+1
  1136  0714  3000               	movlw	0
  1137  0715  00A8               	movwf	??_multiply_fp+2
  1138  0716  0820               	movf	multiply_fp@n1,w
  1139  0717  05A6               	andwf	??_multiply_fp,f
  1140  0718  0821               	movf	multiply_fp@n1+1,w
  1141  0719  05A7               	andwf	??_multiply_fp+1,f
  1142  071A  0822               	movf	multiply_fp@n1+2,w
  1143  071B  05A8               	andwf	??_multiply_fp+2,f
  1144  071C  0826               	movf	??_multiply_fp,w
  1145  071D  00B4               	movwf	multiply_fp@n1_fra
  1146  071E  0827               	movf	??_multiply_fp+1,w
  1147  071F  00B5               	movwf	multiply_fp@n1_fra+1
  1148  0720  0828               	movf	??_multiply_fp+2,w
  1149  0721  00B6               	movwf	multiply_fp@n1_fra+2
  1150                           
  1151                           ;fixed_point.c: 44: n2_fra = (n2 << (24-14)) >> (24-14);
  1152  0722  30FF               	movlw	255
  1153  0723  00A6               	movwf	??_multiply_fp
  1154  0724  303F               	movlw	63
  1155  0725  00A7               	movwf	??_multiply_fp+1
  1156  0726  3000               	movlw	0
  1157  0727  00A8               	movwf	??_multiply_fp+2
  1158  0728  0823               	movf	multiply_fp@n2,w
  1159  0729  05A6               	andwf	??_multiply_fp,f
  1160  072A  0824               	movf	multiply_fp@n2+1,w
  1161  072B  05A7               	andwf	??_multiply_fp+1,f
  1162  072C  0825               	movf	multiply_fp@n2+2,w
  1163  072D  05A8               	andwf	??_multiply_fp+2,f
  1164  072E  0826               	movf	??_multiply_fp,w
  1165  072F  00B7               	movwf	multiply_fp@n2_fra
  1166  0730  0827               	movf	??_multiply_fp+1,w
  1167  0731  00B8               	movwf	multiply_fp@n2_fra+1
  1168  0732  0828               	movf	??_multiply_fp+2,w
  1169  0733  00B9               	movwf	multiply_fp@n2_fra+2
  1170                           
  1171                           ;fixed_point.c: 45: unsigned long long res = ((unsigned long long) (n1 >> 14) * (unsigne
      +                          d long long) (n2 >> 14))<<14;
  1172  0734  0820               	movf	multiply_fp@n1,w
  1173  0735  00A6               	movwf	??_multiply_fp
  1174  0736  0821               	movf	multiply_fp@n1+1,w
  1175  0737  00A7               	movwf	??_multiply_fp+1
  1176  0738  0822               	movf	multiply_fp@n1+2,w
  1177  0739  00A8               	movwf	??_multiply_fp+2
  1178  073A  300E               	movlw	14
  1179  073B                     u475:	
  1180  073B  36A8               	lsrf	??_multiply_fp+2,f
  1181  073C  0CA7               	rrf	??_multiply_fp+1,f
  1182  073D  0CA6               	rrf	??_multiply_fp,f
  1183  073E  0B89               	decfsz	9,f
  1184  073F  2F3B               	goto	u475
  1185  0740  0826               	movf	??_multiply_fp,w
  1186  0741  00F0               	movwf	___lmul@multiplier
  1187  0742  0827               	movf	??_multiply_fp+1,w
  1188  0743  00F1               	movwf	___lmul@multiplier+1
  1189  0744  0828               	movf	??_multiply_fp+2,w
  1190  0745  00F2               	movwf	___lmul@multiplier+2
  1191  0746  01F3               	clrf	___lmul@multiplier+3
  1192  0747  0823               	movf	multiply_fp@n2,w
  1193  0748  00A9               	movwf	??_multiply_fp+3
  1194  0749  0824               	movf	multiply_fp@n2+1,w
  1195  074A  00AA               	movwf	??_multiply_fp+4
  1196  074B  0825               	movf	multiply_fp@n2+2,w
  1197  074C  00AB               	movwf	??_multiply_fp+5
  1198  074D  300E               	movlw	14
  1199  074E                     u485:	
  1200  074E  36AB               	lsrf	??_multiply_fp+5,f
  1201  074F  0CAA               	rrf	??_multiply_fp+4,f
  1202  0750  0CA9               	rrf	??_multiply_fp+3,f
  1203  0751  0B89               	decfsz	9,f
  1204  0752  2F4E               	goto	u485
  1205  0753  0829               	movf	??_multiply_fp+3,w
  1206  0754  00F4               	movwf	___lmul@multiplicand
  1207  0755  082A               	movf	??_multiply_fp+4,w
  1208  0756  00F5               	movwf	___lmul@multiplicand+1
  1209  0757  082B               	movf	??_multiply_fp+5,w
  1210  0758  00F6               	movwf	___lmul@multiplicand+2
  1211  0759  01F7               	clrf	___lmul@multiplicand+3
  1212  075A  3186  2667  3187   	fcall	___lmul
  1213  075D  0870               	movf	?___lmul,w
  1214  075E  0020               	movlb	0	; select bank0
  1215  075F  00AC               	movwf	??_multiply_fp+6
  1216  0760  0871               	movf	?___lmul+1,w
  1217  0761  00AD               	movwf	??_multiply_fp+7
  1218  0762  0872               	movf	?___lmul+2,w
  1219  0763  00AE               	movwf	??_multiply_fp+8
  1220  0764  0873               	movf	?___lmul+3,w
  1221  0765  00AF               	movwf	??_multiply_fp+9
  1222  0766  300E               	movlw	14
  1223  0767                     u495:	
  1224  0767  35AC               	lslf	??_multiply_fp+6,f
  1225  0768  0DAD               	rlf	??_multiply_fp+7,f
  1226  0769  0DAE               	rlf	??_multiply_fp+8,f
  1227  076A  0DAF               	rlf	??_multiply_fp+9,f
  1228  076B  0B89               	decfsz	9,f
  1229  076C  2F67               	goto	u495
  1230  076D  082F               	movf	??_multiply_fp+9,w
  1231  076E  00B3               	movwf	multiply_fp@res+3
  1232  076F  082E               	movf	??_multiply_fp+8,w
  1233  0770  00B2               	movwf	multiply_fp@res+2
  1234  0771  082D               	movf	??_multiply_fp+7,w
  1235  0772  00B1               	movwf	multiply_fp@res+1
  1236  0773  082C               	movf	??_multiply_fp+6,w
  1237  0774  00B0               	movwf	multiply_fp@res
  1238                           
  1239                           ;fixed_point.c: 46: res+ = ((unsigned long long) (n1 >> 14) * (unsigned long long) n2_fr
      +                          a);
  1240  0775  0820               	movf	multiply_fp@n1,w
  1241  0776  00A6               	movwf	??_multiply_fp
  1242  0777  0821               	movf	multiply_fp@n1+1,w
  1243  0778  00A7               	movwf	??_multiply_fp+1
  1244  0779  0822               	movf	multiply_fp@n1+2,w
  1245  077A  00A8               	movwf	??_multiply_fp+2
  1246  077B  300E               	movlw	14
  1247  077C                     u505:	
  1248  077C  36A8               	lsrf	??_multiply_fp+2,f
  1249  077D  0CA7               	rrf	??_multiply_fp+1,f
  1250  077E  0CA6               	rrf	??_multiply_fp,f
  1251  077F  0B89               	decfsz	9,f
  1252  0780  2F7C               	goto	u505
  1253  0781  0826               	movf	??_multiply_fp,w
  1254  0782  00F0               	movwf	___lmul@multiplier
  1255  0783  0827               	movf	??_multiply_fp+1,w
  1256  0784  00F1               	movwf	___lmul@multiplier+1
  1257  0785  0828               	movf	??_multiply_fp+2,w
  1258  0786  00F2               	movwf	___lmul@multiplier+2
  1259  0787  01F3               	clrf	___lmul@multiplier+3
  1260  0788  0837               	movf	multiply_fp@n2_fra,w
  1261  0789  00F4               	movwf	___lmul@multiplicand
  1262  078A  0838               	movf	multiply_fp@n2_fra+1,w
  1263  078B  00F5               	movwf	___lmul@multiplicand+1
  1264  078C  0839               	movf	multiply_fp@n2_fra+2,w
  1265  078D  00F6               	movwf	___lmul@multiplicand+2
  1266  078E  01F7               	clrf	___lmul@multiplicand+3
  1267  078F  3186  2667  3187   	fcall	___lmul
  1268  0792  0870               	movf	?___lmul,w
  1269  0793  0020               	movlb	0	; select bank0
  1270  0794  07B0               	addwf	multiply_fp@res,f
  1271  0795  0871               	movf	?___lmul+1,w
  1272  0796  3DB1               	addwfc	multiply_fp@res+1,f
  1273  0797  0872               	movf	?___lmul+2,w
  1274  0798  3DB2               	addwfc	multiply_fp@res+2,f
  1275  0799  0873               	movf	?___lmul+3,w
  1276  079A  3DB3               	addwfc	multiply_fp@res+3,f
  1277                           
  1278                           ;fixed_point.c: 47: res+ = ((unsigned long long) (n2 >> 14) * (unsigned long long) n1_fr
      +                          a);
  1279  079B  0823               	movf	multiply_fp@n2,w
  1280  079C  00A6               	movwf	??_multiply_fp
  1281  079D  0824               	movf	multiply_fp@n2+1,w
  1282  079E  00A7               	movwf	??_multiply_fp+1
  1283  079F  0825               	movf	multiply_fp@n2+2,w
  1284  07A0  00A8               	movwf	??_multiply_fp+2
  1285  07A1  300E               	movlw	14
  1286  07A2                     u515:	
  1287  07A2  36A8               	lsrf	??_multiply_fp+2,f
  1288  07A3  0CA7               	rrf	??_multiply_fp+1,f
  1289  07A4  0CA6               	rrf	??_multiply_fp,f
  1290  07A5  0B89               	decfsz	9,f
  1291  07A6  2FA2               	goto	u515
  1292  07A7  0826               	movf	??_multiply_fp,w
  1293  07A8  00F0               	movwf	___lmul@multiplier
  1294  07A9  0827               	movf	??_multiply_fp+1,w
  1295  07AA  00F1               	movwf	___lmul@multiplier+1
  1296  07AB  0828               	movf	??_multiply_fp+2,w
  1297  07AC  00F2               	movwf	___lmul@multiplier+2
  1298  07AD  01F3               	clrf	___lmul@multiplier+3
  1299  07AE  0834               	movf	multiply_fp@n1_fra,w
  1300  07AF  00F4               	movwf	___lmul@multiplicand
  1301  07B0  0835               	movf	multiply_fp@n1_fra+1,w
  1302  07B1  00F5               	movwf	___lmul@multiplicand+1
  1303  07B2  0836               	movf	multiply_fp@n1_fra+2,w
  1304  07B3  00F6               	movwf	___lmul@multiplicand+2
  1305  07B4  01F7               	clrf	___lmul@multiplicand+3
  1306  07B5  3186  2667  3187   	fcall	___lmul
  1307  07B8  0870               	movf	?___lmul,w
  1308  07B9  0020               	movlb	0	; select bank0
  1309  07BA  07B0               	addwf	multiply_fp@res,f
  1310  07BB  0871               	movf	?___lmul+1,w
  1311  07BC  3DB1               	addwfc	multiply_fp@res+1,f
  1312  07BD  0872               	movf	?___lmul+2,w
  1313  07BE  3DB2               	addwfc	multiply_fp@res+2,f
  1314  07BF  0873               	movf	?___lmul+3,w
  1315  07C0  3DB3               	addwfc	multiply_fp@res+3,f
  1316                           
  1317                           ;fixed_point.c: 48: res+ = ((unsigned long long) n1_fra * (unsigned long long) n2_fra)>>
      +                          14;
  1318  07C1  0834               	movf	multiply_fp@n1_fra,w
  1319  07C2  00F0               	movwf	___lmul@multiplier
  1320  07C3  0835               	movf	multiply_fp@n1_fra+1,w
  1321  07C4  00F1               	movwf	___lmul@multiplier+1
  1322  07C5  0836               	movf	multiply_fp@n1_fra+2,w
  1323  07C6  00F2               	movwf	___lmul@multiplier+2
  1324  07C7  01F3               	clrf	___lmul@multiplier+3
  1325  07C8  0837               	movf	multiply_fp@n2_fra,w
  1326  07C9  00F4               	movwf	___lmul@multiplicand
  1327  07CA  0838               	movf	multiply_fp@n2_fra+1,w
  1328  07CB  00F5               	movwf	___lmul@multiplicand+1
  1329  07CC  0839               	movf	multiply_fp@n2_fra+2,w
  1330  07CD  00F6               	movwf	___lmul@multiplicand+2
  1331  07CE  01F7               	clrf	___lmul@multiplicand+3
  1332  07CF  3186  2667  3187   	fcall	___lmul
  1333  07D2  0870               	movf	?___lmul,w
  1334  07D3  0020               	movlb	0	; select bank0
  1335  07D4  00A6               	movwf	??_multiply_fp
  1336  07D5  0871               	movf	?___lmul+1,w
  1337  07D6  00A7               	movwf	??_multiply_fp+1
  1338  07D7  0872               	movf	?___lmul+2,w
  1339  07D8  00A8               	movwf	??_multiply_fp+2
  1340  07D9  0873               	movf	?___lmul+3,w
  1341  07DA  00A9               	movwf	??_multiply_fp+3
  1342  07DB  300E               	movlw	14
  1343  07DC                     u525:	
  1344  07DC  36A9               	lsrf	??_multiply_fp+3,f
  1345  07DD  0CA8               	rrf	??_multiply_fp+2,f
  1346  07DE  0CA7               	rrf	??_multiply_fp+1,f
  1347  07DF  0CA6               	rrf	??_multiply_fp,f
  1348  07E0  0B89               	decfsz	9,f
  1349  07E1  2FDC               	goto	u525
  1350  07E2  0826               	movf	??_multiply_fp,w
  1351  07E3  07B0               	addwf	multiply_fp@res,f
  1352  07E4  0827               	movf	??_multiply_fp+1,w
  1353  07E5  3DB1               	addwfc	multiply_fp@res+1,f
  1354  07E6  0828               	movf	??_multiply_fp+2,w
  1355  07E7  3DB2               	addwfc	multiply_fp@res+2,f
  1356  07E8  0829               	movf	??_multiply_fp+3,w
  1357  07E9  3DB3               	addwfc	multiply_fp@res+3,f
  1358                           
  1359                           ;fixed_point.c: 49: return res;
  1360  07EA  0830               	movf	multiply_fp@res,w
  1361  07EB  00A0               	movwf	?_multiply_fp
  1362  07EC  0831               	movf	multiply_fp@res+1,w
  1363  07ED  00A1               	movwf	?_multiply_fp+1
  1364  07EE  0832               	movf	multiply_fp@res+2,w
  1365  07EF  00A2               	movwf	?_multiply_fp+2
  1366  07F0  0008               	return
  1367  07F1                     __end_of_multiply_fp:	
  1368                           
  1369                           	psect	text2
  1370  0667                     __ptext2:	
  1371 ;; *************** function ___lmul *****************
  1372 ;; Defined at:
  1373 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  multiplier      4    0[COMMON] unsigned long 
  1376 ;;  multiplicand    4    4[COMMON] unsigned long 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  product         4    8[COMMON] unsigned long 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  4    0[COMMON] unsigned long 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1388 ;;      Params:         8       0       0       0       0       0
  1389 ;;      Locals:         4       0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0
  1391 ;;      Totals:        12       0       0       0       0       0
  1392 ;;Total ram usage:       12 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_multiply_fp
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function ___lmul
  1403  0667                     ___lmul:	
  1404                           
  1405                           ;incstack = 0
  1406                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1407  0667  3000               	movlw	0
  1408  0668  00FB               	movwf	___lmul@product+3
  1409  0669  3000               	movlw	0
  1410  066A  00FA               	movwf	___lmul@product+2
  1411  066B  3000               	movlw	0
  1412  066C  00F9               	movwf	___lmul@product+1
  1413  066D  3000               	movlw	0
  1414  066E  00F8               	movwf	___lmul@product
  1415  066F                     l833:	
  1416  066F  1C70               	btfss	___lmul@multiplier,0
  1417  0670  2E79               	goto	l837
  1418  0671  0874               	movf	___lmul@multiplicand,w
  1419  0672  07F8               	addwf	___lmul@product,f
  1420  0673  0875               	movf	___lmul@multiplicand+1,w
  1421  0674  3DF9               	addwfc	___lmul@product+1,f
  1422  0675  0876               	movf	___lmul@multiplicand+2,w
  1423  0676  3DFA               	addwfc	___lmul@product+2,f
  1424  0677  0877               	movf	___lmul@multiplicand+3,w
  1425  0678  3DFB               	addwfc	___lmul@product+3,f
  1426  0679                     l837:	
  1427  0679  3001               	movlw	1
  1428  067A                     u395:	
  1429  067A  35F4               	lslf	___lmul@multiplicand,f
  1430  067B  0DF5               	rlf	___lmul@multiplicand+1,f
  1431  067C  0DF6               	rlf	___lmul@multiplicand+2,f
  1432  067D  0DF7               	rlf	___lmul@multiplicand+3,f
  1433  067E  0B89               	decfsz	9,f
  1434  067F  2E7A               	goto	u395
  1435  0680  3001               	movlw	1
  1436  0681                     u405:	
  1437  0681  36F3               	lsrf	___lmul@multiplier+3,f
  1438  0682  0CF2               	rrf	___lmul@multiplier+2,f
  1439  0683  0CF1               	rrf	___lmul@multiplier+1,f
  1440  0684  0CF0               	rrf	___lmul@multiplier,f
  1441  0685  0B89               	decfsz	9,f
  1442  0686  2E81               	goto	u405
  1443  0687  0873               	movf	___lmul@multiplier+3,w
  1444  0688  0472               	iorwf	___lmul@multiplier+2,w
  1445  0689  0471               	iorwf	___lmul@multiplier+1,w
  1446  068A  0470               	iorwf	___lmul@multiplier,w
  1447  068B  1D03               	skipz
  1448  068C  2E6F               	goto	l833
  1449  068D  087B               	movf	___lmul@product+3,w
  1450  068E  00F3               	movwf	?___lmul+3
  1451  068F  087A               	movf	___lmul@product+2,w
  1452  0690  00F2               	movwf	?___lmul+2
  1453  0691  0879               	movf	___lmul@product+1,w
  1454  0692  00F1               	movwf	?___lmul+1
  1455  0693  0878               	movf	___lmul@product,w
  1456  0694  00F0               	movwf	?___lmul
  1457  0695  0008               	return
  1458  0696                     __end_of___lmul:	
  1459                           
  1460                           	psect	text3
  1461  0696                     __ptext3:	
  1462 ;; *************** function _convert_to_fp *****************
  1463 ;; Defined at:
  1464 ;;		line 11 in file "fixed_point.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  int_part        2    0[COMMON] unsigned short 
  1467 ;;  fract_part      2    2[COMMON] unsigned short 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  i_bit           1    4[BANK0 ] unsigned char 
  1470 ;;  res             3    5[BANK0 ] unsigned um
  1471 ;;  tmp_left        2    2[BANK0 ] unsigned short 
  1472 ;;  res_fract       2    0[BANK0 ] unsigned short 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  3    0[COMMON] unsigned um
  1475 ;; Registers used:
  1476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1482 ;;      Params:         4       0       0       0       0       0
  1483 ;;      Locals:         0       8       0       0       0       0
  1484 ;;      Temps:          6       0       0       0       0       0
  1485 ;;      Totals:        10       8       0       0       0       0
  1486 ;;Total ram usage:       18 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; This function calls:
  1489 ;;		Nothing
  1490 ;; This function is called by:
  1491 ;;		_main
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           
  1496                           ;psect for function _convert_to_fp
  1497  0696                     _convert_to_fp:	
  1498                           
  1499                           ;fixed_point.c: 18: t_fp res = 0;
  1500                           
  1501                           ;incstack = 0
  1502                           ; Regs used in _convert_to_fp: [wreg-fsr0h+status,2+status,0+pclath]
  1503  0696  3000               	movlw	0
  1504  0697  0020               	movlb	0	; select bank0
  1505  0698  00A5               	movwf	convert_to_fp@res
  1506  0699  3000               	movlw	0
  1507  069A  00A6               	movwf	convert_to_fp@res+1
  1508  069B  3000               	movlw	0
  1509  069C  00A7               	movwf	convert_to_fp@res+2
  1510                           
  1511                           ;fixed_point.c: 20: res = int_part;
  1512  069D  0870               	movf	convert_to_fp@int_part,w
  1513  069E  00A5               	movwf	convert_to_fp@res
  1514  069F  0871               	movf	convert_to_fp@int_part+1,w
  1515  06A0  00A6               	movwf	convert_to_fp@res+1
  1516  06A1  01A7               	clrf	convert_to_fp@res+2
  1517                           
  1518                           ;fixed_point.c: 21: res = res << 14;
  1519  06A2  0825               	movf	convert_to_fp@res,w
  1520  06A3  00F4               	movwf	??_convert_to_fp
  1521  06A4  0826               	movf	convert_to_fp@res+1,w
  1522  06A5  00F5               	movwf	??_convert_to_fp+1
  1523  06A6  0827               	movf	convert_to_fp@res+2,w
  1524  06A7  00F6               	movwf	??_convert_to_fp+2
  1525  06A8  300E               	movlw	14
  1526  06A9                     u425:	
  1527  06A9  35F4               	lslf	??_convert_to_fp,f
  1528  06AA  0DF5               	rlf	??_convert_to_fp+1,f
  1529  06AB  0DF6               	rlf	??_convert_to_fp+2,f
  1530  06AC  0B89               	decfsz	9,f
  1531  06AD  2EA9               	goto	u425
  1532  06AE  0874               	movf	??_convert_to_fp,w
  1533  06AF  00A5               	movwf	convert_to_fp@res
  1534  06B0  0875               	movf	??_convert_to_fp+1,w
  1535  06B1  00A6               	movwf	convert_to_fp@res+1
  1536  06B2  0876               	movf	??_convert_to_fp+2,w
  1537  06B3  00A7               	movwf	convert_to_fp@res+2
  1538                           
  1539                           ;fixed_point.c: 23: unsigned short tmp_left = fract_part;
  1540  06B4  0873               	movf	convert_to_fp@fract_part+1,w
  1541  06B5  00A3               	movwf	convert_to_fp@tmp_left+1
  1542  06B6  0872               	movf	convert_to_fp@fract_part,w
  1543  06B7  00A2               	movwf	convert_to_fp@tmp_left
  1544                           
  1545                           ;fixed_point.c: 24: unsigned short res_fract = 0;
  1546  06B8  01A0               	clrf	convert_to_fp@res_fract
  1547  06B9  01A1               	clrf	convert_to_fp@res_fract+1
  1548                           
  1549                           ;fixed_point.c: 25: const unsigned short one = 1;
  1550                           ;fixed_point.c: 26: for (unsigned char i_bit = 0; i_bit < 14; i_bit++)
  1551  06BA  01A4               	clrf	convert_to_fp@i_bit
  1552  06BB  300E               	movlw	14
  1553  06BC  0224               	subwf	convert_to_fp@i_bit,w
  1554  06BD  1803               	btfsc	3,0
  1555  06BE  2EF1               	goto	l869
  1556  06BF                     l859:	
  1557                           
  1558                           ;fixed_point.c: 27: {
  1559                           ;fixed_point.c: 28: tmp_left = tmp_left << 1;
  1560  06BF  3522               	lslf	convert_to_fp@tmp_left,w
  1561  06C0  00A2               	movwf	convert_to_fp@tmp_left
  1562  06C1  0D23               	rlf	convert_to_fp@tmp_left+1,w
  1563  06C2  00A3               	movwf	convert_to_fp@tmp_left+1
  1564                           
  1565                           ;fixed_point.c: 29: if (tmp_left >= 10000)
  1566  06C3  3027               	movlw	39
  1567  06C4  0223               	subwf	convert_to_fp@tmp_left+1,w
  1568  06C5  3010               	movlw	16
  1569  06C6  1903               	skipnz
  1570  06C7  0222               	subwf	convert_to_fp@tmp_left,w
  1571  06C8  1C03               	skipc
  1572  06C9  2EE9               	goto	l865
  1573                           
  1574                           ;fixed_point.c: 30: {
  1575                           ;fixed_point.c: 31: res_fract = res_fract | one<<(14-i_bit-1);
  1576  06CA  3003               	movlw	low (convert_to_fp@one| (0+32768))
  1577  06CB  0084               	movwf	4
  1578  06CC  3088               	movlw	high (convert_to_fp@one| (0+32768))
  1579  06CD  0085               	movwf	5
  1580  06CE  3F00               	moviw [0]fsr0
  1581  06CF  00F4               	movwf	??_convert_to_fp
  1582  06D0  3F01               	moviw [1]fsr0
  1583  06D1  00F5               	movwf	??_convert_to_fp+1
  1584  06D2  0824               	movf	convert_to_fp@i_bit,w
  1585  06D3  3E01               	addlw	1
  1586  06D4  3AFF               	xorlw	255
  1587  06D5  3E01               	addlw	1
  1588  06D6  3E0E               	addlw	14
  1589  06D7  0A89               	incf	9,f
  1590  06D8  2EDB               	goto	u454
  1591  06D9                     u455:	
  1592  06D9  35F4               	lslf	??_convert_to_fp,f
  1593  06DA  0DF5               	rlf	??_convert_to_fp+1,f
  1594  06DB                     u454:	
  1595  06DB  0B89               	decfsz	9,f
  1596  06DC  2ED9               	goto	u455
  1597  06DD  0820               	movf	convert_to_fp@res_fract,w
  1598  06DE  0474               	iorwf	??_convert_to_fp,w
  1599  06DF  00A0               	movwf	convert_to_fp@res_fract
  1600  06E0  0821               	movf	convert_to_fp@res_fract+1,w
  1601  06E1  0475               	iorwf	??_convert_to_fp+1,w
  1602  06E2  00A1               	movwf	convert_to_fp@res_fract+1
  1603                           
  1604                           ;fixed_point.c: 32: tmp_left = tmp_left - 10000;
  1605  06E3  0822               	movf	convert_to_fp@tmp_left,w
  1606  06E4  3EF0               	addlw	240
  1607  06E5  00A2               	movwf	convert_to_fp@tmp_left
  1608  06E6  30D8               	movlw	216
  1609  06E7  3D23               	addwfc	convert_to_fp@tmp_left+1,w
  1610  06E8  00A3               	movwf	convert_to_fp@tmp_left+1
  1611  06E9                     l865:	
  1612  06E9  3001               	movlw	1
  1613  06EA  00F4               	movwf	??_convert_to_fp
  1614  06EB  0874               	movf	??_convert_to_fp,w
  1615  06EC  07A4               	addwf	convert_to_fp@i_bit,f
  1616  06ED  300E               	movlw	14
  1617  06EE  0224               	subwf	convert_to_fp@i_bit,w
  1618  06EF  1C03               	skipc
  1619  06F0  2EBF               	goto	l859
  1620  06F1                     l869:	
  1621                           
  1622                           ;fixed_point.c: 33: }
  1623                           ;fixed_point.c: 34: }
  1624                           ;fixed_point.c: 36: res = res + res_fract;
  1625  06F1  0825               	movf	convert_to_fp@res,w
  1626  06F2  00F4               	movwf	??_convert_to_fp
  1627  06F3  0826               	movf	convert_to_fp@res+1,w
  1628  06F4  00F5               	movwf	??_convert_to_fp+1
  1629  06F5  0827               	movf	convert_to_fp@res+2,w
  1630  06F6  00F6               	movwf	??_convert_to_fp+2
  1631  06F7  0820               	movf	convert_to_fp@res_fract,w
  1632  06F8  00F7               	movwf	??_convert_to_fp+3
  1633  06F9  0821               	movf	convert_to_fp@res_fract+1,w
  1634  06FA  00F8               	movwf	??_convert_to_fp+4
  1635  06FB  01F9               	clrf	??_convert_to_fp+5
  1636  06FC  0877               	movf	??_convert_to_fp+3,w
  1637  06FD  07F4               	addwf	??_convert_to_fp,f
  1638  06FE  0878               	movf	??_convert_to_fp+4,w
  1639  06FF  3DF5               	addwfc	??_convert_to_fp+1,f
  1640  0700  0879               	movf	??_convert_to_fp+5,w
  1641  0701  3DF6               	addwfc	??_convert_to_fp+2,f
  1642  0702  0874               	movf	??_convert_to_fp,w
  1643  0703  00A5               	movwf	convert_to_fp@res
  1644  0704  0875               	movf	??_convert_to_fp+1,w
  1645  0705  00A6               	movwf	convert_to_fp@res+1
  1646  0706  0876               	movf	??_convert_to_fp+2,w
  1647  0707  00A7               	movwf	convert_to_fp@res+2
  1648                           
  1649                           ;fixed_point.c: 37: return res;
  1650  0708  0825               	movf	convert_to_fp@res,w
  1651  0709  00F0               	movwf	?_convert_to_fp
  1652  070A  0826               	movf	convert_to_fp@res+1,w
  1653  070B  00F1               	movwf	?_convert_to_fp+1
  1654  070C  0827               	movf	convert_to_fp@res+2,w
  1655  070D  00F2               	movwf	?_convert_to_fp+2
  1656  070E  0008               	return
  1657  070F                     __end_of_convert_to_fp:	
  1658  007E                     btemp	set	126	;btemp
  1659  007E                     wtemp	set	126
  1660  007E                     wtemp0	set	126
  1661  0080                     wtemp1	set	128
  1662  0082                     wtemp2	set	130
  1663  0084                     wtemp3	set	132
  1664  0086                     wtemp4	set	134
  1665  0088                     wtemp5	set	136
  1666  007F                     wtemp6	set	127
  1667  007E                     ttemp	set	126
  1668  007E                     ttemp0	set	126
  1669  0081                     ttemp1	set	129
  1670  0084                     ttemp2	set	132
  1671  0087                     ttemp3	set	135
  1672  007F                     ttemp4	set	127
  1673  007E                     ltemp	set	126
  1674  007E                     ltemp0	set	126
  1675  0082                     ltemp1	set	130
  1676  0086                     ltemp2	set	134
  1677  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    5
    Data        1
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     30      38
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _multiply_fp->___lmul

Critical Paths under _main in BANK0

    _main->_multiply_fp

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1298
                                             26 BANK0      4     4      0
                      _convert_to_fp
                        _multiply_fp
 ---------------------------------------------------------------------------------
 (1) _multiply_fp                                         26    20      6     870
                                              0 BANK0     26    20      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     516
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _convert_to_fp                                       18    14      4     403
                                              0 COMMON    10     6      4
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _convert_to_fp
   _multiply_fp
     ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      34       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1E      26       6       47.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      34      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Sep 19 06:53:58 2016

             __CFG_CP$OFF 0000                        l27 0666                       l833 066F  
                     l837 0679                       l865 06E9                       l859 06BF  
                     l869 06F1                       u405 0681                       u425 06A9  
                     u505 077C              __CFG_CPD$OFF 0000                       u515 07A2  
                     u525 07DC                       u454 06DB                       u455 06D9  
                     u395 067A                       u475 073B                       u485 074E  
                     u495 0767              __CFG_BORV$LO 0000                       wreg 0009  
            __CFG_IESO$ON 0000              __CFG_LVP$OFF 0000                      _LATA 010C  
                    _LATB 010D                      _PLLR 04D6                      _WPUA 020C  
                    _WPUB 020D              __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000  
                    _main 0639                      fsr0h 0005                      fsr0l 0004  
                    btemp 007E             __CFG_BOREN$ON 0000                      ltemp 007E  
                    start 0002                      ttemp 007E                      wtemp 007E  
           __CFG_MCLRE$ON 0000             __CFG_PLLEN$ON 0000                     ?_main 0070  
           _convert_to_fp 0696             __CFG_WDTE$OFF 0000                     _TRISA 008C  
                   _TRISB 008D       ___lmul@multiplicand 0074                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
           multiply_fp@n1 0020             multiply_fp@n2 0023           __initialization 07F1  
            __end_of_main 0667            ?_convert_to_fp 0070                    ??_main 007C  
            _b_last_state 007C          _b_push_confirmed 0043           _b_count_pressed 0040  
                  _ANSELA 018C                    _ANSELB 018D                    _OSCCON 0099  
          __CFG_PWRTE$OFF 0000        convert_to_fp@i_bit 0024                    ___lmul 0667  
          __CFG_STVREN$ON 0000    convert_to_fp@res_fract 0020              ?_multiply_fp 0020  
 __end_of__initialization 07FD            multiply_fp@res 0030            __pcstackCOMMON 0070  
            __pidataBANK0 0638           ??_convert_to_fp 0074            _OPTION_REGbits 0095  
_b_has_once_been_released 0042                __pbssBANK0 003E          _b_count_released 0041  
              __pmaintext 0639                   ?___lmul 0070            ___lmul@product 0078  
                 _APFCON0 011D                   _APFCON1 011E                   _OSCSTAT 009A  
                 _OSCTUNE 0098           __size_of___lmul 002F   convert_to_fp@fract_part 0072  
                 __ptext1 070F                   __ptext2 0667                   __ptext3 0696  
                 main@tmp 003A      end_of_initialization 07FD         __end_of_ratio_mph 0803  
               _LED_state 0045      __size_of_multiply_fp 00E2              __pstringtext 0800  
        __CFG_FOSC$INTOSC 0000            __end_of___lmul 0696          convert_to_fp@one 0803  
        convert_to_fp@res 0025       start_initialization 07F1                  ??___lmul 0078  
             __pdataBANK0 0045     convert_to_fp@int_part 0070     __end_of_convert_to_fp 070F  
             __pbssCOMMON 007C                 ___latbits 0001             __pcstackBANK0 0020  
   convert_to_fp@tmp_left 0022                 _ratio_mph 0800                 main@speed 003B  
       ___lmul@multiplier 0070             ??_multiply_fp 0026  __end_ofconvert_to_fp@one 0805  
             _LED_counter 003E         _b_confirmed_state 003F             __size_of_main 002E  
     __end_of_multiply_fp 07F1       _b_release_confirmed 0044         __CFG_CLKOUTEN$OFF 0000  
             _multiply_fp 070F    __size_of_convert_to_fp 0079         multiply_fp@n1_fra 0034  
       multiply_fp@n2_fra 0037  



Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Sep 19 20:17:11 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     	;# 
    32  0001                     	;# 
    33  0002                     	;# 
    34  0003                     	;# 
    35  0004                     	;# 
    36  0005                     	;# 
    37  0006                     	;# 
    38  0007                     	;# 
    39  0008                     	;# 
    40  0009                     	;# 
    41  000A                     	;# 
    42  000B                     	;# 
    43  000C                     	;# 
    44  000D                     	;# 
    45  0011                     	;# 
    46  0012                     	;# 
    47  0013                     	;# 
    48  0014                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0016                     	;# 
    52  0017                     	;# 
    53  0018                     	;# 
    54  0019                     	;# 
    55  001A                     	;# 
    56  001B                     	;# 
    57  001C                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  0091                     	;# 
    63  0092                     	;# 
    64  0093                     	;# 
    65  0094                     	;# 
    66  0095                     	;# 
    67  0096                     	;# 
    68  0097                     	;# 
    69  0098                     	;# 
    70  0099                     	;# 
    71  009A                     	;# 
    72  009B                     	;# 
    73  009B                     	;# 
    74  009C                     	;# 
    75  009D                     	;# 
    76  009E                     	;# 
    77  010C                     	;# 
    78  010D                     	;# 
    79  0111                     	;# 
    80  0112                     	;# 
    81  0113                     	;# 
    82  0114                     	;# 
    83  0115                     	;# 
    84  0116                     	;# 
    85  0117                     	;# 
    86  0118                     	;# 
    87  0119                     	;# 
    88  011A                     	;# 
    89  011B                     	;# 
    90  011D                     	;# 
    91  011E                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94  0191                     	;# 
    95  0191                     	;# 
    96  0192                     	;# 
    97  0193                     	;# 
    98  0193                     	;# 
    99  0193                     	;# 
   100  0194                     	;# 
   101  0195                     	;# 
   102  0196                     	;# 
   103  0199                     	;# 
   104  019A                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019C                     	;# 
   110  019C                     	;# 
   111  019D                     	;# 
   112  019E                     	;# 
   113  019F                     	;# 
   114  020C                     	;# 
   115  020D                     	;# 
   116  0211                     	;# 
   117  0211                     	;# 
   118  0212                     	;# 
   119  0212                     	;# 
   120  0213                     	;# 
   121  0213                     	;# 
   122  0214                     	;# 
   123  0214                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0215                     	;# 
   127  0216                     	;# 
   128  0216                     	;# 
   129  0217                     	;# 
   130  0217                     	;# 
   131  0219                     	;# 
   132  021A                     	;# 
   133  021B                     	;# 
   134  021C                     	;# 
   135  021D                     	;# 
   136  021E                     	;# 
   137  021F                     	;# 
   138  0291                     	;# 
   139  0291                     	;# 
   140  0292                     	;# 
   141  0293                     	;# 
   142  0294                     	;# 
   143  0295                     	;# 
   144  0295                     	;# 
   145  0296                     	;# 
   146  0298                     	;# 
   147  0298                     	;# 
   148  0299                     	;# 
   149  029A                     	;# 
   150  029B                     	;# 
   151  029C                     	;# 
   152  029C                     	;# 
   153  029D                     	;# 
   154  029E                     	;# 
   155  029E                     	;# 
   156  0311                     	;# 
   157  0311                     	;# 
   158  0312                     	;# 
   159  0313                     	;# 
   160  0318                     	;# 
   161  0318                     	;# 
   162  0319                     	;# 
   163  031A                     	;# 
   164  0394                     	;# 
   165  0395                     	;# 
   166  0396                     	;# 
   167  039A                     	;# 
   168  039C                     	;# 
   169  039D                     	;# 
   170  039E                     	;# 
   171  039F                     	;# 
   172  0415                     	;# 
   173  0416                     	;# 
   174  0417                     	;# 
   175  041C                     	;# 
   176  041D                     	;# 
   177  041E                     	;# 
   178  0FE4                     	;# 
   179  0FE5                     	;# 
   180  0FE6                     	;# 
   181  0FE7                     	;# 
   182  0FE8                     	;# 
   183  0FE9                     	;# 
   184  0FEA                     	;# 
   185  0FEB                     	;# 
   186  0FED                     	;# 
   187  0FEE                     	;# 
   188  0FEF                     	;# 
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0008                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000D                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0093                     	;# 
   223  0094                     	;# 
   224  0095                     	;# 
   225  0096                     	;# 
   226  0097                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009A                     	;# 
   230  009B                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  0111                     	;# 
   238  0112                     	;# 
   239  0113                     	;# 
   240  0114                     	;# 
   241  0115                     	;# 
   242  0116                     	;# 
   243  0117                     	;# 
   244  0118                     	;# 
   245  0119                     	;# 
   246  011A                     	;# 
   247  011B                     	;# 
   248  011D                     	;# 
   249  011E                     	;# 
   250  018C                     	;# 
   251  018D                     	;# 
   252  0191                     	;# 
   253  0191                     	;# 
   254  0192                     	;# 
   255  0193                     	;# 
   256  0193                     	;# 
   257  0193                     	;# 
   258  0194                     	;# 
   259  0195                     	;# 
   260  0196                     	;# 
   261  0199                     	;# 
   262  019A                     	;# 
   263  019B                     	;# 
   264  019B                     	;# 
   265  019B                     	;# 
   266  019B                     	;# 
   267  019C                     	;# 
   268  019C                     	;# 
   269  019D                     	;# 
   270  019E                     	;# 
   271  019F                     	;# 
   272  020C                     	;# 
   273  020D                     	;# 
   274  0211                     	;# 
   275  0211                     	;# 
   276  0212                     	;# 
   277  0212                     	;# 
   278  0213                     	;# 
   279  0213                     	;# 
   280  0214                     	;# 
   281  0214                     	;# 
   282  0215                     	;# 
   283  0215                     	;# 
   284  0215                     	;# 
   285  0216                     	;# 
   286  0216                     	;# 
   287  0217                     	;# 
   288  0217                     	;# 
   289  0219                     	;# 
   290  021A                     	;# 
   291  021B                     	;# 
   292  021C                     	;# 
   293  021D                     	;# 
   294  021E                     	;# 
   295  021F                     	;# 
   296  0291                     	;# 
   297  0291                     	;# 
   298  0292                     	;# 
   299  0293                     	;# 
   300  0294                     	;# 
   301  0295                     	;# 
   302  0295                     	;# 
   303  0296                     	;# 
   304  0298                     	;# 
   305  0298                     	;# 
   306  0299                     	;# 
   307  029A                     	;# 
   308  029B                     	;# 
   309  029C                     	;# 
   310  029C                     	;# 
   311  029D                     	;# 
   312  029E                     	;# 
   313  029E                     	;# 
   314  0311                     	;# 
   315  0311                     	;# 
   316  0312                     	;# 
   317  0313                     	;# 
   318  0318                     	;# 
   319  0318                     	;# 
   320  0319                     	;# 
   321  031A                     	;# 
   322  0394                     	;# 
   323  0395                     	;# 
   324  0396                     	;# 
   325  039A                     	;# 
   326  039C                     	;# 
   327  039D                     	;# 
   328  039E                     	;# 
   329  039F                     	;# 
   330  0415                     	;# 
   331  0416                     	;# 
   332  0417                     	;# 
   333  041C                     	;# 
   334  041D                     	;# 
   335  041E                     	;# 
   336  0FE4                     	;# 
   337  0FE5                     	;# 
   338  0FE6                     	;# 
   339  0FE7                     	;# 
   340  0FE8                     	;# 
   341  0FE9                     	;# 
   342  0FEA                     	;# 
   343  0FEB                     	;# 
   344  0FED                     	;# 
   345  0FEE                     	;# 
   346  0FEF                     	;# 
   347  0000                     	;# 
   348  0001                     	;# 
   349  0002                     	;# 
   350  0003                     	;# 
   351  0004                     	;# 
   352  0005                     	;# 
   353  0006                     	;# 
   354  0007                     	;# 
   355  0008                     	;# 
   356  0009                     	;# 
   357  000A                     	;# 
   358  000B                     	;# 
   359  000C                     	;# 
   360  000D                     	;# 
   361  0011                     	;# 
   362  0012                     	;# 
   363  0013                     	;# 
   364  0014                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0016                     	;# 
   368  0017                     	;# 
   369  0018                     	;# 
   370  0019                     	;# 
   371  001A                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  001E                     	;# 
   375  001F                     	;# 
   376  008C                     	;# 
   377  008D                     	;# 
   378  0091                     	;# 
   379  0092                     	;# 
   380  0093                     	;# 
   381  0094                     	;# 
   382  0095                     	;# 
   383  0096                     	;# 
   384  0097                     	;# 
   385  0098                     	;# 
   386  0099                     	;# 
   387  009A                     	;# 
   388  009B                     	;# 
   389  009B                     	;# 
   390  009C                     	;# 
   391  009D                     	;# 
   392  009E                     	;# 
   393  010C                     	;# 
   394  010D                     	;# 
   395  0111                     	;# 
   396  0112                     	;# 
   397  0113                     	;# 
   398  0114                     	;# 
   399  0115                     	;# 
   400  0116                     	;# 
   401  0117                     	;# 
   402  0118                     	;# 
   403  0119                     	;# 
   404  011A                     	;# 
   405  011B                     	;# 
   406  011D                     	;# 
   407  011E                     	;# 
   408  018C                     	;# 
   409  018D                     	;# 
   410  0191                     	;# 
   411  0191                     	;# 
   412  0192                     	;# 
   413  0193                     	;# 
   414  0193                     	;# 
   415  0193                     	;# 
   416  0194                     	;# 
   417  0195                     	;# 
   418  0196                     	;# 
   419  0199                     	;# 
   420  019A                     	;# 
   421  019B                     	;# 
   422  019B                     	;# 
   423  019B                     	;# 
   424  019B                     	;# 
   425  019C                     	;# 
   426  019C                     	;# 
   427  019D                     	;# 
   428  019E                     	;# 
   429  019F                     	;# 
   430  020C                     	;# 
   431  020D                     	;# 
   432  0211                     	;# 
   433  0211                     	;# 
   434  0212                     	;# 
   435  0212                     	;# 
   436  0213                     	;# 
   437  0213                     	;# 
   438  0214                     	;# 
   439  0214                     	;# 
   440  0215                     	;# 
   441  0215                     	;# 
   442  0215                     	;# 
   443  0216                     	;# 
   444  0216                     	;# 
   445  0217                     	;# 
   446  0217                     	;# 
   447  0219                     	;# 
   448  021A                     	;# 
   449  021B                     	;# 
   450  021C                     	;# 
   451  021D                     	;# 
   452  021E                     	;# 
   453  021F                     	;# 
   454  0291                     	;# 
   455  0291                     	;# 
   456  0292                     	;# 
   457  0293                     	;# 
   458  0294                     	;# 
   459  0295                     	;# 
   460  0295                     	;# 
   461  0296                     	;# 
   462  0298                     	;# 
   463  0298                     	;# 
   464  0299                     	;# 
   465  029A                     	;# 
   466  029B                     	;# 
   467  029C                     	;# 
   468  029C                     	;# 
   469  029D                     	;# 
   470  029E                     	;# 
   471  029E                     	;# 
   472  0311                     	;# 
   473  0311                     	;# 
   474  0312                     	;# 
   475  0313                     	;# 
   476  0318                     	;# 
   477  0318                     	;# 
   478  0319                     	;# 
   479  031A                     	;# 
   480  0394                     	;# 
   481  0395                     	;# 
   482  0396                     	;# 
   483  039A                     	;# 
   484  039C                     	;# 
   485  039D                     	;# 
   486  039E                     	;# 
   487  039F                     	;# 
   488  0415                     	;# 
   489  0416                     	;# 
   490  0417                     	;# 
   491  041C                     	;# 
   492  041D                     	;# 
   493  041E                     	;# 
   494  0FE4                     	;# 
   495  0FE5                     	;# 
   496  0FE6                     	;# 
   497  0FE7                     	;# 
   498  0FE8                     	;# 
   499  0FE9                     	;# 
   500  0FEA                     	;# 
   501  0FEB                     	;# 
   502  0FED                     	;# 
   503  0FEE                     	;# 
   504  0FEF                     	;# 
   505  0000                     	;# 
   506  0001                     	;# 
   507  0002                     	;# 
   508  0003                     	;# 
   509  0004                     	;# 
   510  0005                     	;# 
   511  0006                     	;# 
   512  0007                     	;# 
   513  0008                     	;# 
   514  0009                     	;# 
   515  000A                     	;# 
   516  000B                     	;# 
   517  000C                     	;# 
   518  000D                     	;# 
   519  0011                     	;# 
   520  0012                     	;# 
   521  0013                     	;# 
   522  0014                     	;# 
   523  0015                     	;# 
   524  0016                     	;# 
   525  0016                     	;# 
   526  0017                     	;# 
   527  0018                     	;# 
   528  0019                     	;# 
   529  001A                     	;# 
   530  001B                     	;# 
   531  001C                     	;# 
   532  001E                     	;# 
   533  001F                     	;# 
   534  008C                     	;# 
   535  008D                     	;# 
   536  0091                     	;# 
   537  0092                     	;# 
   538  0093                     	;# 
   539  0094                     	;# 
   540  0095                     	;# 
   541  0096                     	;# 
   542  0097                     	;# 
   543  0098                     	;# 
   544  0099                     	;# 
   545  009A                     	;# 
   546  009B                     	;# 
   547  009B                     	;# 
   548  009C                     	;# 
   549  009D                     	;# 
   550  009E                     	;# 
   551  010C                     	;# 
   552  010D                     	;# 
   553  0111                     	;# 
   554  0112                     	;# 
   555  0113                     	;# 
   556  0114                     	;# 
   557  0115                     	;# 
   558  0116                     	;# 
   559  0117                     	;# 
   560  0118                     	;# 
   561  0119                     	;# 
   562  011A                     	;# 
   563  011B                     	;# 
   564  011D                     	;# 
   565  011E                     	;# 
   566  018C                     	;# 
   567  018D                     	;# 
   568  0191                     	;# 
   569  0191                     	;# 
   570  0192                     	;# 
   571  0193                     	;# 
   572  0193                     	;# 
   573  0193                     	;# 
   574  0194                     	;# 
   575  0195                     	;# 
   576  0196                     	;# 
   577  0199                     	;# 
   578  019A                     	;# 
   579  019B                     	;# 
   580  019B                     	;# 
   581  019B                     	;# 
   582  019B                     	;# 
   583  019C                     	;# 
   584  019C                     	;# 
   585  019D                     	;# 
   586  019E                     	;# 
   587  019F                     	;# 
   588  020C                     	;# 
   589  020D                     	;# 
   590  0211                     	;# 
   591  0211                     	;# 
   592  0212                     	;# 
   593  0212                     	;# 
   594  0213                     	;# 
   595  0213                     	;# 
   596  0214                     	;# 
   597  0214                     	;# 
   598  0215                     	;# 
   599  0215                     	;# 
   600  0215                     	;# 
   601  0216                     	;# 
   602  0216                     	;# 
   603  0217                     	;# 
   604  0217                     	;# 
   605  0219                     	;# 
   606  021A                     	;# 
   607  021B                     	;# 
   608  021C                     	;# 
   609  021D                     	;# 
   610  021E                     	;# 
   611  021F                     	;# 
   612  0291                     	;# 
   613  0291                     	;# 
   614  0292                     	;# 
   615  0293                     	;# 
   616  0294                     	;# 
   617  0295                     	;# 
   618  0295                     	;# 
   619  0296                     	;# 
   620  0298                     	;# 
   621  0298                     	;# 
   622  0299                     	;# 
   623  029A                     	;# 
   624  029B                     	;# 
   625  029C                     	;# 
   626  029C                     	;# 
   627  029D                     	;# 
   628  029E                     	;# 
   629  029E                     	;# 
   630  0311                     	;# 
   631  0311                     	;# 
   632  0312                     	;# 
   633  0313                     	;# 
   634  0318                     	;# 
   635  0318                     	;# 
   636  0319                     	;# 
   637  031A                     	;# 
   638  0394                     	;# 
   639  0395                     	;# 
   640  0396                     	;# 
   641  039A                     	;# 
   642  039C                     	;# 
   643  039D                     	;# 
   644  039E                     	;# 
   645  039F                     	;# 
   646  0415                     	;# 
   647  0416                     	;# 
   648  0417                     	;# 
   649  041C                     	;# 
   650  041D                     	;# 
   651  041E                     	;# 
   652  0FE4                     	;# 
   653  0FE5                     	;# 
   654  0FE6                     	;# 
   655  0FE7                     	;# 
   656  0FE8                     	;# 
   657  0FE9                     	;# 
   658  0FEA                     	;# 
   659  0FEB                     	;# 
   660  0FED                     	;# 
   661  0FEE                     	;# 
   662  0FEF                     	;# 
   663  0000                     	;# 
   664  0001                     	;# 
   665  0002                     	;# 
   666  0003                     	;# 
   667  0004                     	;# 
   668  0005                     	;# 
   669  0006                     	;# 
   670  0007                     	;# 
   671  0008                     	;# 
   672  0009                     	;# 
   673  000A                     	;# 
   674  000B                     	;# 
   675  000C                     	;# 
   676  000D                     	;# 
   677  0011                     	;# 
   678  0012                     	;# 
   679  0013                     	;# 
   680  0014                     	;# 
   681  0015                     	;# 
   682  0016                     	;# 
   683  0016                     	;# 
   684  0017                     	;# 
   685  0018                     	;# 
   686  0019                     	;# 
   687  001A                     	;# 
   688  001B                     	;# 
   689  001C                     	;# 
   690  001E                     	;# 
   691  001F                     	;# 
   692  008C                     	;# 
   693  008D                     	;# 
   694  0091                     	;# 
   695  0092                     	;# 
   696  0093                     	;# 
   697  0094                     	;# 
   698  0095                     	;# 
   699  0096                     	;# 
   700  0097                     	;# 
   701  0098                     	;# 
   702  0099                     	;# 
   703  009A                     	;# 
   704  009B                     	;# 
   705  009B                     	;# 
   706  009C                     	;# 
   707  009D                     	;# 
   708  009E                     	;# 
   709  010C                     	;# 
   710  010D                     	;# 
   711  0111                     	;# 
   712  0112                     	;# 
   713  0113                     	;# 
   714  0114                     	;# 
   715  0115                     	;# 
   716  0116                     	;# 
   717  0117                     	;# 
   718  0118                     	;# 
   719  0119                     	;# 
   720  011A                     	;# 
   721  011B                     	;# 
   722  011D                     	;# 
   723  011E                     	;# 
   724  018C                     	;# 
   725  018D                     	;# 
   726  0191                     	;# 
   727  0191                     	;# 
   728  0192                     	;# 
   729  0193                     	;# 
   730  0193                     	;# 
   731  0193                     	;# 
   732  0194                     	;# 
   733  0195                     	;# 
   734  0196                     	;# 
   735  0199                     	;# 
   736  019A                     	;# 
   737  019B                     	;# 
   738  019B                     	;# 
   739  019B                     	;# 
   740  019B                     	;# 
   741  019C                     	;# 
   742  019C                     	;# 
   743  019D                     	;# 
   744  019E                     	;# 
   745  019F                     	;# 
   746  020C                     	;# 
   747  020D                     	;# 
   748  0211                     	;# 
   749  0211                     	;# 
   750  0212                     	;# 
   751  0212                     	;# 
   752  0213                     	;# 
   753  0213                     	;# 
   754  0214                     	;# 
   755  0214                     	;# 
   756  0215                     	;# 
   757  0215                     	;# 
   758  0215                     	;# 
   759  0216                     	;# 
   760  0216                     	;# 
   761  0217                     	;# 
   762  0217                     	;# 
   763  0219                     	;# 
   764  021A                     	;# 
   765  021B                     	;# 
   766  021C                     	;# 
   767  021D                     	;# 
   768  021E                     	;# 
   769  021F                     	;# 
   770  0291                     	;# 
   771  0291                     	;# 
   772  0292                     	;# 
   773  0293                     	;# 
   774  0294                     	;# 
   775  0295                     	;# 
   776  0295                     	;# 
   777  0296                     	;# 
   778  0298                     	;# 
   779  0298                     	;# 
   780  0299                     	;# 
   781  029A                     	;# 
   782  029B                     	;# 
   783  029C                     	;# 
   784  029C                     	;# 
   785  029D                     	;# 
   786  029E                     	;# 
   787  029E                     	;# 
   788  0311                     	;# 
   789  0311                     	;# 
   790  0312                     	;# 
   791  0313                     	;# 
   792  0318                     	;# 
   793  0318                     	;# 
   794  0319                     	;# 
   795  031A                     	;# 
   796  0394                     	;# 
   797  0395                     	;# 
   798  0396                     	;# 
   799  039A                     	;# 
   800  039C                     	;# 
   801  039D                     	;# 
   802  039E                     	;# 
   803  039F                     	;# 
   804  0415                     	;# 
   805  0416                     	;# 
   806  0417                     	;# 
   807  041C                     	;# 
   808  041D                     	;# 
   809  041E                     	;# 
   810  0FE4                     	;# 
   811  0FE5                     	;# 
   812  0FE6                     	;# 
   813  0FE7                     	;# 
   814  0FE8                     	;# 
   815  0FE9                     	;# 
   816  0FEA                     	;# 
   817  0FEB                     	;# 
   818  0FED                     	;# 
   819  0FEE                     	;# 
   820  0FEF                     	;# 
   821  0000                     	;# 
   822  0001                     	;# 
   823  0002                     	;# 
   824  0003                     	;# 
   825  0004                     	;# 
   826  0005                     	;# 
   827  0006                     	;# 
   828  0007                     	;# 
   829  0008                     	;# 
   830  0009                     	;# 
   831  000A                     	;# 
   832  000B                     	;# 
   833  000C                     	;# 
   834  000D                     	;# 
   835  0011                     	;# 
   836  0012                     	;# 
   837  0013                     	;# 
   838  0014                     	;# 
   839  0015                     	;# 
   840  0016                     	;# 
   841  0016                     	;# 
   842  0017                     	;# 
   843  0018                     	;# 
   844  0019                     	;# 
   845  001A                     	;# 
   846  001B                     	;# 
   847  001C                     	;# 
   848  001E                     	;# 
   849  001F                     	;# 
   850  008C                     	;# 
   851  008D                     	;# 
   852  0091                     	;# 
   853  0092                     	;# 
   854  0093                     	;# 
   855  0094                     	;# 
   856  0095                     	;# 
   857  0096                     	;# 
   858  0097                     	;# 
   859  0098                     	;# 
   860  0099                     	;# 
   861  009A                     	;# 
   862  009B                     	;# 
   863  009B                     	;# 
   864  009C                     	;# 
   865  009D                     	;# 
   866  009E                     	;# 
   867  010C                     	;# 
   868  010D                     	;# 
   869  0111                     	;# 
   870  0112                     	;# 
   871  0113                     	;# 
   872  0114                     	;# 
   873  0115                     	;# 
   874  0116                     	;# 
   875  0117                     	;# 
   876  0118                     	;# 
   877  0119                     	;# 
   878  011A                     	;# 
   879  011B                     	;# 
   880  011D                     	;# 
   881  011E                     	;# 
   882  018C                     	;# 
   883  018D                     	;# 
   884  0191                     	;# 
   885  0191                     	;# 
   886  0192                     	;# 
   887  0193                     	;# 
   888  0193                     	;# 
   889  0193                     	;# 
   890  0194                     	;# 
   891  0195                     	;# 
   892  0196                     	;# 
   893  0199                     	;# 
   894  019A                     	;# 
   895  019B                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019C                     	;# 
   900  019C                     	;# 
   901  019D                     	;# 
   902  019E                     	;# 
   903  019F                     	;# 
   904  020C                     	;# 
   905  020D                     	;# 
   906  0211                     	;# 
   907  0211                     	;# 
   908  0212                     	;# 
   909  0212                     	;# 
   910  0213                     	;# 
   911  0213                     	;# 
   912  0214                     	;# 
   913  0214                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0216                     	;# 
   918  0216                     	;# 
   919  0217                     	;# 
   920  0217                     	;# 
   921  0219                     	;# 
   922  021A                     	;# 
   923  021B                     	;# 
   924  021C                     	;# 
   925  021D                     	;# 
   926  021E                     	;# 
   927  021F                     	;# 
   928  0291                     	;# 
   929  0291                     	;# 
   930  0292                     	;# 
   931  0293                     	;# 
   932  0294                     	;# 
   933  0295                     	;# 
   934  0295                     	;# 
   935  0296                     	;# 
   936  0298                     	;# 
   937  0298                     	;# 
   938  0299                     	;# 
   939  029A                     	;# 
   940  029B                     	;# 
   941  029C                     	;# 
   942  029C                     	;# 
   943  029D                     	;# 
   944  029E                     	;# 
   945  029E                     	;# 
   946  0311                     	;# 
   947  0311                     	;# 
   948  0312                     	;# 
   949  0313                     	;# 
   950  0318                     	;# 
   951  0318                     	;# 
   952  0319                     	;# 
   953  031A                     	;# 
   954  0394                     	;# 
   955  0395                     	;# 
   956  0396                     	;# 
   957  039A                     	;# 
   958  039C                     	;# 
   959  039D                     	;# 
   960  039E                     	;# 
   961  039F                     	;# 
   962  0415                     	;# 
   963  0416                     	;# 
   964  0417                     	;# 
   965  041C                     	;# 
   966  041D                     	;# 
   967  041E                     	;# 
   968  0FE4                     	;# 
   969  0FE5                     	;# 
   970  0FE6                     	;# 
   971  0FE7                     	;# 
   972  0FE8                     	;# 
   973  0FE9                     	;# 
   974  0FEA                     	;# 
   975  0FEB                     	;# 
   976  0FED                     	;# 
   977  0FEE                     	;# 
   978  0FEF                     	;# 
   979  0000                     	;# 
   980  0001                     	;# 
   981  0002                     	;# 
   982  0003                     	;# 
   983  0004                     	;# 
   984  0005                     	;# 
   985  0006                     	;# 
   986  0007                     	;# 
   987  0008                     	;# 
   988  0009                     	;# 
   989  000A                     	;# 
   990  000B                     	;# 
   991  000C                     	;# 
   992  000D                     	;# 
   993  0011                     	;# 
   994  0012                     	;# 
   995  0013                     	;# 
   996  0014                     	;# 
   997  0015                     	;# 
   998  0016                     	;# 
   999  0016                     	;# 
  1000  0017                     	;# 
  1001  0018                     	;# 
  1002  0019                     	;# 
  1003  001A                     	;# 
  1004  001B                     	;# 
  1005  001C                     	;# 
  1006  001E                     	;# 
  1007  001F                     	;# 
  1008  008C                     	;# 
  1009  008D                     	;# 
  1010  0091                     	;# 
  1011  0092                     	;# 
  1012  0093                     	;# 
  1013  0094                     	;# 
  1014  0095                     	;# 
  1015  0096                     	;# 
  1016  0097                     	;# 
  1017  0098                     	;# 
  1018  0099                     	;# 
  1019  009A                     	;# 
  1020  009B                     	;# 
  1021  009B                     	;# 
  1022  009C                     	;# 
  1023  009D                     	;# 
  1024  009E                     	;# 
  1025  010C                     	;# 
  1026  010D                     	;# 
  1027  0111                     	;# 
  1028  0112                     	;# 
  1029  0113                     	;# 
  1030  0114                     	;# 
  1031  0115                     	;# 
  1032  0116                     	;# 
  1033  0117                     	;# 
  1034  0118                     	;# 
  1035  0119                     	;# 
  1036  011A                     	;# 
  1037  011B                     	;# 
  1038  011D                     	;# 
  1039  011E                     	;# 
  1040  018C                     	;# 
  1041  018D                     	;# 
  1042  0191                     	;# 
  1043  0191                     	;# 
  1044  0192                     	;# 
  1045  0193                     	;# 
  1046  0193                     	;# 
  1047  0193                     	;# 
  1048  0194                     	;# 
  1049  0195                     	;# 
  1050  0196                     	;# 
  1051  0199                     	;# 
  1052  019A                     	;# 
  1053  019B                     	;# 
  1054  019B                     	;# 
  1055  019B                     	;# 
  1056  019B                     	;# 
  1057  019C                     	;# 
  1058  019C                     	;# 
  1059  019D                     	;# 
  1060  019E                     	;# 
  1061  019F                     	;# 
  1062  020C                     	;# 
  1063  020D                     	;# 
  1064  0211                     	;# 
  1065  0211                     	;# 
  1066  0212                     	;# 
  1067  0212                     	;# 
  1068  0213                     	;# 
  1069  0213                     	;# 
  1070  0214                     	;# 
  1071  0214                     	;# 
  1072  0215                     	;# 
  1073  0215                     	;# 
  1074  0215                     	;# 
  1075  0216                     	;# 
  1076  0216                     	;# 
  1077  0217                     	;# 
  1078  0217                     	;# 
  1079  0219                     	;# 
  1080  021A                     	;# 
  1081  021B                     	;# 
  1082  021C                     	;# 
  1083  021D                     	;# 
  1084  021E                     	;# 
  1085  021F                     	;# 
  1086  0291                     	;# 
  1087  0291                     	;# 
  1088  0292                     	;# 
  1089  0293                     	;# 
  1090  0294                     	;# 
  1091  0295                     	;# 
  1092  0295                     	;# 
  1093  0296                     	;# 
  1094  0298                     	;# 
  1095  0298                     	;# 
  1096  0299                     	;# 
  1097  029A                     	;# 
  1098  029B                     	;# 
  1099  029C                     	;# 
  1100  029C                     	;# 
  1101  029D                     	;# 
  1102  029E                     	;# 
  1103  029E                     	;# 
  1104  0311                     	;# 
  1105  0311                     	;# 
  1106  0312                     	;# 
  1107  0313                     	;# 
  1108  0318                     	;# 
  1109  0318                     	;# 
  1110  0319                     	;# 
  1111  031A                     	;# 
  1112  0394                     	;# 
  1113  0395                     	;# 
  1114  0396                     	;# 
  1115  039A                     	;# 
  1116  039C                     	;# 
  1117  039D                     	;# 
  1118  039E                     	;# 
  1119  039F                     	;# 
  1120  0415                     	;# 
  1121  0416                     	;# 
  1122  0417                     	;# 
  1123  041C                     	;# 
  1124  041D                     	;# 
  1125  041E                     	;# 
  1126  0FE4                     	;# 
  1127  0FE5                     	;# 
  1128  0FE6                     	;# 
  1129  0FE7                     	;# 
  1130  0FE8                     	;# 
  1131  0FE9                     	;# 
  1132  0FEA                     	;# 
  1133  0FEB                     	;# 
  1134  0FED                     	;# 
  1135  0FEE                     	;# 
  1136  0FEF                     	;# 
  1137  0000                     	;# 
  1138  0001                     	;# 
  1139  0002                     	;# 
  1140  0003                     	;# 
  1141  0004                     	;# 
  1142  0005                     	;# 
  1143  0006                     	;# 
  1144  0007                     	;# 
  1145  0008                     	;# 
  1146  0009                     	;# 
  1147  000A                     	;# 
  1148  000B                     	;# 
  1149  000C                     	;# 
  1150  000D                     	;# 
  1151  0011                     	;# 
  1152  0012                     	;# 
  1153  0013                     	;# 
  1154  0014                     	;# 
  1155  0015                     	;# 
  1156  0016                     	;# 
  1157  0016                     	;# 
  1158  0017                     	;# 
  1159  0018                     	;# 
  1160  0019                     	;# 
  1161  001A                     	;# 
  1162  001B                     	;# 
  1163  001C                     	;# 
  1164  001E                     	;# 
  1165  001F                     	;# 
  1166  008C                     	;# 
  1167  008D                     	;# 
  1168  0091                     	;# 
  1169  0092                     	;# 
  1170  0093                     	;# 
  1171  0094                     	;# 
  1172  0095                     	;# 
  1173  0096                     	;# 
  1174  0097                     	;# 
  1175  0098                     	;# 
  1176  0099                     	;# 
  1177  009A                     	;# 
  1178  009B                     	;# 
  1179  009B                     	;# 
  1180  009C                     	;# 
  1181  009D                     	;# 
  1182  009E                     	;# 
  1183  010C                     	;# 
  1184  010D                     	;# 
  1185  0111                     	;# 
  1186  0112                     	;# 
  1187  0113                     	;# 
  1188  0114                     	;# 
  1189  0115                     	;# 
  1190  0116                     	;# 
  1191  0117                     	;# 
  1192  0118                     	;# 
  1193  0119                     	;# 
  1194  011A                     	;# 
  1195  011B                     	;# 
  1196  011D                     	;# 
  1197  011E                     	;# 
  1198  018C                     	;# 
  1199  018D                     	;# 
  1200  0191                     	;# 
  1201  0191                     	;# 
  1202  0192                     	;# 
  1203  0193                     	;# 
  1204  0193                     	;# 
  1205  0193                     	;# 
  1206  0194                     	;# 
  1207  0195                     	;# 
  1208  0196                     	;# 
  1209  0199                     	;# 
  1210  019A                     	;# 
  1211  019B                     	;# 
  1212  019B                     	;# 
  1213  019B                     	;# 
  1214  019B                     	;# 
  1215  019C                     	;# 
  1216  019C                     	;# 
  1217  019D                     	;# 
  1218  019E                     	;# 
  1219  019F                     	;# 
  1220  020C                     	;# 
  1221  020D                     	;# 
  1222  0211                     	;# 
  1223  0211                     	;# 
  1224  0212                     	;# 
  1225  0212                     	;# 
  1226  0213                     	;# 
  1227  0213                     	;# 
  1228  0214                     	;# 
  1229  0214                     	;# 
  1230  0215                     	;# 
  1231  0215                     	;# 
  1232  0215                     	;# 
  1233  0216                     	;# 
  1234  0216                     	;# 
  1235  0217                     	;# 
  1236  0217                     	;# 
  1237  0219                     	;# 
  1238  021A                     	;# 
  1239  021B                     	;# 
  1240  021C                     	;# 
  1241  021D                     	;# 
  1242  021E                     	;# 
  1243  021F                     	;# 
  1244  0291                     	;# 
  1245  0291                     	;# 
  1246  0292                     	;# 
  1247  0293                     	;# 
  1248  0294                     	;# 
  1249  0295                     	;# 
  1250  0295                     	;# 
  1251  0296                     	;# 
  1252  0298                     	;# 
  1253  0298                     	;# 
  1254  0299                     	;# 
  1255  029A                     	;# 
  1256  029B                     	;# 
  1257  029C                     	;# 
  1258  029C                     	;# 
  1259  029D                     	;# 
  1260  029E                     	;# 
  1261  029E                     	;# 
  1262  0311                     	;# 
  1263  0311                     	;# 
  1264  0312                     	;# 
  1265  0313                     	;# 
  1266  0318                     	;# 
  1267  0318                     	;# 
  1268  0319                     	;# 
  1269  031A                     	;# 
  1270  0394                     	;# 
  1271  0395                     	;# 
  1272  0396                     	;# 
  1273  039A                     	;# 
  1274  039C                     	;# 
  1275  039D                     	;# 
  1276  039E                     	;# 
  1277  039F                     	;# 
  1278  0415                     	;# 
  1279  0416                     	;# 
  1280  0417                     	;# 
  1281  041C                     	;# 
  1282  041D                     	;# 
  1283  041E                     	;# 
  1284  0FE4                     	;# 
  1285  0FE5                     	;# 
  1286  0FE6                     	;# 
  1287  0FE7                     	;# 
  1288  0FE8                     	;# 
  1289  0FE9                     	;# 
  1290  0FEA                     	;# 
  1291  0FEB                     	;# 
  1292  0FED                     	;# 
  1293  0FEE                     	;# 
  1294  0FEF                     	;# 
  1295                           
  1296                           	psect	idataBANK0
  1297  01D8                     __pidataBANK0:	
  1298                           
  1299                           ;initializer for _LED_state
  1300  01D8  3401               	retlw	1
  1301                           
  1302                           	psect	stringtext
  1303  017B                     __pstringtext:	
  1304  017B                     _fp_x0_a:	
  1305  017B  34D0               	retlw	208
  1306  017C  34D2               	retlw	210
  1307  017D  3402               	retlw	2
  1308  017E  3400               	retlw	0
  1309  017F                     __end_of_fp_x0_a:	
  1310  017F                     _fp_x0_b:	
  1311  017F  34E4               	retlw	228
  1312  0180  34E1               	retlw	225
  1313  0181  3401               	retlw	1
  1314  0182  3400               	retlw	0
  1315  0183                     __end_of_fp_x0_b:	
  1316  0183                     _ratio_mph:	
  1317  0183  3414               	retlw	20
  1318  0184  349F               	retlw	159
  1319  0185  3400               	retlw	0
  1320  0186  3400               	retlw	0
  1321  0187                     __end_of_ratio_mph:	
  1322  0187                     convert_to_fp@one:	
  1323  0187  3401               	retlw	1
  1324  0188  3400               	retlw	0
  1325  0189                     __end_ofconvert_to_fp@one:	
  1326  000B                     _INTCONbits	set	11
  1327  0011                     _PIR1bits	set	17
  1328  000D                     _PORTBbits	set	13
  1329  0015                     _TMR0	set	21
  1330  0095                     _OPTION_REG	set	149
  1331  0095                     _OPTION_REGbits	set	149
  1332  0099                     _OSCCON	set	153
  1333  009A                     _OSCSTAT	set	154
  1334  0098                     _OSCTUNE	set	152
  1335  008C                     _TRISA	set	140
  1336  008D                     _TRISB	set	141
  1337  04D6                     _PLLR	set	1238
  1338  011D                     _APFCON0	set	285
  1339  011E                     _APFCON1	set	286
  1340  010C                     _LATA	set	268
  1341  010D                     _LATB	set	269
  1342  0862                     _LATA2	set	2146
  1343  018C                     _ANSELA	set	396
  1344  018D                     _ANSELB	set	397
  1345  019F                     _BAUDCON	set	415
  1346  0199                     _RCREG	set	409
  1347  019D                     _RCSTA	set	413
  1348  019D                     _RCSTAbits	set	413
  1349  019C                     _SPBRGH	set	412
  1350  019B                     _SPBRGL	set	411
  1351  019A                     _TXREG	set	410
  1352  019E                     _TXSTA	set	414
  1353  020C                     _WPUA	set	524
  1354  020D                     _WPUB	set	525
  1355                           
  1356                           ; #config settings
  1357  0000                     
  1358                           	psect	cinit
  1359  0015                     start_initialization:	
  1360  0015                     __initialization:	
  1361                           
  1362                           ; Initialize objects allocated to BANK0
  1363  0015  3181  21D8         	fcall	__pidataBANK0	;fetch initializer
  1364  0017  00B0               	movwf	__pdataBANK0& (0+127)
  1365                           
  1366                           ; Clear objects allocated to COMMON
  1367  0018  01F0               	clrf	__pbssCOMMON& (0+127)
  1368  0019  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1369  001A  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1370  001B  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1371  001C  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1372                           
  1373                           ; Clear objects allocated to BANK0
  1374  001D  01A0               	clrf	__pbssBANK0& (0+127)
  1375  001E  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1376  001F  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  1377  0020  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  1378  0021  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  1379  0022  01A5               	clrf	(__pbssBANK0+5)& (0+127)
  1380  0023  01A6               	clrf	(__pbssBANK0+6)& (0+127)
  1381  0024  01A7               	clrf	(__pbssBANK0+7)& (0+127)
  1382  0025  01A8               	clrf	(__pbssBANK0+8)& (0+127)
  1383  0026                     end_of_initialization:	
  1384                           ;End of C runtime variable initialization code
  1385                           
  1386  0026                     __end_of__initialization:	
  1387  0026  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1388  0027  0020               	movlb	0
  1389  0028  3180  289F         	ljmp	_main	;jump to C main() function
  1390                           
  1391                           	psect	bssCOMMON
  1392  0070                     __pbssCOMMON:	
  1393  0070                     _b_last_state:	
  1394  0070                     	ds	2
  1395  0072                     _LED_counter:	
  1396  0072                     	ds	1
  1397  0073                     _b_confirmed_state:	
  1398  0073                     	ds	1
  1399  0074                     _b_count_pressed:	
  1400  0074                     	ds	1
  1401                           
  1402                           	psect	bssBANK0
  1403  0020                     __pbssBANK0:	
  1404  0020                     TMR0_ISR@CountCallBack:	
  1405  0020                     	ds	2
  1406  0022                     _TMR0_InterruptHandler:	
  1407  0022                     	ds	2
  1408  0024                     _b_count_released:	
  1409  0024                     	ds	1
  1410  0025                     _b_has_once_been_released:	
  1411  0025                     	ds	1
  1412  0026                     _b_push_confirmed:	
  1413  0026                     	ds	1
  1414  0027                     _b_release_confirmed:	
  1415  0027                     	ds	1
  1416  0028                     _timer0ReloadVal:	
  1417  0028                     	ds	1
  1418                           
  1419                           	psect	dataBANK0
  1420  0030                     __pdataBANK0:	
  1421  0030                     _LED_state:	
  1422  0030                     	ds	1
  1423                           
  1424                           	psect	cstackCOMMON
  1425  0075                     __pcstackCOMMON:	
  1426  0075                     ?_PIN_MANAGER_Initialize:	
  1427  0075                     ?_OSCILLATOR_Initialize:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430  0075                     ?_TMR0_Initialize:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433  0075                     ?_EUSART_Initialize:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436  0075                     ?_my10msTimerISR:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439  0075                     ?_LED_set_state:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0075                     ?_button_init:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0075                     ?_LED_update_loop:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448  0075                     ??_LED_update_loop:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451  0075                     ?_button_update_loop:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454  0075                     ?_TMR0_ISR:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457  0075                     ?_TMR0_DefaultInterruptHandler:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460  0075                     ??_TMR0_DefaultInterruptHandler:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463  0075                     ?_TMR0_CallBack:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466  0075                     ?_SYSTEM_Initialize:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469  0075                     ?_main:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472  0075                     ?_get_button_state:	
  1473                           ; 1 bytes @ 0x0
  1474                           
  1475  0075                     ?_INTERRUPT_InterruptManager:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478  0075                     ?i1_get_button_state:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481  0075                     ??i1_get_button_state:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484  0075                     i1get_button_state@state:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487                           
  1488                           ; 1 bytes @ 0x0
  1489  0075                     	ds	1
  1490  0076                     ??_button_update_loop:	
  1491                           
  1492                           ; 1 bytes @ 0x1
  1493  0076                     	ds	2
  1494  0078                     button_update_loop@current_state:	
  1495                           
  1496                           ; 1 bytes @ 0x3
  1497  0078                     	ds	1
  1498  0079                     ??_my10msTimerISR:	
  1499  0079                     ??_TMR0_ISR:	
  1500                           ; 1 bytes @ 0x4
  1501                           
  1502  0079                     ??_TMR0_CallBack:	
  1503                           ; 1 bytes @ 0x4
  1504                           
  1505  0079                     ??_INTERRUPT_InterruptManager:	
  1506                           ; 1 bytes @ 0x4
  1507                           
  1508                           
  1509                           ; 1 bytes @ 0x4
  1510  0079                     	ds	1
  1511                           
  1512                           	psect	cstackBANK0
  1513  0029                     __pcstackBANK0:	
  1514  0029                     ??_PIN_MANAGER_Initialize:	
  1515  0029                     ??_OSCILLATOR_Initialize:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0029                     ??_EUSART_Initialize:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0029                     ?_TMR0_SetInterruptHandler:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0029                     ??_LED_set_state:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0029                     ??_get_button_state:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0029                     get_button_state@state:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0029                     TMR0_SetInterruptHandler@InterruptHandler:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536                           
  1537                           ; 2 bytes @ 0x0
  1538  0029                     	ds	1
  1539  002A                     ??_button_init:	
  1540  002A                     LED_set_state@new_state:	
  1541                           ; 1 bytes @ 0x1
  1542                           
  1543                           
  1544                           ; 1 bytes @ 0x1
  1545  002A                     	ds	1
  1546  002B                     ??_TMR0_Initialize:	
  1547  002B                     ??_TMR0_SetInterruptHandler:	
  1548                           ; 1 bytes @ 0x2
  1549                           
  1550                           
  1551                           ; 1 bytes @ 0x2
  1552  002B                     	ds	1
  1553  002C                     ??_SYSTEM_Initialize:	
  1554  002C                     ??_main:	
  1555                           ; 1 bytes @ 0x3
  1556                           
  1557                           
  1558                           ; 1 bytes @ 0x3
  1559  002C                     	ds	3
  1560  002F                     main@tmp:	
  1561                           
  1562                           ; 1 bytes @ 0x6
  1563  002F                     	ds	1
  1564                           
  1565                           	psect	maintext
  1566  009F                     __pmaintext:	
  1567 ;;
  1568 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1569 ;;
  1570 ;; *************** function _main *****************
  1571 ;; Defined at:
  1572 ;;		line 64 in file "main.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  tmp             1    6[BANK0 ] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0, pclath, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : B1F/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1586 ;;      Params:         0       0       0       0       0       0
  1587 ;;      Locals:         0       1       0       0       0       0
  1588 ;;      Temps:          0       3       0       0       0       0
  1589 ;;      Totals:         0       4       0       0       0       0
  1590 ;;Total ram usage:        4 bytes
  1591 ;; Hardware stack levels required when called:    9
  1592 ;; This function calls:
  1593 ;;		_LED_set_state
  1594 ;;		_SYSTEM_Initialize
  1595 ;;		_TMR0_SetInterruptHandler
  1596 ;;		_button_init
  1597 ;; This function is called by:
  1598 ;;		Startup code after reset
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           
  1603                           ;psect for function _main
  1604  009F                     _main:	
  1605                           
  1606                           ;main.c: 67: SYSTEM_Initialize();
  1607                           
  1608                           ;incstack = 0
  1609                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1610  009F  3181  2195  3180   	fcall	_SYSTEM_Initialize
  1611                           
  1612                           ;main.c: 69: TMR0_SetInterruptHandler(my10msTimerISR);
  1613  00A2  30D2               	movlw	low _my10msTimerISR
  1614  00A3  0020               	movlb	0	; select bank0
  1615  00A4  00A9               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1616  00A5  3001               	movlw	high _my10msTimerISR
  1617  00A6  00AA               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1618  00A7  3181  21CC  3180   	fcall	_TMR0_SetInterruptHandler
  1619                           
  1620                           ;main.c: 72: (INTCONbits.GIE = 1);
  1621  00AA  178B               	bsf	11,7	;volatile
  1622                           
  1623                           ;main.c: 74: (INTCONbits.PEIE = 1);
  1624  00AB  170B               	bsf	11,6	;volatile
  1625  00AC                     l1381:	
  1626                           ;main.c: 76: while (1)
  1627                           
  1628                           
  1629                           ;main.c: 77: {
  1630                           ;main.c: 78: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(320
      +                          00000/4000.0)));};
  1631  00AC  0020               	movlb	0	; select bank0
  1632  00AD  01AF               	clrf	main@tmp
  1633  00AE  3032               	movlw	50
  1634  00AF  022F               	subwf	main@tmp,w
  1635  00B0  1803               	btfsc	3,0
  1636  00B1  28C7               	goto	l1393
  1637  00B2                     l1387:	
  1638  00B2  3005               	movlw	5
  1639  00B3  00AE               	movwf	??_main+2
  1640  00B4  300F               	movlw	15
  1641  00B5  00AD               	movwf	??_main+1
  1642  00B6  30F4               	movlw	244
  1643  00B7  00AC               	movwf	??_main
  1644  00B8                     u1057:	
  1645  00B8  0BAC               	decfsz	??_main,f
  1646  00B9  28B8               	goto	u1057
  1647  00BA  0BAD               	decfsz	??_main+1,f
  1648  00BB  28B8               	goto	u1057
  1649  00BC  0BAE               	decfsz	??_main+2,f
  1650  00BD  28B8               	goto	u1057
  1651  00BE  3001               	movlw	1
  1652  00BF  0020               	movlb	0	; select bank0
  1653  00C0  00AC               	movwf	??_main
  1654  00C1  082C               	movf	??_main,w
  1655  00C2  07AF               	addwf	main@tmp,f
  1656  00C3  3032               	movlw	50
  1657  00C4  022F               	subwf	main@tmp,w
  1658  00C5  1C03               	skipc
  1659  00C6  28B2               	goto	l1387
  1660  00C7                     l1393:	
  1661                           
  1662                           ;main.c: 80: LED_set_state(always_on);
  1663  00C7  3000               	movlw	0
  1664  00C8  3181  210A  3180   	fcall	_LED_set_state
  1665                           
  1666                           ;main.c: 81: button_init();
  1667  00CB  3181  216B  3180   	fcall	_button_init
  1668  00CE                     l1395:	
  1669                           ;main.c: 83: {}
  1670                           
  1671                           ;main.c: 82: while (b_confirmed_state == nothing)
  1672                           
  1673  00CE  0873               	movf	_b_confirmed_state,w	;volatile
  1674  00CF  1903               	btfsc	3,2
  1675  00D0  28CE               	goto	l1395
  1676                           
  1677                           ;main.c: 85: if (b_confirmed_state == short_push)
  1678  00D1  0373               	decf	_b_confirmed_state,w	;volatile
  1679  00D2  1D03               	btfss	3,2
  1680  00D3  28D9               	goto	l1401
  1681                           
  1682                           ;main.c: 86: LED_set_state(fast_blinking);
  1683  00D4  3003               	movlw	3
  1684  00D5  3181  210A  3180   	fcall	_LED_set_state
  1685  00D8  28AC               	goto	l1381
  1686  00D9                     l1401:	
  1687                           
  1688                           ;main.c: 87: else if (b_confirmed_state == long_push)
  1689  00D9  3002               	movlw	2
  1690  00DA  0673               	xorwf	_b_confirmed_state,w	;volatile
  1691  00DB  1D03               	btfss	3,2
  1692  00DC  28AC               	goto	l1381
  1693                           
  1694                           ;main.c: 88: LED_set_state(slow_blinking);
  1695  00DD  3002               	movlw	2
  1696  00DE  3181  210A  3180   	fcall	_LED_set_state
  1697  00E1  28AC               	goto	l1381
  1698  00E2                     __end_of_main:	
  1699                           
  1700                           	psect	text1
  1701  016B                     __ptext1:	
  1702 ;; *************** function _button_init *****************
  1703 ;; Defined at:
  1704 ;;		line 67 in file "interact.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0, pclath, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1718 ;;      Params:         0       0       0       0       0       0
  1719 ;;      Locals:         0       0       0       0       0       0
  1720 ;;      Temps:          0       2       0       0       0       0
  1721 ;;      Totals:         0       2       0       0       0       0
  1722 ;;Total ram usage:        2 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    7
  1725 ;; This function calls:
  1726 ;;		_get_button_state
  1727 ;; This function is called by:
  1728 ;;		_main
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           
  1733                           ;psect for function _button_init
  1734  016B                     _button_init:	
  1735                           
  1736                           ;interact.c: 69: b_last_state = get_button_state();
  1737                           
  1738                           ;incstack = 0
  1739                           ; Regs used in _button_init: [wreg+status,2+status,0+pclath+cstack]
  1740  016B  3181  2189         	fcall	_get_button_state
  1741  016D  0020               	movlb	0	; select bank0
  1742  016E  00AA               	movwf	??_button_init
  1743  016F  01AB               	clrf	??_button_init+1
  1744  0170  082A               	movf	??_button_init,w
  1745  0171  00F0               	movwf	_b_last_state	;volatile
  1746  0172  082B               	movf	??_button_init+1,w
  1747  0173  00F1               	movwf	_b_last_state+1	;volatile
  1748                           
  1749                           ;interact.c: 70: b_count_pressed = 0;
  1750  0174  01F4               	clrf	_b_count_pressed	;volatile
  1751                           
  1752                           ;interact.c: 71: b_count_released = 0;
  1753  0175  01A4               	clrf	_b_count_released	;volatile
  1754                           
  1755                           ;interact.c: 72: b_confirmed_state = nothing;
  1756  0176  01F3               	clrf	_b_confirmed_state	;volatile
  1757                           
  1758                           ;interact.c: 73: b_push_confirmed = 0;
  1759  0177  01A6               	clrf	_b_push_confirmed	;volatile
  1760                           
  1761                           ;interact.c: 74: b_release_confirmed = 0;
  1762  0178  01A7               	clrf	_b_release_confirmed	;volatile
  1763                           
  1764                           ;interact.c: 75: b_has_once_been_released = 0;
  1765  0179  01A5               	clrf	_b_has_once_been_released	;volatile
  1766  017A  0008               	return
  1767  017B                     __end_of_button_init:	
  1768                           
  1769                           	psect	text2
  1770  0189                     __ptext2:	
  1771 ;; *************** function _get_button_state *****************
  1772 ;; Defined at:
  1773 ;;		line 58 in file "interact.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  state           1    0[BANK0 ] unsigned char 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      unsigned char 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1787 ;;      Params:         0       0       0       0       0       0
  1788 ;;      Locals:         0       1       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0
  1790 ;;      Totals:         0       1       0       0       0       0
  1791 ;;Total ram usage:        1 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:    6
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_button_init
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           
  1802                           ;psect for function _get_button_state
  1803  0189                     _get_button_state:	
  1804                           
  1805                           ;interact.c: 61: unsigned char state = PORTBbits.RB0;
  1806                           
  1807                           ;incstack = 0
  1808                           ; Regs used in _get_button_state: [wreg+status,2+status,0]
  1809  0189  3000               	movlw	0
  1810  018A  0020               	movlb	0	; select bank0
  1811  018B  180D               	btfsc	13,0	;volatile
  1812  018C  3001               	movlw	1
  1813  018D  00A9               	movwf	get_button_state@state
  1814                           
  1815                           ;interact.c: 62: if (state == 1)
  1816  018E  0329               	decf	get_button_state@state,w
  1817  018F  1D03               	btfss	3,2
  1818  0190  2993               	goto	l1343
  1819                           
  1820                           ;interact.c: 63: return 0;
  1821  0191  3000               	movlw	0
  1822  0192  0008               	return
  1823  0193                     l1343:	
  1824                           
  1825                           ;interact.c: 64: else return 1;
  1826  0193  3001               	movlw	1
  1827  0194  0008               	return
  1828  0195                     __end_of_get_button_state:	
  1829                           
  1830                           	psect	text3
  1831  0195                     __ptext3:	
  1832 ;; *************** function _SYSTEM_Initialize *****************
  1833 ;; Defined at:
  1834 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0, pclath, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1848 ;;      Params:         0       0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0
  1851 ;;      Totals:         0       0       0       0       0       0
  1852 ;;Total ram usage:        0 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    8
  1855 ;; This function calls:
  1856 ;;		_EUSART_Initialize
  1857 ;;		_OSCILLATOR_Initialize
  1858 ;;		_PIN_MANAGER_Initialize
  1859 ;;		_TMR0_Initialize
  1860 ;; This function is called by:
  1861 ;;		_main
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           
  1866                           ;psect for function _SYSTEM_Initialize
  1867  0195                     _SYSTEM_Initialize:	
  1868                           
  1869                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  1870                           
  1871                           ;incstack = 0
  1872                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1873  0195  3181  212A  3181   	fcall	_PIN_MANAGER_Initialize
  1874                           
  1875                           ;mcc.c: 73: OSCILLATOR_Initialize();
  1876  0198  3181  21C4  3181   	fcall	_OSCILLATOR_Initialize
  1877                           
  1878                           ;mcc.c: 74: TMR0_Initialize();
  1879  019B  3181  2141  3181   	fcall	_TMR0_Initialize
  1880                           
  1881                           ;mcc.c: 75: EUSART_Initialize();
  1882  019E  3181  21A1         	fcall	_EUSART_Initialize
  1883  01A0  0008               	return
  1884  01A1                     __end_of_SYSTEM_Initialize:	
  1885                           
  1886                           	psect	text4
  1887  0141                     __ptext4:	
  1888 ;; *************** function _TMR0_Initialize *****************
  1889 ;; Defined at:
  1890 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0, pclath, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1904 ;;      Params:         0       0       0       0       0       0
  1905 ;;      Locals:         0       0       0       0       0       0
  1906 ;;      Temps:          0       1       0       0       0       0
  1907 ;;      Totals:         0       1       0       0       0       0
  1908 ;;Total ram usage:        1 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    7
  1911 ;; This function calls:
  1912 ;;		_TMR0_SetInterruptHandler
  1913 ;; This function is called by:
  1914 ;;		_SYSTEM_Initialize
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           
  1919                           ;psect for function _TMR0_Initialize
  1920  0141                     _TMR0_Initialize:	
  1921                           
  1922                           ;tmr0.c: 68: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  1923                           
  1924                           ;incstack = 0
  1925                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1926  0141  0021               	movlb	1	; select bank1
  1927  0142  0815               	movf	21,w	;volatile
  1928  0143  39C0               	andlw	192
  1929  0144  3817               	iorlw	23
  1930  0145  0095               	movwf	21	;volatile
  1931                           
  1932                           ;tmr0.c: 71: TMR0 = 0x64;
  1933  0146  3064               	movlw	100
  1934  0147  0020               	movlb	0	; select bank0
  1935  0148  0095               	movwf	21	;volatile
  1936                           
  1937                           ;tmr0.c: 74: timer0ReloadVal= 100;
  1938  0149  3064               	movlw	100
  1939  014A  00AB               	movwf	??_TMR0_Initialize
  1940  014B  082B               	movf	??_TMR0_Initialize,w
  1941  014C  00A8               	movwf	_timer0ReloadVal	;volatile
  1942                           
  1943                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  1944  014D  110B               	bcf	11,2	;volatile
  1945                           
  1946                           ;tmr0.c: 80: INTCONbits.TMR0IE = 1;
  1947  014E  168B               	bsf	11,5	;volatile
  1948                           
  1949                           ;tmr0.c: 83: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1950  014F  30D9               	movlw	low _TMR0_DefaultInterruptHandler
  1951  0150  00A9               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1952  0151  3001               	movlw	high _TMR0_DefaultInterruptHandler
  1953  0152  00AA               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1954  0153  3181  21CC         	fcall	_TMR0_SetInterruptHandler
  1955  0155  0008               	return
  1956  0156                     __end_of_TMR0_Initialize:	
  1957                           
  1958                           	psect	text5
  1959  01CC                     __ptext5:	
  1960 ;; *************** function _TMR0_SetInterruptHandler *****************
  1961 ;; Defined at:
  1962 ;;		line 140 in file "mcc_generated_files/tmr0.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  1965 ;;		 -> TMR0_DefaultInterruptHandler(1), my10msTimerISR(1), 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		wreg
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1977 ;;      Params:         0       2       0       0       0       0
  1978 ;;      Locals:         0       0       0       0       0       0
  1979 ;;      Temps:          0       0       0       0       0       0
  1980 ;;      Totals:         0       2       0       0       0       0
  1981 ;;Total ram usage:        2 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    6
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_main
  1988 ;;		_TMR0_Initialize
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           
  1993                           ;psect for function _TMR0_SetInterruptHandler
  1994  01CC                     _TMR0_SetInterruptHandler:	
  1995                           
  1996                           ;tmr0.c: 141: TMR0_InterruptHandler = InterruptHandler;
  1997                           
  1998                           ;incstack = 0
  1999                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2000  01CC  0020               	movlb	0	; select bank0
  2001  01CD  082A               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2002  01CE  00A3               	movwf	_TMR0_InterruptHandler+1
  2003  01CF  0829               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2004  01D0  00A2               	movwf	_TMR0_InterruptHandler
  2005  01D1  0008               	return
  2006  01D2                     __end_of_TMR0_SetInterruptHandler:	
  2007                           
  2008                           	psect	text6
  2009  012A                     __ptext6:	
  2010 ;; *************** function _PIN_MANAGER_Initialize *****************
  2011 ;; Defined at:
  2012 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2026 ;;      Params:         0       0       0       0       0       0
  2027 ;;      Locals:         0       0       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0       0
  2029 ;;      Totals:         0       0       0       0       0       0
  2030 ;;Total ram usage:        0 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    6
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_SYSTEM_Initialize
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function _PIN_MANAGER_Initialize
  2042  012A                     _PIN_MANAGER_Initialize:	
  2043                           
  2044                           ;pin_manager.c: 51: LATB = 0x0;
  2045                           
  2046                           ;incstack = 0
  2047                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2048  012A  0022               	movlb	2	; select bank2
  2049  012B  018D               	clrf	13	;volatile
  2050                           
  2051                           ;pin_manager.c: 52: LATA = 0x0;
  2052  012C  018C               	clrf	12	;volatile
  2053                           
  2054                           ;pin_manager.c: 53: ANSELA = 0x1F;
  2055  012D  301F               	movlw	31
  2056  012E  0023               	movlb	3	; select bank3
  2057  012F  008C               	movwf	12	;volatile
  2058                           
  2059                           ;pin_manager.c: 54: ANSELB = 0xF8;
  2060  0130  30F8               	movlw	248
  2061  0131  008D               	movwf	13	;volatile
  2062                           
  2063                           ;pin_manager.c: 55: WPUA = 0x20;
  2064  0132  3020               	movlw	32
  2065  0133  0024               	movlb	4	; select bank4
  2066  0134  008C               	movwf	12	;volatile
  2067                           
  2068                           ;pin_manager.c: 56: WPUB = 0xFF;
  2069  0135  30FF               	movlw	255
  2070  0136  008D               	movwf	13	;volatile
  2071                           
  2072                           ;pin_manager.c: 57: TRISB = 0xFF;
  2073  0137  30FF               	movlw	255
  2074  0138  0021               	movlb	1	; select bank1
  2075  0139  008D               	movwf	13	;volatile
  2076                           
  2077                           ;pin_manager.c: 58: TRISA = 0xFB;
  2078  013A  30FB               	movlw	251
  2079  013B  008C               	movwf	12	;volatile
  2080                           
  2081                           ;pin_manager.c: 60: OPTION_REGbits.nWPUEN = 0x0;
  2082  013C  1395               	bcf	21,7	;volatile
  2083                           
  2084                           ;pin_manager.c: 61: APFCON0 = 0x00;
  2085  013D  0022               	movlb	2	; select bank2
  2086  013E  019D               	clrf	29	;volatile
  2087                           
  2088                           ;pin_manager.c: 62: APFCON1 = 0x00;
  2089  013F  019E               	clrf	30	;volatile
  2090  0140  0008               	return
  2091  0141                     __end_of_PIN_MANAGER_Initialize:	
  2092                           
  2093                           	psect	text7
  2094  01C4                     __ptext7:	
  2095 ;; *************** function _OSCILLATOR_Initialize *****************
  2096 ;; Defined at:
  2097 ;;		line 78 in file "mcc_generated_files/mcc.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2111 ;;      Params:         0       0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0
  2114 ;;      Totals:         0       0       0       0       0       0
  2115 ;;Total ram usage:        0 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    6
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_SYSTEM_Initialize
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function _OSCILLATOR_Initialize
  2127  01C4                     _OSCILLATOR_Initialize:	
  2128                           
  2129                           ;mcc.c: 81: OSCCON = 0x70;
  2130                           
  2131                           ;incstack = 0
  2132                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2133  01C4  3070               	movlw	112
  2134  01C5  0021               	movlb	1	; select bank1
  2135  01C6  0099               	movwf	25	;volatile
  2136                           
  2137                           ;mcc.c: 83: OSCSTAT = 0x00;
  2138  01C7  019A               	clrf	26	;volatile
  2139                           
  2140                           ;mcc.c: 85: OSCTUNE = 0x00;
  2141  01C8  0198               	clrf	24	;volatile
  2142  01C9                     l24:	
  2143                           ;mcc.c: 90: {
  2144                           
  2145                           ;mcc.c: 89: while(PLLR == 0)
  2146                           
  2147  01C9  1B1A               	btfsc	26,6	;volatile
  2148  01CA  0008               	return
  2149  01CB  29C9               	goto	l24
  2150  01CC                     __end_of_OSCILLATOR_Initialize:	
  2151                           
  2152                           	psect	text8
  2153  01A1                     __ptext8:	
  2154 ;; *************** function _EUSART_Initialize *****************
  2155 ;; Defined at:
  2156 ;;		line 55 in file "mcc_generated_files/eusart.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;		None
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2170 ;;      Params:         0       0       0       0       0       0
  2171 ;;      Locals:         0       0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0
  2173 ;;      Totals:         0       0       0       0       0       0
  2174 ;;Total ram usage:        0 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    6
  2177 ;; This function calls:
  2178 ;;		Nothing
  2179 ;; This function is called by:
  2180 ;;		_SYSTEM_Initialize
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           
  2185                           ;psect for function _EUSART_Initialize
  2186  01A1                     _EUSART_Initialize:	
  2187                           
  2188                           ;eusart.c: 60: BAUDCON = 0x08;
  2189                           
  2190                           ;incstack = 0
  2191                           ; Regs used in _EUSART_Initialize: [wreg]
  2192  01A1  3008               	movlw	8
  2193  01A2  0023               	movlb	3	; select bank3
  2194  01A3  009F               	movwf	31	;volatile
  2195                           
  2196                           ;eusart.c: 63: RCSTA = 0x90;
  2197  01A4  3090               	movlw	144
  2198  01A5  009D               	movwf	29	;volatile
  2199                           
  2200                           ;eusart.c: 66: TXSTA = 0x24;
  2201  01A6  3024               	movlw	36
  2202  01A7  009E               	movwf	30	;volatile
  2203                           
  2204                           ;eusart.c: 69: SPBRGL = 0x40;
  2205  01A8  3040               	movlw	64
  2206  01A9  009B               	movwf	27	;volatile
  2207                           
  2208                           ;eusart.c: 72: SPBRGH = 0x03;
  2209  01AA  3003               	movlw	3
  2210  01AB  009C               	movwf	28	;volatile
  2211  01AC  0008               	return
  2212  01AD                     __end_of_EUSART_Initialize:	
  2213                           
  2214                           	psect	text9
  2215  010A                     __ptext9:	
  2216 ;; *************** function _LED_set_state *****************
  2217 ;; Defined at:
  2218 ;;		line 16 in file "interact.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  new_state       1    wreg     enum E2833
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;  new_state       1    1[BANK0 ] enum E2833
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, status,2, status,0
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2232 ;;      Params:         0       0       0       0       0       0
  2233 ;;      Locals:         0       1       0       0       0       0
  2234 ;;      Temps:          0       1       0       0       0       0
  2235 ;;      Totals:         0       2       0       0       0       0
  2236 ;;Total ram usage:        2 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    6
  2239 ;; This function calls:
  2240 ;;		Nothing
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           
  2247                           ;psect for function _LED_set_state
  2248  010A                     _LED_set_state:	
  2249                           
  2250                           ;incstack = 0
  2251                           ; Regs used in _LED_set_state: [wreg+status,2+status,0]
  2252                           ;LED_set_state@new_state stored from wreg
  2253  010A  0020               	movlb	0	; select bank0
  2254  010B  00AA               	movwf	LED_set_state@new_state
  2255                           
  2256                           ;interact.c: 18: LED_state = new_state;
  2257  010C  082A               	movf	LED_set_state@new_state,w
  2258  010D  00A9               	movwf	??_LED_set_state
  2259  010E  0829               	movf	??_LED_set_state,w
  2260  010F  00B0               	movwf	_LED_state
  2261                           
  2262                           ;interact.c: 19: if (new_state == always_off)
  2263  0110  032A               	decf	LED_set_state@new_state,w
  2264  0111  1D03               	btfss	3,2
  2265  0112  2916               	goto	l1353
  2266                           
  2267                           ;interact.c: 20: do { LATA2 = 0; } while(0);
  2268  0113  0022               	movlb	2	; select bank2
  2269  0114  110C               	bcf	12,2	;volatile
  2270  0115  0008               	return
  2271  0116                     l1353:	
  2272                           
  2273                           ;interact.c: 21: else if (new_state == always_on)
  2274  0116  0020               	movlb	0	; select bank0
  2275  0117  082A               	movf	LED_set_state@new_state,w
  2276  0118  1D03               	btfss	3,2
  2277  0119  291D               	goto	l1355
  2278                           
  2279                           ;interact.c: 22: do { LATA2 = 1; } while(0);
  2280  011A  0022               	movlb	2	; select bank2
  2281  011B  150C               	bsf	12,2	;volatile
  2282  011C  0008               	return
  2283  011D                     l1355:	
  2284                           
  2285                           ;interact.c: 23: else if ((new_state == slow_blinking)||(new_state == fast_blinking))
  2286  011D  3002               	movlw	2
  2287  011E  0020               	movlb	0	; select bank0
  2288  011F  062A               	xorwf	LED_set_state@new_state,w
  2289  0120  1903               	btfsc	3,2
  2290  0121  2926               	goto	l190
  2291  0122  3003               	movlw	3
  2292  0123  062A               	xorwf	LED_set_state@new_state,w
  2293  0124  1D03               	btfss	3,2
  2294  0125  0008               	return
  2295  0126                     l190:	
  2296                           ;interact.c: 24: {
  2297                           ;interact.c: 25: do { LATA2 = 1; } while(0);
  2298                           
  2299  0126  0022               	movlb	2	; select bank2
  2300  0127  150C               	bsf	12,2	;volatile
  2301                           
  2302                           ;interact.c: 26: LED_counter = 0;
  2303  0128  01F2               	clrf	_LED_counter	;volatile
  2304  0129  0008               	return
  2305  012A                     __end_of_LED_set_state:	
  2306                           
  2307                           	psect	intentry
  2308  0004                     __pintentry:	
  2309 ;; *************** function _INTERRUPT_InterruptManager *****************
  2310 ;; Defined at:
  2311 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;		None
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg, status,2, status,0, pclath, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2325 ;;      Params:         0       0       0       0       0       0
  2326 ;;      Locals:         0       0       0       0       0       0
  2327 ;;      Temps:          1       0       0       0       0       0
  2328 ;;      Totals:         1       0       0       0       0       0
  2329 ;;Total ram usage:        1 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    5
  2332 ;; This function calls:
  2333 ;;		_TMR0_ISR
  2334 ;; This function is called by:
  2335 ;;		Interrupt level 1
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339  0004                     _INTERRUPT_InterruptManager:	
  2340                           
  2341                           ;incstack = 0
  2342  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2343                           
  2344                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2345  0005  3180               	pagesel	$
  2346  0006  0020               	movlb	0	; select bank0
  2347  0007  087F               	movf	127,w
  2348  0008  00F9               	movwf	??_INTERRUPT_InterruptManager
  2349                           
  2350                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2351  0009  1A8B               	btfsc	11,5	;volatile
  2352  000A  1D0B               	btfss	11,2	;volatile
  2353  000B  280E               	goto	i1l243
  2354                           
  2355                           ;interrupt_manager.c: 55: {
  2356                           ;interrupt_manager.c: 56: TMR0_ISR();
  2357  000C  3181  2156         	fcall	_TMR0_ISR
  2358  000E                     i1l243:	
  2359                           ;interrupt_manager.c: 58: else
  2360                           ;interrupt_manager.c: 59: {
  2361                           
  2362                           ;interrupt_manager.c: 57: }
  2363                           
  2364  000E  0879               	movf	??_INTERRUPT_InterruptManager,w
  2365  000F  0020               	movlb	0	; select bank0
  2366  0010  00FF               	movwf	127
  2367  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2368  0012  0009               	retfie
  2369  0013                     __end_of_INTERRUPT_InterruptManager:	
  2370                           
  2371                           	psect	text11
  2372  0156                     __ptext11:	
  2373 ;; *************** function _TMR0_ISR *****************
  2374 ;; Defined at:
  2375 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0, pclath, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2389 ;;      Params:         0       0       0       0       0       0
  2390 ;;      Locals:         0       0       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0
  2392 ;;      Totals:         0       0       0       0       0       0
  2393 ;;Total ram usage:        0 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    4
  2396 ;; This function calls:
  2397 ;;		_TMR0_CallBack
  2398 ;; This function is called by:
  2399 ;;		_INTERRUPT_InterruptManager
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function _TMR0_ISR
  2405  0156                     _TMR0_ISR:	
  2406                           
  2407                           ;tmr0.c: 110: static volatile uint16_t CountCallBack = 0;
  2408                           ;tmr0.c: 113: INTCONbits.TMR0IF = 0;
  2409                           
  2410                           ;incstack = 0
  2411                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  2412  0156  110B               	bcf	11,2	;volatile
  2413                           
  2414                           ;tmr0.c: 115: TMR0 = timer0ReloadVal;
  2415  0157  0020               	movlb	0	; select bank0
  2416  0158  0828               	movf	_timer0ReloadVal,w	;volatile
  2417  0159  0095               	movwf	21	;volatile
  2418                           
  2419                           ;tmr0.c: 118: if (++CountCallBack >= 2)
  2420  015A  3001               	movlw	1
  2421  015B  07A0               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  2422  015C  3000               	movlw	0
  2423  015D  3DA1               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  2424  015E  3000               	movlw	0
  2425  015F  0221               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  2426  0160  3002               	movlw	2
  2427  0161  1903               	skipnz
  2428  0162  0220               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  2429  0163  1C03               	skipc
  2430  0164  0008               	return
  2431                           
  2432                           ;tmr0.c: 119: {
  2433                           ;tmr0.c: 121: TMR0_CallBack();
  2434  0165  3181  21B9         	fcall	_TMR0_CallBack
  2435                           
  2436                           ;tmr0.c: 124: CountCallBack = 0;
  2437  0167  0020               	movlb	0	; select bank0
  2438  0168  01A0               	clrf	TMR0_ISR@CountCallBack	;volatile
  2439  0169  01A1               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  2440  016A  0008               	return
  2441  016B                     __end_of_TMR0_ISR:	
  2442                           
  2443                           	psect	text12
  2444  01B9                     __ptext12:	
  2445 ;; *************** function _TMR0_CallBack *****************
  2446 ;; Defined at:
  2447 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0, pclath, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2461 ;;      Params:         0       0       0       0       0       0
  2462 ;;      Locals:         0       0       0       0       0       0
  2463 ;;      Temps:          0       0       0       0       0       0
  2464 ;;      Totals:         0       0       0       0       0       0
  2465 ;;Total ram usage:        0 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    3
  2468 ;; This function calls:
  2469 ;;		Absolute function
  2470 ;;		_TMR0_DefaultInterruptHandler
  2471 ;;		_my10msTimerISR
  2472 ;; This function is called by:
  2473 ;;		_TMR0_ISR
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           
  2478                           ;psect for function _TMR0_CallBack
  2479  01B9                     _TMR0_CallBack:	
  2480                           
  2481                           ;tmr0.c: 134: if(TMR0_InterruptHandler)
  2482                           
  2483                           ;incstack = 0
  2484                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2485  01B9  0020               	movlb	0	; select bank0
  2486  01BA  0822               	movf	_TMR0_InterruptHandler,w
  2487  01BB  0423               	iorwf	_TMR0_InterruptHandler+1,w
  2488  01BC  1903               	btfsc	3,2
  2489  01BD  0008               	return
  2490                           
  2491                           ;tmr0.c: 135: {
  2492                           ;tmr0.c: 136: TMR0_InterruptHandler();
  2493  01BE  0823               	movf	_TMR0_InterruptHandler+1,w
  2494  01BF  008A               	movwf	10
  2495  01C0  0822               	movf	_TMR0_InterruptHandler,w
  2496  01C1  000A               	callw
  2497  01C2  3181               	pagesel	$
  2498  01C3  0008               	return
  2499  01C4                     __end_of_TMR0_CallBack:	
  2500                           
  2501                           	psect	text13
  2502  01D9                     __ptext13:	
  2503 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2504 ;; Defined at:
  2505 ;;		line 144 in file "mcc_generated_files/tmr0.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		None
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2519 ;;      Params:         0       0       0       0       0       0
  2520 ;;      Locals:         0       0       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0
  2522 ;;      Totals:         0       0       0       0       0       0
  2523 ;;Total ram usage:        0 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_TMR0_Initialize
  2529 ;;		_TMR0_CallBack
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           
  2534                           ;psect for function _TMR0_DefaultInterruptHandler
  2535  01D9                     _TMR0_DefaultInterruptHandler:	
  2536                           
  2537                           ;incstack = 0
  2538                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  2539  01D9  0008               	return
  2540  01DA                     __end_of_TMR0_DefaultInterruptHandler:	
  2541                           
  2542                           	psect	text14
  2543  01D2                     __ptext14:	
  2544 ;; *************** function _my10msTimerISR *****************
  2545 ;; Defined at:
  2546 ;;		line 92 in file "main.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;		None
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0, pclath, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2560 ;;      Params:         0       0       0       0       0       0
  2561 ;;      Locals:         0       0       0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0
  2563 ;;      Totals:         0       0       0       0       0       0
  2564 ;;Total ram usage:        0 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    2
  2567 ;; This function calls:
  2568 ;;		_LED_update_loop
  2569 ;;		_button_update_loop
  2570 ;; This function is called by:
  2571 ;;		_main
  2572 ;;		_TMR0_CallBack
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           
  2577                           ;psect for function _my10msTimerISR
  2578  01D2                     _my10msTimerISR:	
  2579                           
  2580                           ;main.c: 94: LED_update_loop();
  2581                           
  2582                           ;incstack = 0
  2583                           ; Regs used in _my10msTimerISR: [wreg+status,2+status,0+pclath+cstack]
  2584  01D2  3180  20E2  3181   	fcall	_LED_update_loop
  2585                           
  2586                           ;main.c: 95: button_update_loop();
  2587  01D5  3180  202A         	fcall	_button_update_loop
  2588  01D7  0008               	return
  2589  01D8                     __end_of_my10msTimerISR:	
  2590                           
  2591                           	psect	text15
  2592  002A                     __ptext15:	
  2593 ;; *************** function _button_update_loop *****************
  2594 ;; Defined at:
  2595 ;;		line 78 in file "interact.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  current_stat    1    3[COMMON] unsigned char 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, pclath, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2609 ;;      Params:         0       0       0       0       0       0
  2610 ;;      Locals:         1       0       0       0       0       0
  2611 ;;      Temps:          2       0       0       0       0       0
  2612 ;;      Totals:         3       0       0       0       0       0
  2613 ;;Total ram usage:        3 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    1
  2616 ;; This function calls:
  2617 ;;		i1_get_button_state
  2618 ;; This function is called by:
  2619 ;;		_my10msTimerISR
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function _button_update_loop
  2625  002A                     _button_update_loop:	
  2626                           
  2627                           ;interact.c: 80: unsigned char current_state = get_button_state();
  2628                           
  2629                           ;incstack = 0
  2630                           ; Regs used in _button_update_loop: [wreg+status,2+status,0+pclath+cstack]
  2631  002A  3181  21AD  3180   	fcall	i1_get_button_state
  2632  002D  00F6               	movwf	??_button_update_loop
  2633  002E  0876               	movf	??_button_update_loop,w
  2634  002F  00F8               	movwf	button_update_loop@current_state
  2635                           
  2636                           ;interact.c: 81: if (!b_push_confirmed)
  2637  0030  0020               	movlb	0	; select bank0
  2638  0031  0826               	movf	_b_push_confirmed,w	;volatile
  2639  0032  1D03               	btfss	3,2
  2640  0033  2859               	goto	i1l1157
  2641                           
  2642                           ;interact.c: 82: {
  2643                           ;interact.c: 84: if (current_state != b_last_state)
  2644  0034  0878               	movf	button_update_loop@current_state,w
  2645  0035  00F6               	movwf	??_button_update_loop
  2646  0036  01F7               	clrf	??_button_update_loop+1
  2647  0037  0871               	movf	_b_last_state+1,w	;volatile
  2648  0038  0677               	xorwf	??_button_update_loop+1,w
  2649  0039  1D03               	skipz
  2650  003A  283D               	goto	u70_25
  2651  003B  0870               	movf	_b_last_state,w	;volatile
  2652  003C  0676               	xorwf	??_button_update_loop,w
  2653  003D                     u70_25:	
  2654  003D  1903               	skipnz
  2655  003E  2848               	goto	i1l1149
  2656                           
  2657                           ;interact.c: 85: {
  2658                           ;interact.c: 86: b_count_pressed = 0;
  2659  003F  01F4               	clrf	_b_count_pressed	;volatile
  2660                           
  2661                           ;interact.c: 87: b_last_state = current_state;
  2662  0040  0878               	movf	button_update_loop@current_state,w
  2663  0041  00F6               	movwf	??_button_update_loop
  2664  0042  01F7               	clrf	??_button_update_loop+1
  2665  0043  0876               	movf	??_button_update_loop,w
  2666  0044  00F0               	movwf	_b_last_state	;volatile
  2667  0045  0877               	movf	??_button_update_loop+1,w
  2668  0046  00F1               	movwf	_b_last_state+1	;volatile
  2669                           
  2670                           ;interact.c: 88: }
  2671  0047  0008               	return
  2672  0048                     i1l1149:	
  2673                           
  2674                           ;interact.c: 89: else if (b_last_state == 1)
  2675  0048  0370               	decf	_b_last_state,w	;volatile
  2676  0049  0471               	iorwf	_b_last_state+1,w	;volatile
  2677  004A  1D03               	btfss	3,2
  2678  004B  0008               	return
  2679                           
  2680                           ;interact.c: 90: {
  2681                           ;interact.c: 91: b_count_pressed++;
  2682  004C  3001               	movlw	1
  2683  004D  00F6               	movwf	??_button_update_loop
  2684  004E  0876               	movf	??_button_update_loop,w
  2685  004F  07F4               	addwf	_b_count_pressed,f	;volatile
  2686                           
  2687                           ;interact.c: 92: if (b_count_pressed > 5)
  2688  0050  3006               	movlw	6
  2689  0051  0274               	subwf	_b_count_pressed,w	;volatile
  2690  0052  1C03               	skipc
  2691  0053  0008               	return
  2692                           
  2693                           ;interact.c: 93: b_push_confirmed = 1;
  2694  0054  3001               	movlw	1
  2695  0055  00F6               	movwf	??_button_update_loop
  2696  0056  0876               	movf	??_button_update_loop,w
  2697  0057  00A6               	movwf	_b_push_confirmed	;volatile
  2698                           
  2699                           ;interact.c: 94: }
  2700                           ;interact.c: 95: }
  2701  0058  0008               	return
  2702  0059                     i1l1157:	
  2703                           
  2704                           ;interact.c: 96: else
  2705                           ;interact.c: 97: {
  2706                           ;interact.c: 98: if (current_state != b_last_state)
  2707  0059  0878               	movf	button_update_loop@current_state,w
  2708  005A  00F6               	movwf	??_button_update_loop
  2709  005B  01F7               	clrf	??_button_update_loop+1
  2710  005C  0871               	movf	_b_last_state+1,w	;volatile
  2711  005D  0677               	xorwf	??_button_update_loop+1,w
  2712  005E  1D03               	skipz
  2713  005F  2862               	goto	u73_25
  2714  0060  0870               	movf	_b_last_state,w	;volatile
  2715  0061  0676               	xorwf	??_button_update_loop,w
  2716  0062                     u73_25:	
  2717  0062  1903               	skipnz
  2718  0063  2871               	goto	i1l1165
  2719                           
  2720                           ;interact.c: 99: {
  2721                           ;interact.c: 100: b_count_released = 0;
  2722  0064  01A4               	clrf	_b_count_released	;volatile
  2723                           
  2724                           ;interact.c: 101: b_last_state = current_state;
  2725  0065  0878               	movf	button_update_loop@current_state,w
  2726  0066  00F6               	movwf	??_button_update_loop
  2727  0067  01F7               	clrf	??_button_update_loop+1
  2728  0068  0876               	movf	??_button_update_loop,w
  2729  0069  00F0               	movwf	_b_last_state	;volatile
  2730  006A  0877               	movf	??_button_update_loop+1,w
  2731  006B  00F1               	movwf	_b_last_state+1	;volatile
  2732                           
  2733                           ;interact.c: 102: b_has_once_been_released = 1;
  2734  006C  3001               	movlw	1
  2735  006D  00F6               	movwf	??_button_update_loop
  2736  006E  0876               	movf	??_button_update_loop,w
  2737  006F  00A5               	movwf	_b_has_once_been_released	;volatile
  2738                           
  2739                           ;interact.c: 103: }
  2740  0070  0008               	return
  2741  0071                     i1l1165:	
  2742                           
  2743                           ;interact.c: 104: else if ((b_last_state == 1)&&(!b_has_once_been_released))
  2744  0071  0370               	decf	_b_last_state,w	;volatile
  2745  0072  0471               	iorwf	_b_last_state+1,w	;volatile
  2746  0073  1D03               	btfss	3,2
  2747  0074  2885               	goto	i1l1175
  2748  0075  0825               	movf	_b_has_once_been_released,w	;volatile
  2749  0076  1D03               	btfss	3,2
  2750  0077  2885               	goto	i1l1175
  2751                           
  2752                           ;interact.c: 105: {
  2753                           ;interact.c: 106: b_count_pressed++;
  2754  0078  3001               	movlw	1
  2755  0079  00F6               	movwf	??_button_update_loop
  2756  007A  0876               	movf	??_button_update_loop,w
  2757  007B  07F4               	addwf	_b_count_pressed,f	;volatile
  2758                           
  2759                           ;interact.c: 107: if (b_count_pressed >= 100)
  2760  007C  3064               	movlw	100
  2761  007D  0274               	subwf	_b_count_pressed,w	;volatile
  2762  007E  1C03               	skipc
  2763  007F  0008               	return
  2764                           
  2765                           ;interact.c: 108: b_confirmed_state = long_push;
  2766  0080  3002               	movlw	2
  2767  0081  00F6               	movwf	??_button_update_loop
  2768  0082  0876               	movf	??_button_update_loop,w
  2769  0083  00F3               	movwf	_b_confirmed_state	;volatile
  2770                           
  2771                           ;interact.c: 109: }
  2772  0084  0008               	return
  2773  0085                     i1l1175:	
  2774                           
  2775                           ;interact.c: 110: else if (b_last_state == 0)
  2776  0085  0870               	movf	_b_last_state,w	;volatile
  2777  0086  0471               	iorwf	_b_last_state+1,w	;volatile
  2778  0087  1D03               	btfss	3,2
  2779  0088  0008               	return
  2780                           
  2781                           ;interact.c: 111: {
  2782                           ;interact.c: 112: b_count_released++;
  2783  0089  3001               	movlw	1
  2784  008A  00F6               	movwf	??_button_update_loop
  2785  008B  0876               	movf	??_button_update_loop,w
  2786  008C  07A4               	addwf	_b_count_released,f	;volatile
  2787                           
  2788                           ;interact.c: 113: if (b_count_released > 10)
  2789  008D  300B               	movlw	11
  2790  008E  0224               	subwf	_b_count_released,w	;volatile
  2791  008F  1C03               	skipc
  2792  0090  0008               	return
  2793                           
  2794                           ;interact.c: 114: if (b_count_pressed >= 75)
  2795  0091  304B               	movlw	75
  2796  0092  0274               	subwf	_b_count_pressed,w	;volatile
  2797  0093  1C03               	skipc
  2798  0094  289A               	goto	i1l1185
  2799                           
  2800                           ;interact.c: 115: b_confirmed_state = long_push;
  2801  0095  3002               	movlw	2
  2802  0096  00F6               	movwf	??_button_update_loop
  2803  0097  0876               	movf	??_button_update_loop,w
  2804  0098  00F3               	movwf	_b_confirmed_state	;volatile
  2805  0099  0008               	return
  2806  009A                     i1l1185:	
  2807                           
  2808                           ;interact.c: 116: else
  2809                           ;interact.c: 117: b_confirmed_state = short_push;
  2810  009A  3001               	movlw	1
  2811  009B  00F6               	movwf	??_button_update_loop
  2812  009C  0876               	movf	??_button_update_loop,w
  2813  009D  00F3               	movwf	_b_confirmed_state	;volatile
  2814  009E  0008               	return
  2815  009F                     __end_of_button_update_loop:	
  2816                           
  2817                           	psect	text16
  2818  01AD                     __ptext16:	
  2819 ;; *************** function i1_get_button_state *****************
  2820 ;; Defined at:
  2821 ;;		line 58 in file "interact.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  get_button_s    1    0[COMMON] unsigned char 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      unsigned char 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2835 ;;      Params:         0       0       0       0       0       0
  2836 ;;      Locals:         1       0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0
  2838 ;;      Totals:         1       0       0       0       0       0
  2839 ;;Total ram usage:        1 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_button_update_loop
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           
  2849                           ;psect for function i1_get_button_state
  2850  01AD                     i1_get_button_state:	
  2851                           
  2852                           ;interact.c: 61: unsigned char state = PORTBbits.RB0;
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in i1_get_button_state: [wreg+status,2+status,0]
  2856  01AD  3000               	movlw	0
  2857  01AE  0020               	movlb	0	; select bank0
  2858  01AF  180D               	btfsc	13,0	;volatile
  2859  01B0  3001               	movlw	1
  2860  01B1  00F5               	movwf	i1get_button_state@state
  2861                           
  2862                           ;interact.c: 62: if (state == 1)
  2863  01B2  0375               	decf	i1get_button_state@state,w
  2864  01B3  1D03               	btfss	3,2
  2865  01B4  29B7               	goto	i1l1109
  2866                           
  2867                           ;interact.c: 63: return 0;
  2868  01B5  3000               	movlw	0
  2869  01B6  0008               	return
  2870  01B7                     i1l1109:	
  2871                           
  2872                           ;interact.c: 64: else return 1;
  2873  01B7  3001               	movlw	1
  2874  01B8  0008               	return
  2875  01B9                     __end_ofi1_get_button_state:	
  2876                           
  2877                           	psect	text17
  2878  00E2                     __ptext17:	
  2879 ;; *************** function _LED_update_loop *****************
  2880 ;; Defined at:
  2881 ;;		line 30 in file "interact.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2895 ;;      Params:         0       0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0
  2897 ;;      Temps:          1       0       0       0       0       0
  2898 ;;      Totals:         1       0       0       0       0       0
  2899 ;;Total ram usage:        1 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_my10msTimerISR
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           
  2909                           ;psect for function _LED_update_loop
  2910  00E2                     _LED_update_loop:	
  2911                           
  2912                           ;interact.c: 32: if (LED_state == manual_mode)
  2913                           
  2914                           ;incstack = 0
  2915                           ; Regs used in _LED_update_loop: [wreg+status,2+status,0]
  2916  00E2  3004               	movlw	4
  2917  00E3  0020               	movlb	0	; select bank0
  2918  00E4  0630               	xorwf	_LED_state,w
  2919  00E5  1903               	btfsc	3,2
  2920  00E6  0008               	return
  2921                           
  2922                           ;interact.c: 34: else if (LED_state == slow_blinking)
  2923                           
  2924                           ;interact.c: 33: return;
  2925  00E7  3002               	movlw	2
  2926  00E8  0630               	xorwf	_LED_state,w
  2927  00E9  1D03               	btfss	3,2
  2928  00EA  28F8               	goto	i1l1129
  2929                           
  2930                           ;interact.c: 35: {
  2931                           ;interact.c: 36: LED_counter++;
  2932  00EB  3001               	movlw	1
  2933  00EC  00F5               	movwf	??_LED_update_loop
  2934  00ED  0875               	movf	??_LED_update_loop,w
  2935  00EE  07F2               	addwf	_LED_counter,f	;volatile
  2936                           
  2937                           ;interact.c: 37: if (LED_counter >= 85)
  2938  00EF  3055               	movlw	85
  2939  00F0  0272               	subwf	_LED_counter,w	;volatile
  2940  00F1  1C03               	skipc
  2941  00F2  0008               	return
  2942                           
  2943                           ;interact.c: 38: {
  2944                           ;interact.c: 39: LED_counter = 0;
  2945  00F3  01F2               	clrf	_LED_counter	;volatile
  2946                           
  2947                           ;interact.c: 40: do { LATA2 = ~LATA2; } while(0);
  2948  00F4  3004               	movlw	4
  2949  00F5  0022               	movlb	2	; select bank2
  2950  00F6  068C               	xorwf	12,f
  2951                           
  2952                           ;interact.c: 41: }
  2953                           ;interact.c: 42: }
  2954  00F7  0008               	return
  2955  00F8                     i1l1129:	
  2956                           
  2957                           ;interact.c: 43: else if (LED_state == fast_blinking)
  2958  00F8  3003               	movlw	3
  2959  00F9  0020               	movlb	0	; select bank0
  2960  00FA  0630               	xorwf	_LED_state,w
  2961  00FB  1D03               	btfss	3,2
  2962  00FC  0008               	return
  2963                           
  2964                           ;interact.c: 44: {
  2965                           ;interact.c: 45: LED_counter++;
  2966  00FD  3001               	movlw	1
  2967  00FE  00F5               	movwf	??_LED_update_loop
  2968  00FF  0875               	movf	??_LED_update_loop,w
  2969  0100  07F2               	addwf	_LED_counter,f	;volatile
  2970                           
  2971                           ;interact.c: 46: if (LED_counter >= 20)
  2972  0101  3014               	movlw	20
  2973  0102  0272               	subwf	_LED_counter,w	;volatile
  2974  0103  1C03               	skipc
  2975  0104  0008               	return
  2976                           
  2977                           ;interact.c: 47: {
  2978                           ;interact.c: 48: LED_counter = 0;
  2979  0105  01F2               	clrf	_LED_counter	;volatile
  2980                           
  2981                           ;interact.c: 49: do { LATA2 = ~LATA2; } while(0);
  2982  0106  3004               	movlw	4
  2983  0107  0022               	movlb	2	; select bank2
  2984  0108  068C               	xorwf	12,f
  2985  0109  0008               	return
  2986  010A                     __end_of_LED_update_loop:	
  2987  007E                     btemp	set	126	;btemp
  2988  007E                     int$flags	set	126
  2989  007E                     wtemp	set	126
  2990  007E                     wtemp0	set	126
  2991  0080                     wtemp1	set	128
  2992  0082                     wtemp2	set	130
  2993  0084                     wtemp3	set	132
  2994  0086                     wtemp4	set	134
  2995  0088                     wtemp5	set	136
  2996  007F                     wtemp6	set	127
  2997  007E                     ttemp	set	126
  2998  007E                     ttemp0	set	126
  2999  0081                     ttemp1	set	129
  3000  0084                     ttemp2	set	132
  3001  0087                     ttemp3	set	135
  3002  007F                     ttemp4	set	127
  3003  007E                     ltemp	set	126
  3004  007E                     ltemp0	set	126
  3005  0082                     ltemp1	set	130
  3006  0086                     ltemp2	set	134
  3007  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    14
    Data        1
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      7      17
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), my10msTimerISR(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), my10msTimerISR(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _my10msTimerISR->_button_update_loop
    _button_update_loop->i1_get_button_state

Critical Paths under _main in BANK0

    _main->_button_init
    _button_init->_get_button_state
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     579
                                              3 BANK0      4     4      0
                      _LED_set_state
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                        _button_init
 ---------------------------------------------------------------------------------
 (1) _button_init                                          2     2      0      34
                                              1 BANK0      2     2      0
                   _get_button_state
 ---------------------------------------------------------------------------------
 (2) _get_button_state                                     1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     161
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     161
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     161
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_set_state                                        2     2      0     155
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0     112
                                              4 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0     112
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0     112
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                     _my10msTimerISR *
 ---------------------------------------------------------------------------------
 (7) _my10msTimerISR                                       0     0      0     112
                    _LED_update_loop
                 _button_update_loop
 ---------------------------------------------------------------------------------
 (8) _button_update_loop                                   3     3      0     112
                                              1 COMMON     3     3      0
                 i1_get_button_state
 ---------------------------------------------------------------------------------
 (9) i1_get_button_state                                   1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _LED_update_loop                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LED_set_state
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _button_init
     _get_button_state

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _my10msTimerISR *
         _LED_update_loop
         _button_update_loop
           i1_get_button_state

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      7      11       6       21.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      1B      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Sep 19 20:17:11 2016

             __size_ofi1_get_button_state 000C                               __CFG_CP$OFF 0000  
                                      l24 01C9                           _timer0ReloadVal 0028  
                  __end_of_my10msTimerISR 01D8                                       l190 0126  
                            __CFG_CPD$OFF 0000                              __CFG_BORV$LO 0000  
                            __CFG_IESO$ON 0000                              __CFG_LVP$OFF 0000  
                                    l1401 00D9                                      l1343 0193  
                                    l1353 0116                                      l1355 011D  
                                    l1381 00AC                                      l1393 00C7  
                                    l1395 00CE                                      l1387 00B2  
                                    u1057 00B8                                      _LATA 010C  
                                    _LATB 010D                                      _PLLR 04D6  
                                    _TMR0 0015                                      _WPUA 020C  
                                    _WPUB 020D                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                                      _main 009F  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    ltemp 007E                                      start 0013  
                                    ttemp 007E                                      wtemp 007E  
                           __CFG_MCLRE$ON 0000                   __end_of_TMR0_Initialize 0156  
                           __CFG_PLLEN$ON 0000            ??_TMR0_DefaultInterruptHandler 0075  
          __size_of_OSCILLATOR_Initialize 0008             __end_of_OSCILLATOR_Initialize 01CC  
                                   ?_main 0075                             __CFG_WDTE$OFF 0000  
                                   _LATA2 0862                           ?_my10msTimerISR 0075  
                                   i1l243 000E                                     _RCREG 0199  
                                   _RCSTA 019D                                     u70_25 003D  
                                   _TRISA 008C                                     _TRISB 008D  
                                   u73_25 0062                                     _TXREG 019A  
                                   _TXSTA 019E         __size_of_TMR0_SetInterruptHandler 0006  
                            ?_button_init 0075                 ?_TMR0_SetInterruptHandler 0029  
                         __end_of_fp_x0_a 017F                           __end_of_fp_x0_b 0183  
                        __end_of_TMR0_ISR 016B                   __end_of_LED_update_loop 010A  
                                   pclath 000A                                     ltemp0 007E  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080                                     ttemp0 007E  
                                   ttemp1 0081                                     ttemp2 0084  
                                   ttemp3 0087                                     ttemp4 007F  
                                   status 0003                                     wtemp0 007E  
                                   wtemp1 0080                                     wtemp2 0082  
                                   wtemp3 0084                                     wtemp4 0086  
                                   wtemp5 0088                                     wtemp6 007F  
                         __initialization 0015                    __size_of_LED_set_state 0020  
                            __end_of_main 00E2               ?_INTERRUPT_InterruptManager 0075  
                                  ??_main 002C                              _b_last_state 0070  
                        _b_push_confirmed 0026                           _b_count_pressed 0074  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  i1l1109 01B7                                    i1l1129 00F8  
                                  i1l1165 0071                                    i1l1149 0048  
                                  i1l1157 0059                                    i1l1175 0085  
                                  i1l1185 009A                                    _OSCCON 0099  
                                  _SPBRGH 019C                                    _SPBRGL 019B  
                          __CFG_PWRTE$OFF 0000                            __CFG_STVREN$ON 0000  
                        ?_TMR0_Initialize 0075                __end_of_button_update_loop 009F  
                 i1get_button_state@state 0075                             _LED_set_state 010A  
                   __end_of_TMR0_CallBack 01C4  TMR0_SetInterruptHandler@InterruptHandler 0029  
               __size_of_get_button_state 000C                          ?_LED_update_loop 0075  
                       _SYSTEM_Initialize 0195                   __end_of__initialization 0026  
                      ?_SYSTEM_Initialize 0075                            __pcstackCOMMON 0075  
                            __pidataBANK0 01D8                       ??_SYSTEM_Initialize 002C  
                               ?_TMR0_ISR 0075                            _OPTION_REGbits 0095  
                   TMR0_ISR@CountCallBack 0020                            ?_LED_set_state 0075  
                _b_has_once_been_released 0025                      __size_of_button_init 0010  
               __end_of_SYSTEM_Initialize 01A1                                __pbssBANK0 0020  
                        _b_count_released 0024                __end_ofi1_get_button_state 01B9  
                              __pmaintext 009F          __end_of_TMR0_SetInterruptHandler 01D2  
                              ??_TMR0_ISR 0079                          ??_my10msTimerISR 0079  
                              __pintentry 0004                                   _BAUDCON 019F  
                                 _APFCON0 011D                                   _APFCON1 011E  
                   get_button_state@state 0029                                   _OSCSTAT 009A  
                                 _OSCTUNE 0098                                   _fp_x0_a 017B  
                                 _fp_x0_b 017F                                   __ptext1 016B  
                                 __ptext2 0189                                   __ptext3 0195  
                                 __ptext4 0141                                   __ptext5 01CC  
                                 __ptext6 012A                                   __ptext7 01C4  
                                 __ptext8 01A1                                   __ptext9 010A  
                         ??_LED_set_state 0029                     _OSCILLATOR_Initialize 01C4  
                ??_PIN_MANAGER_Initialize 0029                __size_of_SYSTEM_Initialize 000C  
                        _get_button_state 0189                                   main@tmp 002F  
                    end_of_initialization 0026                         __end_of_ratio_mph 0187  
                  LED_set_state@new_state 002A                                 _LED_state 0030  
                       _EUSART_Initialize 01A1                        ?_EUSART_Initialize 0075  
                               _RCSTAbits 019D                              __pstringtext 017B  
                     ??_EUSART_Initialize 0029                  _TMR0_SetInterruptHandler 01CC  
                               _PORTBbits 000D                          __CFG_FOSC$INTOSC 0000  
                      _button_update_loop 002A                 __end_of_EUSART_Initialize 01AD  
                     ?_button_update_loop 0075                         __size_of_TMR0_ISR 0015  
                        convert_to_fp@one 0187                    ?_OSCILLATOR_Initialize 0075  
                    ??_button_update_loop 0076                       start_initialization 0015  
                __size_of_TMR0_Initialize 0015           __size_of_PIN_MANAGER_Initialize 0017  
                __size_of_LED_update_loop 0028                    __size_of_TMR0_CallBack 000B  
                             __pdataBANK0 0030                        i1_get_button_state 01AD  
                           ??_button_init 002A                               __pbssCOMMON 0070  
                               ___latbits 0001                             __pcstackBANK0 0029  
                     ?i1_get_button_state 0075                __size_of_EUSART_Initialize 000C  
                   _TMR0_InterruptHandler 0022                    _PIN_MANAGER_Initialize 012A  
                    ??i1_get_button_state 0075                  __end_of_get_button_state 0195  
            ??_INTERRUPT_InterruptManager 0079                             _TMR0_CallBack 01B9  
                     __end_of_button_init 017B                         ??_TMR0_Initialize 002B  
                               _ratio_mph 0183       __size_of_INTERRUPT_InterruptManager 000F  
              ??_TMR0_SetInterruptHandler 002B                                  _PIR1bits 0011  
                                _TMR0_ISR 0156                         ??_LED_update_loop 0075  
                   __end_of_LED_set_state 012A                   __size_of_my10msTimerISR 0006  
                          ?_TMR0_CallBack 0075                  __end_ofconvert_to_fp@one 0189  
                             _LED_counter 0072                   ??_OSCILLATOR_Initialize 0029  
         button_update_loop@current_state 0078                               _button_init 016B  
                                __ptext11 0156                                  __ptext12 01B9  
                                __ptext13 01D9                                  __ptext14 01D2  
                                __ptext15 002A                                  __ptext16 01AD  
                                __ptext17 00E2                         _b_confirmed_state 0073  
                           __size_of_main 0043      __end_of_TMR0_DefaultInterruptHandler 01DA  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 01D9  
                                int$flags 007E                       _b_release_confirmed 0027  
      __end_of_INTERRUPT_InterruptManager 0013                _INTERRUPT_InterruptManager 0004  
             __size_of_button_update_loop 0075                                _INTCONbits 000B  
                         ??_TMR0_CallBack 0079                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0075                         __CFG_CLKOUTEN$OFF 0000  
           ?_TMR0_DefaultInterruptHandler 0075                         ?_get_button_state 0075  
                      ??_get_button_state 0029                                _OPTION_REG 0095  
                         _TMR0_Initialize 0141                            _my10msTimerISR 01D2  
          __end_of_PIN_MANAGER_Initialize 0141                           _LED_update_loop 00E2  

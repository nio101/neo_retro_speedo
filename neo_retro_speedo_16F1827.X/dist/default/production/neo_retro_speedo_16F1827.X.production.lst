

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Sep 19 08:20:10 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0016                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001C                     	;# 
    44  001E                     	;# 
    45  001F                     	;# 
    46  008C                     	;# 
    47  008D                     	;# 
    48  0091                     	;# 
    49  0092                     	;# 
    50  0093                     	;# 
    51  0094                     	;# 
    52  0095                     	;# 
    53  0096                     	;# 
    54  0097                     	;# 
    55  0098                     	;# 
    56  0099                     	;# 
    57  009A                     	;# 
    58  009B                     	;# 
    59  009B                     	;# 
    60  009C                     	;# 
    61  009D                     	;# 
    62  009E                     	;# 
    63  010C                     	;# 
    64  010D                     	;# 
    65  0111                     	;# 
    66  0112                     	;# 
    67  0113                     	;# 
    68  0114                     	;# 
    69  0115                     	;# 
    70  0116                     	;# 
    71  0117                     	;# 
    72  0118                     	;# 
    73  0119                     	;# 
    74  011A                     	;# 
    75  011B                     	;# 
    76  011D                     	;# 
    77  011E                     	;# 
    78  018C                     	;# 
    79  018D                     	;# 
    80  0191                     	;# 
    81  0191                     	;# 
    82  0192                     	;# 
    83  0193                     	;# 
    84  0193                     	;# 
    85  0193                     	;# 
    86  0194                     	;# 
    87  0195                     	;# 
    88  0196                     	;# 
    89  0199                     	;# 
    90  019A                     	;# 
    91  019B                     	;# 
    92  019B                     	;# 
    93  019B                     	;# 
    94  019B                     	;# 
    95  019C                     	;# 
    96  019C                     	;# 
    97  019D                     	;# 
    98  019E                     	;# 
    99  019F                     	;# 
   100  020C                     	;# 
   101  020D                     	;# 
   102  0211                     	;# 
   103  0211                     	;# 
   104  0212                     	;# 
   105  0212                     	;# 
   106  0213                     	;# 
   107  0213                     	;# 
   108  0214                     	;# 
   109  0214                     	;# 
   110  0215                     	;# 
   111  0215                     	;# 
   112  0215                     	;# 
   113  0216                     	;# 
   114  0216                     	;# 
   115  0217                     	;# 
   116  0217                     	;# 
   117  0219                     	;# 
   118  021A                     	;# 
   119  021B                     	;# 
   120  021C                     	;# 
   121  021D                     	;# 
   122  021E                     	;# 
   123  021F                     	;# 
   124  0291                     	;# 
   125  0291                     	;# 
   126  0292                     	;# 
   127  0293                     	;# 
   128  0294                     	;# 
   129  0295                     	;# 
   130  0295                     	;# 
   131  0296                     	;# 
   132  0298                     	;# 
   133  0298                     	;# 
   134  0299                     	;# 
   135  029A                     	;# 
   136  029B                     	;# 
   137  029C                     	;# 
   138  029C                     	;# 
   139  029D                     	;# 
   140  029E                     	;# 
   141  029E                     	;# 
   142  0311                     	;# 
   143  0311                     	;# 
   144  0312                     	;# 
   145  0313                     	;# 
   146  0318                     	;# 
   147  0318                     	;# 
   148  0319                     	;# 
   149  031A                     	;# 
   150  0394                     	;# 
   151  0395                     	;# 
   152  0396                     	;# 
   153  039A                     	;# 
   154  039C                     	;# 
   155  039D                     	;# 
   156  039E                     	;# 
   157  039F                     	;# 
   158  0415                     	;# 
   159  0416                     	;# 
   160  0417                     	;# 
   161  041C                     	;# 
   162  041D                     	;# 
   163  041E                     	;# 
   164  0FE4                     	;# 
   165  0FE5                     	;# 
   166  0FE6                     	;# 
   167  0FE7                     	;# 
   168  0FE8                     	;# 
   169  0FE9                     	;# 
   170  0FEA                     	;# 
   171  0FEB                     	;# 
   172  0FED                     	;# 
   173  0FEE                     	;# 
   174  0FEF                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0008                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  0091                     	;# 
   207  0092                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  0111                     	;# 
   224  0112                     	;# 
   225  0113                     	;# 
   226  0114                     	;# 
   227  0115                     	;# 
   228  0116                     	;# 
   229  0117                     	;# 
   230  0118                     	;# 
   231  0119                     	;# 
   232  011A                     	;# 
   233  011B                     	;# 
   234  011D                     	;# 
   235  011E                     	;# 
   236  018C                     	;# 
   237  018D                     	;# 
   238  0191                     	;# 
   239  0191                     	;# 
   240  0192                     	;# 
   241  0193                     	;# 
   242  0193                     	;# 
   243  0193                     	;# 
   244  0194                     	;# 
   245  0195                     	;# 
   246  0196                     	;# 
   247  0199                     	;# 
   248  019A                     	;# 
   249  019B                     	;# 
   250  019B                     	;# 
   251  019B                     	;# 
   252  019B                     	;# 
   253  019C                     	;# 
   254  019C                     	;# 
   255  019D                     	;# 
   256  019E                     	;# 
   257  019F                     	;# 
   258  020C                     	;# 
   259  020D                     	;# 
   260  0211                     	;# 
   261  0211                     	;# 
   262  0212                     	;# 
   263  0212                     	;# 
   264  0213                     	;# 
   265  0213                     	;# 
   266  0214                     	;# 
   267  0214                     	;# 
   268  0215                     	;# 
   269  0215                     	;# 
   270  0215                     	;# 
   271  0216                     	;# 
   272  0216                     	;# 
   273  0217                     	;# 
   274  0217                     	;# 
   275  0219                     	;# 
   276  021A                     	;# 
   277  021B                     	;# 
   278  021C                     	;# 
   279  021D                     	;# 
   280  021E                     	;# 
   281  021F                     	;# 
   282  0291                     	;# 
   283  0291                     	;# 
   284  0292                     	;# 
   285  0293                     	;# 
   286  0294                     	;# 
   287  0295                     	;# 
   288  0295                     	;# 
   289  0296                     	;# 
   290  0298                     	;# 
   291  0298                     	;# 
   292  0299                     	;# 
   293  029A                     	;# 
   294  029B                     	;# 
   295  029C                     	;# 
   296  029C                     	;# 
   297  029D                     	;# 
   298  029E                     	;# 
   299  029E                     	;# 
   300  0311                     	;# 
   301  0311                     	;# 
   302  0312                     	;# 
   303  0313                     	;# 
   304  0318                     	;# 
   305  0318                     	;# 
   306  0319                     	;# 
   307  031A                     	;# 
   308  0394                     	;# 
   309  0395                     	;# 
   310  0396                     	;# 
   311  039A                     	;# 
   312  039C                     	;# 
   313  039D                     	;# 
   314  039E                     	;# 
   315  039F                     	;# 
   316  0415                     	;# 
   317  0416                     	;# 
   318  0417                     	;# 
   319  041C                     	;# 
   320  041D                     	;# 
   321  041E                     	;# 
   322  0FE4                     	;# 
   323  0FE5                     	;# 
   324  0FE6                     	;# 
   325  0FE7                     	;# 
   326  0FE8                     	;# 
   327  0FE9                     	;# 
   328  0FEA                     	;# 
   329  0FEB                     	;# 
   330  0FED                     	;# 
   331  0FEE                     	;# 
   332  0FEF                     	;# 
   333  0000                     	;# 
   334  0001                     	;# 
   335  0002                     	;# 
   336  0003                     	;# 
   337  0004                     	;# 
   338  0005                     	;# 
   339  0006                     	;# 
   340  0007                     	;# 
   341  0008                     	;# 
   342  0009                     	;# 
   343  000A                     	;# 
   344  000B                     	;# 
   345  000C                     	;# 
   346  000D                     	;# 
   347  0011                     	;# 
   348  0012                     	;# 
   349  0013                     	;# 
   350  0014                     	;# 
   351  0015                     	;# 
   352  0016                     	;# 
   353  0016                     	;# 
   354  0017                     	;# 
   355  0018                     	;# 
   356  0019                     	;# 
   357  001A                     	;# 
   358  001B                     	;# 
   359  001C                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  008C                     	;# 
   363  008D                     	;# 
   364  0091                     	;# 
   365  0092                     	;# 
   366  0093                     	;# 
   367  0094                     	;# 
   368  0095                     	;# 
   369  0096                     	;# 
   370  0097                     	;# 
   371  0098                     	;# 
   372  0099                     	;# 
   373  009A                     	;# 
   374  009B                     	;# 
   375  009B                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  010C                     	;# 
   380  010D                     	;# 
   381  0111                     	;# 
   382  0112                     	;# 
   383  0113                     	;# 
   384  0114                     	;# 
   385  0115                     	;# 
   386  0116                     	;# 
   387  0117                     	;# 
   388  0118                     	;# 
   389  0119                     	;# 
   390  011A                     	;# 
   391  011B                     	;# 
   392  011D                     	;# 
   393  011E                     	;# 
   394  018C                     	;# 
   395  018D                     	;# 
   396  0191                     	;# 
   397  0191                     	;# 
   398  0192                     	;# 
   399  0193                     	;# 
   400  0193                     	;# 
   401  0193                     	;# 
   402  0194                     	;# 
   403  0195                     	;# 
   404  0196                     	;# 
   405  0199                     	;# 
   406  019A                     	;# 
   407  019B                     	;# 
   408  019B                     	;# 
   409  019B                     	;# 
   410  019B                     	;# 
   411  019C                     	;# 
   412  019C                     	;# 
   413  019D                     	;# 
   414  019E                     	;# 
   415  019F                     	;# 
   416  020C                     	;# 
   417  020D                     	;# 
   418  0211                     	;# 
   419  0211                     	;# 
   420  0212                     	;# 
   421  0212                     	;# 
   422  0213                     	;# 
   423  0213                     	;# 
   424  0214                     	;# 
   425  0214                     	;# 
   426  0215                     	;# 
   427  0215                     	;# 
   428  0215                     	;# 
   429  0216                     	;# 
   430  0216                     	;# 
   431  0217                     	;# 
   432  0217                     	;# 
   433  0219                     	;# 
   434  021A                     	;# 
   435  021B                     	;# 
   436  021C                     	;# 
   437  021D                     	;# 
   438  021E                     	;# 
   439  021F                     	;# 
   440  0291                     	;# 
   441  0291                     	;# 
   442  0292                     	;# 
   443  0293                     	;# 
   444  0294                     	;# 
   445  0295                     	;# 
   446  0295                     	;# 
   447  0296                     	;# 
   448  0298                     	;# 
   449  0298                     	;# 
   450  0299                     	;# 
   451  029A                     	;# 
   452  029B                     	;# 
   453  029C                     	;# 
   454  029C                     	;# 
   455  029D                     	;# 
   456  029E                     	;# 
   457  029E                     	;# 
   458  0311                     	;# 
   459  0311                     	;# 
   460  0312                     	;# 
   461  0313                     	;# 
   462  0318                     	;# 
   463  0318                     	;# 
   464  0319                     	;# 
   465  031A                     	;# 
   466  0394                     	;# 
   467  0395                     	;# 
   468  0396                     	;# 
   469  039A                     	;# 
   470  039C                     	;# 
   471  039D                     	;# 
   472  039E                     	;# 
   473  039F                     	;# 
   474  0415                     	;# 
   475  0416                     	;# 
   476  0417                     	;# 
   477  041C                     	;# 
   478  041D                     	;# 
   479  041E                     	;# 
   480  0FE4                     	;# 
   481  0FE5                     	;# 
   482  0FE6                     	;# 
   483  0FE7                     	;# 
   484  0FE8                     	;# 
   485  0FE9                     	;# 
   486  0FEA                     	;# 
   487  0FEB                     	;# 
   488  0FED                     	;# 
   489  0FEE                     	;# 
   490  0FEF                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0008                     	;# 
   500  0009                     	;# 
   501  000A                     	;# 
   502  000B                     	;# 
   503  000C                     	;# 
   504  000D                     	;# 
   505  0011                     	;# 
   506  0012                     	;# 
   507  0013                     	;# 
   508  0014                     	;# 
   509  0015                     	;# 
   510  0016                     	;# 
   511  0016                     	;# 
   512  0017                     	;# 
   513  0018                     	;# 
   514  0019                     	;# 
   515  001A                     	;# 
   516  001B                     	;# 
   517  001C                     	;# 
   518  001E                     	;# 
   519  001F                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  0091                     	;# 
   523  0092                     	;# 
   524  0093                     	;# 
   525  0094                     	;# 
   526  0095                     	;# 
   527  0096                     	;# 
   528  0097                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009A                     	;# 
   532  009B                     	;# 
   533  009B                     	;# 
   534  009C                     	;# 
   535  009D                     	;# 
   536  009E                     	;# 
   537  010C                     	;# 
   538  010D                     	;# 
   539  0111                     	;# 
   540  0112                     	;# 
   541  0113                     	;# 
   542  0114                     	;# 
   543  0115                     	;# 
   544  0116                     	;# 
   545  0117                     	;# 
   546  0118                     	;# 
   547  0119                     	;# 
   548  011A                     	;# 
   549  011B                     	;# 
   550  011D                     	;# 
   551  011E                     	;# 
   552  018C                     	;# 
   553  018D                     	;# 
   554  0191                     	;# 
   555  0191                     	;# 
   556  0192                     	;# 
   557  0193                     	;# 
   558  0193                     	;# 
   559  0193                     	;# 
   560  0194                     	;# 
   561  0195                     	;# 
   562  0196                     	;# 
   563  0199                     	;# 
   564  019A                     	;# 
   565  019B                     	;# 
   566  019B                     	;# 
   567  019B                     	;# 
   568  019B                     	;# 
   569  019C                     	;# 
   570  019C                     	;# 
   571  019D                     	;# 
   572  019E                     	;# 
   573  019F                     	;# 
   574  020C                     	;# 
   575  020D                     	;# 
   576  0211                     	;# 
   577  0211                     	;# 
   578  0212                     	;# 
   579  0212                     	;# 
   580  0213                     	;# 
   581  0213                     	;# 
   582  0214                     	;# 
   583  0214                     	;# 
   584  0215                     	;# 
   585  0215                     	;# 
   586  0215                     	;# 
   587  0216                     	;# 
   588  0216                     	;# 
   589  0217                     	;# 
   590  0217                     	;# 
   591  0219                     	;# 
   592  021A                     	;# 
   593  021B                     	;# 
   594  021C                     	;# 
   595  021D                     	;# 
   596  021E                     	;# 
   597  021F                     	;# 
   598  0291                     	;# 
   599  0291                     	;# 
   600  0292                     	;# 
   601  0293                     	;# 
   602  0294                     	;# 
   603  0295                     	;# 
   604  0295                     	;# 
   605  0296                     	;# 
   606  0298                     	;# 
   607  0298                     	;# 
   608  0299                     	;# 
   609  029A                     	;# 
   610  029B                     	;# 
   611  029C                     	;# 
   612  029C                     	;# 
   613  029D                     	;# 
   614  029E                     	;# 
   615  029E                     	;# 
   616  0311                     	;# 
   617  0311                     	;# 
   618  0312                     	;# 
   619  0313                     	;# 
   620  0318                     	;# 
   621  0318                     	;# 
   622  0319                     	;# 
   623  031A                     	;# 
   624  0394                     	;# 
   625  0395                     	;# 
   626  0396                     	;# 
   627  039A                     	;# 
   628  039C                     	;# 
   629  039D                     	;# 
   630  039E                     	;# 
   631  039F                     	;# 
   632  0415                     	;# 
   633  0416                     	;# 
   634  0417                     	;# 
   635  041C                     	;# 
   636  041D                     	;# 
   637  041E                     	;# 
   638  0FE4                     	;# 
   639  0FE5                     	;# 
   640  0FE6                     	;# 
   641  0FE7                     	;# 
   642  0FE8                     	;# 
   643  0FE9                     	;# 
   644  0FEA                     	;# 
   645  0FEB                     	;# 
   646  0FED                     	;# 
   647  0FEE                     	;# 
   648  0FEF                     	;# 
   649  0000                     	;# 
   650  0001                     	;# 
   651  0002                     	;# 
   652  0003                     	;# 
   653  0004                     	;# 
   654  0005                     	;# 
   655  0006                     	;# 
   656  0007                     	;# 
   657  0008                     	;# 
   658  0009                     	;# 
   659  000A                     	;# 
   660  000B                     	;# 
   661  000C                     	;# 
   662  000D                     	;# 
   663  0011                     	;# 
   664  0012                     	;# 
   665  0013                     	;# 
   666  0014                     	;# 
   667  0015                     	;# 
   668  0016                     	;# 
   669  0016                     	;# 
   670  0017                     	;# 
   671  0018                     	;# 
   672  0019                     	;# 
   673  001A                     	;# 
   674  001B                     	;# 
   675  001C                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  008C                     	;# 
   679  008D                     	;# 
   680  0091                     	;# 
   681  0092                     	;# 
   682  0093                     	;# 
   683  0094                     	;# 
   684  0095                     	;# 
   685  0096                     	;# 
   686  0097                     	;# 
   687  0098                     	;# 
   688  0099                     	;# 
   689  009A                     	;# 
   690  009B                     	;# 
   691  009B                     	;# 
   692  009C                     	;# 
   693  009D                     	;# 
   694  009E                     	;# 
   695  010C                     	;# 
   696  010D                     	;# 
   697  0111                     	;# 
   698  0112                     	;# 
   699  0113                     	;# 
   700  0114                     	;# 
   701  0115                     	;# 
   702  0116                     	;# 
   703  0117                     	;# 
   704  0118                     	;# 
   705  0119                     	;# 
   706  011A                     	;# 
   707  011B                     	;# 
   708  011D                     	;# 
   709  011E                     	;# 
   710  018C                     	;# 
   711  018D                     	;# 
   712  0191                     	;# 
   713  0191                     	;# 
   714  0192                     	;# 
   715  0193                     	;# 
   716  0193                     	;# 
   717  0193                     	;# 
   718  0194                     	;# 
   719  0195                     	;# 
   720  0196                     	;# 
   721  0199                     	;# 
   722  019A                     	;# 
   723  019B                     	;# 
   724  019B                     	;# 
   725  019B                     	;# 
   726  019B                     	;# 
   727  019C                     	;# 
   728  019C                     	;# 
   729  019D                     	;# 
   730  019E                     	;# 
   731  019F                     	;# 
   732  020C                     	;# 
   733  020D                     	;# 
   734  0211                     	;# 
   735  0211                     	;# 
   736  0212                     	;# 
   737  0212                     	;# 
   738  0213                     	;# 
   739  0213                     	;# 
   740  0214                     	;# 
   741  0214                     	;# 
   742  0215                     	;# 
   743  0215                     	;# 
   744  0215                     	;# 
   745  0216                     	;# 
   746  0216                     	;# 
   747  0217                     	;# 
   748  0217                     	;# 
   749  0219                     	;# 
   750  021A                     	;# 
   751  021B                     	;# 
   752  021C                     	;# 
   753  021D                     	;# 
   754  021E                     	;# 
   755  021F                     	;# 
   756  0291                     	;# 
   757  0291                     	;# 
   758  0292                     	;# 
   759  0293                     	;# 
   760  0294                     	;# 
   761  0295                     	;# 
   762  0295                     	;# 
   763  0296                     	;# 
   764  0298                     	;# 
   765  0298                     	;# 
   766  0299                     	;# 
   767  029A                     	;# 
   768  029B                     	;# 
   769  029C                     	;# 
   770  029C                     	;# 
   771  029D                     	;# 
   772  029E                     	;# 
   773  029E                     	;# 
   774  0311                     	;# 
   775  0311                     	;# 
   776  0312                     	;# 
   777  0313                     	;# 
   778  0318                     	;# 
   779  0318                     	;# 
   780  0319                     	;# 
   781  031A                     	;# 
   782  0394                     	;# 
   783  0395                     	;# 
   784  0396                     	;# 
   785  039A                     	;# 
   786  039C                     	;# 
   787  039D                     	;# 
   788  039E                     	;# 
   789  039F                     	;# 
   790  0415                     	;# 
   791  0416                     	;# 
   792  0417                     	;# 
   793  041C                     	;# 
   794  041D                     	;# 
   795  041E                     	;# 
   796  0FE4                     	;# 
   797  0FE5                     	;# 
   798  0FE6                     	;# 
   799  0FE7                     	;# 
   800  0FE8                     	;# 
   801  0FE9                     	;# 
   802  0FEA                     	;# 
   803  0FEB                     	;# 
   804  0FED                     	;# 
   805  0FEE                     	;# 
   806  0FEF                     	;# 
   807                           
   808                           	psect	idataBANK0
   809  061E                     __pidataBANK0:	
   810                           
   811                           ;initializer for _LED_state
   812  061E  3401               	retlw	1
   813                           
   814                           	psect	stringtext
   815  0800                     __pstringtext:	
   816  0800                     _ratio_mph:	
   817  0800  3414               	retlw	20
   818  0801  349F               	retlw	159
   819  0802  3400               	retlw	0
   820  0803  3400               	retlw	0
   821  0804                     __end_of_ratio_mph:	
   822  0804                     convert_to_fp@one:	
   823  0804  3401               	retlw	1
   824  0805  3400               	retlw	0
   825  0806                     __end_ofconvert_to_fp@one:	
   826  0095                     _OPTION_REGbits	set	149
   827  0099                     _OSCCON	set	153
   828  009A                     _OSCSTAT	set	154
   829  0098                     _OSCTUNE	set	152
   830  008C                     _TRISA	set	140
   831  008D                     _TRISB	set	141
   832  04D6                     _PLLR	set	1238
   833  011D                     _APFCON0	set	285
   834  011E                     _APFCON1	set	286
   835  010C                     _LATA	set	268
   836  010D                     _LATB	set	269
   837  018C                     _ANSELA	set	396
   838  018D                     _ANSELB	set	397
   839  020C                     _WPUA	set	524
   840  020D                     _WPUB	set	525
   841                           
   842                           ; #config settings
   843  0000                     
   844                           	psect	cinit
   845  07F1                     start_initialization:	
   846  07F1                     __initialization:	
   847                           
   848                           ; Initialize objects allocated to BANK0
   849  07F1  3186  261E         	fcall	__pidataBANK0	;fetch initializer
   850  07F3  00CB               	movwf	__pdataBANK0& (0+127)
   851                           
   852                           ; Clear objects allocated to COMMON
   853  07F4  01FC               	clrf	__pbssCOMMON& (0+127)
   854  07F5  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   855                           
   856                           ; Clear objects allocated to BANK0
   857  07F6  01C4               	clrf	__pbssBANK0& (0+127)
   858  07F7  01C5               	clrf	(__pbssBANK0+1)& (0+127)
   859  07F8  01C6               	clrf	(__pbssBANK0+2)& (0+127)
   860  07F9  01C7               	clrf	(__pbssBANK0+3)& (0+127)
   861  07FA  01C8               	clrf	(__pbssBANK0+4)& (0+127)
   862  07FB  01C9               	clrf	(__pbssBANK0+5)& (0+127)
   863  07FC  01CA               	clrf	(__pbssBANK0+6)& (0+127)
   864  07FD                     end_of_initialization:	
   865                           ;End of C runtime variable initialization code
   866                           
   867  07FD                     __end_of__initialization:	
   868  07FD  0020               	movlb	0
   869  07FE  3186  2E4E         	ljmp	_main	;jump to C main() function
   870                           
   871                           	psect	bssCOMMON
   872  007C                     __pbssCOMMON:	
   873  007C                     _b_last_state:	
   874  007C                     	ds	2
   875                           
   876                           	psect	bssBANK0
   877  0044                     __pbssBANK0:	
   878  0044                     _LED_counter:	
   879  0044                     	ds	1
   880  0045                     _b_confirmed_state:	
   881  0045                     	ds	1
   882  0046                     _b_count_pressed:	
   883  0046                     	ds	1
   884  0047                     _b_count_released:	
   885  0047                     	ds	1
   886  0048                     _b_has_once_been_released:	
   887  0048                     	ds	1
   888  0049                     _b_push_confirmed:	
   889  0049                     	ds	1
   890  004A                     _b_release_confirmed:	
   891  004A                     	ds	1
   892                           
   893                           	psect	dataBANK0
   894  004B                     __pdataBANK0:	
   895  004B                     _LED_state:	
   896  004B                     	ds	1
   897                           
   898                           	psect	cstackCOMMON
   899  0070                     __pcstackCOMMON:	
   900  0070                     ?_main:	
   901  0070                     ?_convert_to_fp:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0070                     ?___lmul:	
   905                           ; 4 bytes @ 0x0
   906                           
   907  0070                     convert_to_fp@int_part:	
   908                           ; 4 bytes @ 0x0
   909                           
   910  0070                     ___lmul@multiplier:	
   911                           ; 2 bytes @ 0x0
   912                           
   913                           
   914                           ; 4 bytes @ 0x0
   915  0070                     	ds	2
   916  0072                     convert_to_fp@fract_part:	
   917                           
   918                           ; 2 bytes @ 0x2
   919  0072                     	ds	2
   920  0074                     ??_convert_to_fp:	
   921  0074                     ___lmul@multiplicand:	
   922                           ; 1 bytes @ 0x4
   923                           
   924                           
   925                           ; 4 bytes @ 0x4
   926  0074                     	ds	4
   927  0078                     ??___lmul:	
   928  0078                     ___lmul@product:	
   929                           ; 1 bytes @ 0x8
   930                           
   931                           
   932                           ; 4 bytes @ 0x8
   933  0078                     	ds	4
   934  007C                     ??_main:	
   935                           
   936                           	psect	cstackBANK0
   937  0020                     __pcstackBANK0:	
   938                           ; 1 bytes @ 0xC
   939                           
   940  0020                     ?_multiply_fp:	
   941  0020                     convert_to_fp@res_fract:	
   942                           ; 4 bytes @ 0x0
   943                           
   944  0020                     multiply_fp@n1:	
   945                           ; 2 bytes @ 0x0
   946                           
   947                           
   948                           ; 4 bytes @ 0x0
   949  0020                     	ds	2
   950  0022                     convert_to_fp@tmp_left:	
   951                           
   952                           ; 2 bytes @ 0x2
   953  0022                     	ds	2
   954  0024                     convert_to_fp@i_bit:	
   955  0024                     multiply_fp@n2:	
   956                           ; 1 bytes @ 0x4
   957                           
   958                           
   959                           ; 4 bytes @ 0x4
   960  0024                     	ds	1
   961  0025                     convert_to_fp@res:	
   962                           
   963                           ; 4 bytes @ 0x5
   964  0025                     	ds	3
   965  0028                     ??_multiply_fp:	
   966                           
   967                           ; 1 bytes @ 0x8
   968  0028                     	ds	12
   969  0034                     multiply_fp@res:	
   970                           
   971                           ; 4 bytes @ 0x14
   972  0034                     	ds	4
   973  0038                     multiply_fp@n1_fra:	
   974                           
   975                           ; 4 bytes @ 0x18
   976  0038                     	ds	4
   977  003C                     multiply_fp@n2_fra:	
   978                           
   979                           ; 4 bytes @ 0x1C
   980  003C                     	ds	4
   981  0040                     main@speed:	
   982                           
   983                           ; 4 bytes @ 0x20
   984  0040                     	ds	4
   985                           
   986                           	psect	maintext
   987  064E                     __pmaintext:	
   988 ;;
   989 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   990 ;;
   991 ;; *************** function _main *****************
   992 ;; Defined at:
   993 ;;		line 59 in file "main.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;  speed           4   32[BANK0 ] unsigned long 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : B1F/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1007 ;;      Params:         0       0       0       0       0       0
  1008 ;;      Locals:         0       4       0       0       0       0
  1009 ;;      Temps:          0       0       0       0       0       0
  1010 ;;      Totals:         0       4       0       0       0       0
  1011 ;;Total ram usage:        4 bytes
  1012 ;; Hardware stack levels required when called:    2
  1013 ;; This function calls:
  1014 ;;		_convert_to_fp
  1015 ;;		_multiply_fp
  1016 ;; This function is called by:
  1017 ;;		Startup code after reset
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           
  1022                           ;psect for function _main
  1023  064E                     _main:	
  1024                           
  1025                           ;main.c: 61: t_fp speed = convert_to_fp(130, 2500);
  1026                           
  1027                           ;incstack = 0
  1028                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1029  064E  3082               	movlw	130
  1030  064F  00F0               	movwf	convert_to_fp@int_part
  1031  0650  3000               	movlw	0
  1032  0651  00F1               	movwf	convert_to_fp@int_part+1
  1033  0652  30C4               	movlw	196
  1034  0653  00F2               	movwf	convert_to_fp@fract_part
  1035  0654  3009               	movlw	9
  1036  0655  00F3               	movwf	convert_to_fp@fract_part+1
  1037  0656  3186  2683  3186   	fcall	_convert_to_fp
  1038  0659  0873               	movf	?_convert_to_fp+3,w
  1039  065A  0020               	movlb	0	; select bank0
  1040  065B  00C3               	movwf	main@speed+3
  1041  065C  0872               	movf	?_convert_to_fp+2,w
  1042  065D  00C2               	movwf	main@speed+2
  1043  065E  0871               	movf	?_convert_to_fp+1,w
  1044  065F  00C1               	movwf	main@speed+1
  1045  0660  0870               	movf	?_convert_to_fp,w
  1046  0661  00C0               	movwf	main@speed
  1047                           
  1048                           ;main.c: 62: speed = multiply_fp(speed, ratio_mph);
  1049  0662  0843               	movf	main@speed+3,w
  1050  0663  00A3               	movwf	multiply_fp@n1+3
  1051  0664  0842               	movf	main@speed+2,w
  1052  0665  00A2               	movwf	multiply_fp@n1+2
  1053  0666  0841               	movf	main@speed+1,w
  1054  0667  00A1               	movwf	multiply_fp@n1+1
  1055  0668  0840               	movf	main@speed,w
  1056  0669  00A0               	movwf	multiply_fp@n1
  1057  066A  3000               	movlw	low (_ratio_mph| (0+32768))
  1058  066B  0084               	movwf	4
  1059  066C  3088               	movlw	high (_ratio_mph| (0+32768))
  1060  066D  0085               	movwf	5
  1061  066E  3F00               	moviw [0]fsr0
  1062  066F  00A4               	movwf	multiply_fp@n2
  1063  0670  3F01               	moviw [1]fsr0
  1064  0671  00A5               	movwf	multiply_fp@n2+1
  1065  0672  3F02               	moviw [2]fsr0
  1066  0673  00A6               	movwf	multiply_fp@n2+2
  1067  0674  3F03               	moviw [3]fsr0
  1068  0675  00A7               	movwf	multiply_fp@n2+3
  1069  0676  3187  270D  3186   	fcall	_multiply_fp
  1070  0679  0020               	movlb	0	; select bank0
  1071  067A  0823               	movf	?_multiply_fp+3,w
  1072  067B  00C3               	movwf	main@speed+3
  1073  067C  0822               	movf	?_multiply_fp+2,w
  1074  067D  00C2               	movwf	main@speed+2
  1075  067E  0821               	movf	?_multiply_fp+1,w
  1076  067F  00C1               	movwf	main@speed+1
  1077  0680  0820               	movf	?_multiply_fp,w
  1078  0681  00C0               	movwf	main@speed
  1079  0682                     l73:	
  1080                           ;main.c: 82: while (1)
  1081                           
  1082                           
  1083                           ;main.c: 83: {
  1084  0682  2E82               	goto	l73
  1085  0683                     __end_of_main:	
  1086                           
  1087                           	psect	text1
  1088  070D                     __ptext1:	
  1089 ;; *************** function _multiply_fp *****************
  1090 ;; Defined at:
  1091 ;;		line 42 in file "fixed_point.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;  n1              4    0[BANK0 ] unsigned long 
  1094 ;;  n2              4    4[BANK0 ] unsigned long 
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;  n2_fra          4   28[BANK0 ] unsigned long 
  1097 ;;  n1_fra          4   24[BANK0 ] unsigned long 
  1098 ;;  res             4   20[BANK0 ] unsigned long 
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  4    0[BANK0 ] unsigned long 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0, pclath, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1108 ;;      Params:         0       8       0       0       0       0
  1109 ;;      Locals:         0      12       0       0       0       0
  1110 ;;      Temps:          0      12       0       0       0       0
  1111 ;;      Totals:         0      32       0       0       0       0
  1112 ;;Total ram usage:       32 bytes
  1113 ;; Hardware stack levels used:    1
  1114 ;; Hardware stack levels required when called:    1
  1115 ;; This function calls:
  1116 ;;		___lmul
  1117 ;; This function is called by:
  1118 ;;		_main
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           
  1123                           ;psect for function _multiply_fp
  1124  070D                     _multiply_fp:	
  1125                           
  1126                           ;fixed_point.c: 46: n1_fra = n1_fra >> (16-16);
  1127                           
  1128                           ;incstack = 0
  1129                           ; Regs used in _multiply_fp: [wreg+status,2+status,0+pclath+cstack]
  1130  070D  0020               	movlb	0	; select bank0
  1131  070E  0823               	movf	multiply_fp@n1+3,w
  1132  070F  00BB               	movwf	multiply_fp@n1_fra+3
  1133  0710  0822               	movf	multiply_fp@n1+2,w
  1134  0711  00BA               	movwf	multiply_fp@n1_fra+2
  1135  0712  0821               	movf	multiply_fp@n1+1,w
  1136  0713  00B9               	movwf	multiply_fp@n1_fra+1
  1137  0714  0820               	movf	multiply_fp@n1,w
  1138  0715  00B8               	movwf	multiply_fp@n1_fra
  1139                           
  1140                           ;fixed_point.c: 48: n2_fra = n2_fra >> (16-16);
  1141  0716  0827               	movf	multiply_fp@n2+3,w
  1142  0717  00BF               	movwf	multiply_fp@n2_fra+3
  1143  0718  0826               	movf	multiply_fp@n2+2,w
  1144  0719  00BE               	movwf	multiply_fp@n2_fra+2
  1145  071A  0825               	movf	multiply_fp@n2+1,w
  1146  071B  00BD               	movwf	multiply_fp@n2_fra+1
  1147  071C  0824               	movf	multiply_fp@n2,w
  1148  071D  00BC               	movwf	multiply_fp@n2_fra
  1149                           
  1150                           ;fixed_point.c: 49: unsigned long long res = ((unsigned long long) (n1 >> 16) * (unsigne
      +                          d long long) (n2 >> 16))<<16;
  1151  071E  0820               	movf	multiply_fp@n1,w
  1152  071F  00A8               	movwf	??_multiply_fp
  1153  0720  0821               	movf	multiply_fp@n1+1,w
  1154  0721  00A9               	movwf	??_multiply_fp+1
  1155  0722  0822               	movf	multiply_fp@n1+2,w
  1156  0723  00AA               	movwf	??_multiply_fp+2
  1157  0724  0823               	movf	multiply_fp@n1+3,w
  1158  0725  00AB               	movwf	??_multiply_fp+3
  1159  0726  3010               	movlw	16
  1160  0727                     u475:	
  1161  0727  36AB               	lsrf	??_multiply_fp+3,f
  1162  0728  0CAA               	rrf	??_multiply_fp+2,f
  1163  0729  0CA9               	rrf	??_multiply_fp+1,f
  1164  072A  0CA8               	rrf	??_multiply_fp,f
  1165  072B  0B89               	decfsz	9,f
  1166  072C  2F27               	goto	u475
  1167  072D  082B               	movf	??_multiply_fp+3,w
  1168  072E  00F3               	movwf	___lmul@multiplier+3
  1169  072F  082A               	movf	??_multiply_fp+2,w
  1170  0730  00F2               	movwf	___lmul@multiplier+2
  1171  0731  0829               	movf	??_multiply_fp+1,w
  1172  0732  00F1               	movwf	___lmul@multiplier+1
  1173  0733  0828               	movf	??_multiply_fp,w
  1174  0734  00F0               	movwf	___lmul@multiplier
  1175  0735  0824               	movf	multiply_fp@n2,w
  1176  0736  00AC               	movwf	??_multiply_fp+4
  1177  0737  0825               	movf	multiply_fp@n2+1,w
  1178  0738  00AD               	movwf	??_multiply_fp+5
  1179  0739  0826               	movf	multiply_fp@n2+2,w
  1180  073A  00AE               	movwf	??_multiply_fp+6
  1181  073B  0827               	movf	multiply_fp@n2+3,w
  1182  073C  00AF               	movwf	??_multiply_fp+7
  1183  073D  3010               	movlw	16
  1184  073E                     u485:	
  1185  073E  36AF               	lsrf	??_multiply_fp+7,f
  1186  073F  0CAE               	rrf	??_multiply_fp+6,f
  1187  0740  0CAD               	rrf	??_multiply_fp+5,f
  1188  0741  0CAC               	rrf	??_multiply_fp+4,f
  1189  0742  0B89               	decfsz	9,f
  1190  0743  2F3E               	goto	u485
  1191  0744  082F               	movf	??_multiply_fp+7,w
  1192  0745  00F7               	movwf	___lmul@multiplicand+3
  1193  0746  082E               	movf	??_multiply_fp+6,w
  1194  0747  00F6               	movwf	___lmul@multiplicand+2
  1195  0748  082D               	movf	??_multiply_fp+5,w
  1196  0749  00F5               	movwf	___lmul@multiplicand+1
  1197  074A  082C               	movf	??_multiply_fp+4,w
  1198  074B  00F4               	movwf	___lmul@multiplicand
  1199  074C  3186  261F  3187   	fcall	___lmul
  1200  074F  0870               	movf	?___lmul,w
  1201  0750  0020               	movlb	0	; select bank0
  1202  0751  00B0               	movwf	??_multiply_fp+8
  1203  0752  0871               	movf	?___lmul+1,w
  1204  0753  00B1               	movwf	??_multiply_fp+9
  1205  0754  0872               	movf	?___lmul+2,w
  1206  0755  00B2               	movwf	??_multiply_fp+10
  1207  0756  0873               	movf	?___lmul+3,w
  1208  0757  00B3               	movwf	??_multiply_fp+11
  1209  0758  3010               	movlw	16
  1210  0759                     u495:	
  1211  0759  35B0               	lslf	??_multiply_fp+8,f
  1212  075A  0DB1               	rlf	??_multiply_fp+9,f
  1213  075B  0DB2               	rlf	??_multiply_fp+10,f
  1214  075C  0DB3               	rlf	??_multiply_fp+11,f
  1215  075D  0B89               	decfsz	9,f
  1216  075E  2F59               	goto	u495
  1217  075F  0833               	movf	??_multiply_fp+11,w
  1218  0760  00B7               	movwf	multiply_fp@res+3
  1219  0761  0832               	movf	??_multiply_fp+10,w
  1220  0762  00B6               	movwf	multiply_fp@res+2
  1221  0763  0831               	movf	??_multiply_fp+9,w
  1222  0764  00B5               	movwf	multiply_fp@res+1
  1223  0765  0830               	movf	??_multiply_fp+8,w
  1224  0766  00B4               	movwf	multiply_fp@res
  1225                           
  1226                           ;fixed_point.c: 50: res+ = ((unsigned long long) (n1 >> 16) * (unsigned long long) n2_fr
      +                          a);
  1227  0767  0820               	movf	multiply_fp@n1,w
  1228  0768  00A8               	movwf	??_multiply_fp
  1229  0769  0821               	movf	multiply_fp@n1+1,w
  1230  076A  00A9               	movwf	??_multiply_fp+1
  1231  076B  0822               	movf	multiply_fp@n1+2,w
  1232  076C  00AA               	movwf	??_multiply_fp+2
  1233  076D  0823               	movf	multiply_fp@n1+3,w
  1234  076E  00AB               	movwf	??_multiply_fp+3
  1235  076F  3010               	movlw	16
  1236  0770                     u505:	
  1237  0770  36AB               	lsrf	??_multiply_fp+3,f
  1238  0771  0CAA               	rrf	??_multiply_fp+2,f
  1239  0772  0CA9               	rrf	??_multiply_fp+1,f
  1240  0773  0CA8               	rrf	??_multiply_fp,f
  1241  0774  0B89               	decfsz	9,f
  1242  0775  2F70               	goto	u505
  1243  0776  082B               	movf	??_multiply_fp+3,w
  1244  0777  00F3               	movwf	___lmul@multiplier+3
  1245  0778  082A               	movf	??_multiply_fp+2,w
  1246  0779  00F2               	movwf	___lmul@multiplier+2
  1247  077A  0829               	movf	??_multiply_fp+1,w
  1248  077B  00F1               	movwf	___lmul@multiplier+1
  1249  077C  0828               	movf	??_multiply_fp,w
  1250  077D  00F0               	movwf	___lmul@multiplier
  1251  077E  083F               	movf	multiply_fp@n2_fra+3,w
  1252  077F  00F7               	movwf	___lmul@multiplicand+3
  1253  0780  083E               	movf	multiply_fp@n2_fra+2,w
  1254  0781  00F6               	movwf	___lmul@multiplicand+2
  1255  0782  083D               	movf	multiply_fp@n2_fra+1,w
  1256  0783  00F5               	movwf	___lmul@multiplicand+1
  1257  0784  083C               	movf	multiply_fp@n2_fra,w
  1258  0785  00F4               	movwf	___lmul@multiplicand
  1259  0786  3186  261F  3187   	fcall	___lmul
  1260  0789  0870               	movf	?___lmul,w
  1261  078A  0020               	movlb	0	; select bank0
  1262  078B  07B4               	addwf	multiply_fp@res,f
  1263  078C  0871               	movf	?___lmul+1,w
  1264  078D  3DB5               	addwfc	multiply_fp@res+1,f
  1265  078E  0872               	movf	?___lmul+2,w
  1266  078F  3DB6               	addwfc	multiply_fp@res+2,f
  1267  0790  0873               	movf	?___lmul+3,w
  1268  0791  3DB7               	addwfc	multiply_fp@res+3,f
  1269                           
  1270                           ;fixed_point.c: 51: res+ = ((unsigned long long) (n2 >> 16) * (unsigned long long) n1_fr
      +                          a);
  1271  0792  0824               	movf	multiply_fp@n2,w
  1272  0793  00A8               	movwf	??_multiply_fp
  1273  0794  0825               	movf	multiply_fp@n2+1,w
  1274  0795  00A9               	movwf	??_multiply_fp+1
  1275  0796  0826               	movf	multiply_fp@n2+2,w
  1276  0797  00AA               	movwf	??_multiply_fp+2
  1277  0798  0827               	movf	multiply_fp@n2+3,w
  1278  0799  00AB               	movwf	??_multiply_fp+3
  1279  079A  3010               	movlw	16
  1280  079B                     u515:	
  1281  079B  36AB               	lsrf	??_multiply_fp+3,f
  1282  079C  0CAA               	rrf	??_multiply_fp+2,f
  1283  079D  0CA9               	rrf	??_multiply_fp+1,f
  1284  079E  0CA8               	rrf	??_multiply_fp,f
  1285  079F  0B89               	decfsz	9,f
  1286  07A0  2F9B               	goto	u515
  1287  07A1  082B               	movf	??_multiply_fp+3,w
  1288  07A2  00F3               	movwf	___lmul@multiplier+3
  1289  07A3  082A               	movf	??_multiply_fp+2,w
  1290  07A4  00F2               	movwf	___lmul@multiplier+2
  1291  07A5  0829               	movf	??_multiply_fp+1,w
  1292  07A6  00F1               	movwf	___lmul@multiplier+1
  1293  07A7  0828               	movf	??_multiply_fp,w
  1294  07A8  00F0               	movwf	___lmul@multiplier
  1295  07A9  083B               	movf	multiply_fp@n1_fra+3,w
  1296  07AA  00F7               	movwf	___lmul@multiplicand+3
  1297  07AB  083A               	movf	multiply_fp@n1_fra+2,w
  1298  07AC  00F6               	movwf	___lmul@multiplicand+2
  1299  07AD  0839               	movf	multiply_fp@n1_fra+1,w
  1300  07AE  00F5               	movwf	___lmul@multiplicand+1
  1301  07AF  0838               	movf	multiply_fp@n1_fra,w
  1302  07B0  00F4               	movwf	___lmul@multiplicand
  1303  07B1  3186  261F  3187   	fcall	___lmul
  1304  07B4  0870               	movf	?___lmul,w
  1305  07B5  0020               	movlb	0	; select bank0
  1306  07B6  07B4               	addwf	multiply_fp@res,f
  1307  07B7  0871               	movf	?___lmul+1,w
  1308  07B8  3DB5               	addwfc	multiply_fp@res+1,f
  1309  07B9  0872               	movf	?___lmul+2,w
  1310  07BA  3DB6               	addwfc	multiply_fp@res+2,f
  1311  07BB  0873               	movf	?___lmul+3,w
  1312  07BC  3DB7               	addwfc	multiply_fp@res+3,f
  1313                           
  1314                           ;fixed_point.c: 52: res+ = ((unsigned long long) n1_fra * (unsigned long long) n2_fra)>>
      +                          16;
  1315  07BD  083B               	movf	multiply_fp@n1_fra+3,w
  1316  07BE  00F3               	movwf	___lmul@multiplier+3
  1317  07BF  083A               	movf	multiply_fp@n1_fra+2,w
  1318  07C0  00F2               	movwf	___lmul@multiplier+2
  1319  07C1  0839               	movf	multiply_fp@n1_fra+1,w
  1320  07C2  00F1               	movwf	___lmul@multiplier+1
  1321  07C3  0838               	movf	multiply_fp@n1_fra,w
  1322  07C4  00F0               	movwf	___lmul@multiplier
  1323  07C5  083F               	movf	multiply_fp@n2_fra+3,w
  1324  07C6  00F7               	movwf	___lmul@multiplicand+3
  1325  07C7  083E               	movf	multiply_fp@n2_fra+2,w
  1326  07C8  00F6               	movwf	___lmul@multiplicand+2
  1327  07C9  083D               	movf	multiply_fp@n2_fra+1,w
  1328  07CA  00F5               	movwf	___lmul@multiplicand+1
  1329  07CB  083C               	movf	multiply_fp@n2_fra,w
  1330  07CC  00F4               	movwf	___lmul@multiplicand
  1331  07CD  3186  261F  3187   	fcall	___lmul
  1332  07D0  0870               	movf	?___lmul,w
  1333  07D1  0020               	movlb	0	; select bank0
  1334  07D2  00A8               	movwf	??_multiply_fp
  1335  07D3  0871               	movf	?___lmul+1,w
  1336  07D4  00A9               	movwf	??_multiply_fp+1
  1337  07D5  0872               	movf	?___lmul+2,w
  1338  07D6  00AA               	movwf	??_multiply_fp+2
  1339  07D7  0873               	movf	?___lmul+3,w
  1340  07D8  00AB               	movwf	??_multiply_fp+3
  1341  07D9  3010               	movlw	16
  1342  07DA                     u525:	
  1343  07DA  36AB               	lsrf	??_multiply_fp+3,f
  1344  07DB  0CAA               	rrf	??_multiply_fp+2,f
  1345  07DC  0CA9               	rrf	??_multiply_fp+1,f
  1346  07DD  0CA8               	rrf	??_multiply_fp,f
  1347  07DE  0B89               	decfsz	9,f
  1348  07DF  2FDA               	goto	u525
  1349  07E0  0828               	movf	??_multiply_fp,w
  1350  07E1  07B4               	addwf	multiply_fp@res,f
  1351  07E2  0829               	movf	??_multiply_fp+1,w
  1352  07E3  3DB5               	addwfc	multiply_fp@res+1,f
  1353  07E4  082A               	movf	??_multiply_fp+2,w
  1354  07E5  3DB6               	addwfc	multiply_fp@res+2,f
  1355  07E6  082B               	movf	??_multiply_fp+3,w
  1356  07E7  3DB7               	addwfc	multiply_fp@res+3,f
  1357                           
  1358                           ;fixed_point.c: 53: return res;
  1359  07E8  0837               	movf	multiply_fp@res+3,w
  1360  07E9  00A3               	movwf	?_multiply_fp+3
  1361  07EA  0836               	movf	multiply_fp@res+2,w
  1362  07EB  00A2               	movwf	?_multiply_fp+2
  1363  07EC  0835               	movf	multiply_fp@res+1,w
  1364  07ED  00A1               	movwf	?_multiply_fp+1
  1365  07EE  0834               	movf	multiply_fp@res,w
  1366  07EF  00A0               	movwf	?_multiply_fp
  1367  07F0  0008               	return
  1368  07F1                     __end_of_multiply_fp:	
  1369                           
  1370                           	psect	text2
  1371  061F                     __ptext2:	
  1372 ;; *************** function ___lmul *****************
  1373 ;; Defined at:
  1374 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  multiplier      4    0[COMMON] unsigned long 
  1377 ;;  multiplicand    4    4[COMMON] unsigned long 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  product         4    8[COMMON] unsigned long 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  4    0[COMMON] unsigned long 
  1382 ;; Registers used:
  1383 ;;		wreg, status,2, status,0
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1389 ;;      Params:         8       0       0       0       0       0
  1390 ;;      Locals:         4       0       0       0       0       0
  1391 ;;      Temps:          0       0       0       0       0       0
  1392 ;;      Totals:        12       0       0       0       0       0
  1393 ;;Total ram usage:       12 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_multiply_fp
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function ___lmul
  1404  061F                     ___lmul:	
  1405                           
  1406                           ;incstack = 0
  1407                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1408  061F  3000               	movlw	0
  1409  0620  00FB               	movwf	___lmul@product+3
  1410  0621  3000               	movlw	0
  1411  0622  00FA               	movwf	___lmul@product+2
  1412  0623  3000               	movlw	0
  1413  0624  00F9               	movwf	___lmul@product+1
  1414  0625  3000               	movlw	0
  1415  0626  00F8               	movwf	___lmul@product
  1416  0627                     l831:	
  1417  0627  1C70               	btfss	___lmul@multiplier,0
  1418  0628  2E31               	goto	l835
  1419  0629  0874               	movf	___lmul@multiplicand,w
  1420  062A  07F8               	addwf	___lmul@product,f
  1421  062B  0875               	movf	___lmul@multiplicand+1,w
  1422  062C  3DF9               	addwfc	___lmul@product+1,f
  1423  062D  0876               	movf	___lmul@multiplicand+2,w
  1424  062E  3DFA               	addwfc	___lmul@product+2,f
  1425  062F  0877               	movf	___lmul@multiplicand+3,w
  1426  0630  3DFB               	addwfc	___lmul@product+3,f
  1427  0631                     l835:	
  1428  0631  3001               	movlw	1
  1429  0632                     u395:	
  1430  0632  35F4               	lslf	___lmul@multiplicand,f
  1431  0633  0DF5               	rlf	___lmul@multiplicand+1,f
  1432  0634  0DF6               	rlf	___lmul@multiplicand+2,f
  1433  0635  0DF7               	rlf	___lmul@multiplicand+3,f
  1434  0636  0B89               	decfsz	9,f
  1435  0637  2E32               	goto	u395
  1436  0638  3001               	movlw	1
  1437  0639                     u405:	
  1438  0639  36F3               	lsrf	___lmul@multiplier+3,f
  1439  063A  0CF2               	rrf	___lmul@multiplier+2,f
  1440  063B  0CF1               	rrf	___lmul@multiplier+1,f
  1441  063C  0CF0               	rrf	___lmul@multiplier,f
  1442  063D  0B89               	decfsz	9,f
  1443  063E  2E39               	goto	u405
  1444  063F  0873               	movf	___lmul@multiplier+3,w
  1445  0640  0472               	iorwf	___lmul@multiplier+2,w
  1446  0641  0471               	iorwf	___lmul@multiplier+1,w
  1447  0642  0470               	iorwf	___lmul@multiplier,w
  1448  0643  1D03               	skipz
  1449  0644  2E27               	goto	l831
  1450  0645  087B               	movf	___lmul@product+3,w
  1451  0646  00F3               	movwf	?___lmul+3
  1452  0647  087A               	movf	___lmul@product+2,w
  1453  0648  00F2               	movwf	?___lmul+2
  1454  0649  0879               	movf	___lmul@product+1,w
  1455  064A  00F1               	movwf	?___lmul+1
  1456  064B  0878               	movf	___lmul@product,w
  1457  064C  00F0               	movwf	?___lmul
  1458  064D  0008               	return
  1459  064E                     __end_of___lmul:	
  1460                           
  1461                           	psect	text3
  1462  0683                     __ptext3:	
  1463 ;; *************** function _convert_to_fp *****************
  1464 ;; Defined at:
  1465 ;;		line 13 in file "fixed_point.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  int_part        2    0[COMMON] unsigned short 
  1468 ;;  fract_part      2    2[COMMON] unsigned short 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  i_bit           1    4[BANK0 ] unsigned char 
  1471 ;;  res             4    5[BANK0 ] unsigned long 
  1472 ;;  tmp_left        2    2[BANK0 ] unsigned short 
  1473 ;;  res_fract       2    0[BANK0 ] unsigned short 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  4    0[COMMON] unsigned long 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1483 ;;      Params:         4       0       0       0       0       0
  1484 ;;      Locals:         0       9       0       0       0       0
  1485 ;;      Temps:          8       0       0       0       0       0
  1486 ;;      Totals:        12       9       0       0       0       0
  1487 ;;Total ram usage:       21 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_main
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function _convert_to_fp
  1498  0683                     _convert_to_fp:	
  1499                           
  1500                           ;fixed_point.c: 20: t_fp res = 0;
  1501                           
  1502                           ;incstack = 0
  1503                           ; Regs used in _convert_to_fp: [wreg-fsr0h+status,2+status,0+pclath]
  1504  0683  3000               	movlw	0
  1505  0684  0020               	movlb	0	; select bank0
  1506  0685  00A8               	movwf	convert_to_fp@res+3
  1507  0686  3000               	movlw	0
  1508  0687  00A7               	movwf	convert_to_fp@res+2
  1509  0688  3000               	movlw	0
  1510  0689  00A6               	movwf	convert_to_fp@res+1
  1511  068A  3000               	movlw	0
  1512  068B  00A5               	movwf	convert_to_fp@res
  1513                           
  1514                           ;fixed_point.c: 22: res = int_part;
  1515  068C  0870               	movf	convert_to_fp@int_part,w
  1516  068D  00A5               	movwf	convert_to_fp@res
  1517  068E  0871               	movf	convert_to_fp@int_part+1,w
  1518  068F  00A6               	movwf	convert_to_fp@res+1
  1519  0690  01A7               	clrf	convert_to_fp@res+2
  1520  0691  01A8               	clrf	convert_to_fp@res+3
  1521                           
  1522                           ;fixed_point.c: 23: res = res << 16;
  1523  0692  0825               	movf	convert_to_fp@res,w
  1524  0693  00F4               	movwf	??_convert_to_fp
  1525  0694  0826               	movf	convert_to_fp@res+1,w
  1526  0695  00F5               	movwf	??_convert_to_fp+1
  1527  0696  0827               	movf	convert_to_fp@res+2,w
  1528  0697  00F6               	movwf	??_convert_to_fp+2
  1529  0698  0828               	movf	convert_to_fp@res+3,w
  1530  0699  00F7               	movwf	??_convert_to_fp+3
  1531  069A  3010               	movlw	16
  1532  069B                     u425:	
  1533  069B  35F4               	lslf	??_convert_to_fp,f
  1534  069C  0DF5               	rlf	??_convert_to_fp+1,f
  1535  069D  0DF6               	rlf	??_convert_to_fp+2,f
  1536  069E  0DF7               	rlf	??_convert_to_fp+3,f
  1537  069F  0B89               	decfsz	9,f
  1538  06A0  2E9B               	goto	u425
  1539  06A1  0877               	movf	??_convert_to_fp+3,w
  1540  06A2  00A8               	movwf	convert_to_fp@res+3
  1541  06A3  0876               	movf	??_convert_to_fp+2,w
  1542  06A4  00A7               	movwf	convert_to_fp@res+2
  1543  06A5  0875               	movf	??_convert_to_fp+1,w
  1544  06A6  00A6               	movwf	convert_to_fp@res+1
  1545  06A7  0874               	movf	??_convert_to_fp,w
  1546  06A8  00A5               	movwf	convert_to_fp@res
  1547                           
  1548                           ;fixed_point.c: 25: unsigned short tmp_left = fract_part;
  1549  06A9  0873               	movf	convert_to_fp@fract_part+1,w
  1550  06AA  00A3               	movwf	convert_to_fp@tmp_left+1
  1551  06AB  0872               	movf	convert_to_fp@fract_part,w
  1552  06AC  00A2               	movwf	convert_to_fp@tmp_left
  1553                           
  1554                           ;fixed_point.c: 26: unsigned short res_fract = 0;
  1555  06AD  01A0               	clrf	convert_to_fp@res_fract
  1556  06AE  01A1               	clrf	convert_to_fp@res_fract+1
  1557                           
  1558                           ;fixed_point.c: 27: const unsigned short one = 1;
  1559                           ;fixed_point.c: 28: for (unsigned char i_bit = 0; i_bit < 16; i_bit++)
  1560  06AF  01A4               	clrf	convert_to_fp@i_bit
  1561  06B0  3010               	movlw	16
  1562  06B1  0224               	subwf	convert_to_fp@i_bit,w
  1563  06B2  1803               	btfsc	3,0
  1564  06B3  2EE6               	goto	l867
  1565  06B4                     l857:	
  1566                           
  1567                           ;fixed_point.c: 29: {
  1568                           ;fixed_point.c: 30: tmp_left = tmp_left << 1;
  1569  06B4  3522               	lslf	convert_to_fp@tmp_left,w
  1570  06B5  00A2               	movwf	convert_to_fp@tmp_left
  1571  06B6  0D23               	rlf	convert_to_fp@tmp_left+1,w
  1572  06B7  00A3               	movwf	convert_to_fp@tmp_left+1
  1573                           
  1574                           ;fixed_point.c: 31: if (tmp_left >= 10000)
  1575  06B8  3027               	movlw	39
  1576  06B9  0223               	subwf	convert_to_fp@tmp_left+1,w
  1577  06BA  3010               	movlw	16
  1578  06BB  1903               	skipnz
  1579  06BC  0222               	subwf	convert_to_fp@tmp_left,w
  1580  06BD  1C03               	skipc
  1581  06BE  2EDE               	goto	l863
  1582                           
  1583                           ;fixed_point.c: 32: {
  1584                           ;fixed_point.c: 33: res_fract = res_fract | one<<(16-i_bit-1);
  1585  06BF  3004               	movlw	low (convert_to_fp@one| (0+32768))
  1586  06C0  0084               	movwf	4
  1587  06C1  3088               	movlw	high (convert_to_fp@one| (0+32768))
  1588  06C2  0085               	movwf	5
  1589  06C3  3F00               	moviw [0]fsr0
  1590  06C4  00F4               	movwf	??_convert_to_fp
  1591  06C5  3F01               	moviw [1]fsr0
  1592  06C6  00F5               	movwf	??_convert_to_fp+1
  1593  06C7  0824               	movf	convert_to_fp@i_bit,w
  1594  06C8  3E01               	addlw	1
  1595  06C9  3AFF               	xorlw	255
  1596  06CA  3E01               	addlw	1
  1597  06CB  3E10               	addlw	16
  1598  06CC  0A89               	incf	9,f
  1599  06CD  2ED0               	goto	u454
  1600  06CE                     u455:	
  1601  06CE  35F4               	lslf	??_convert_to_fp,f
  1602  06CF  0DF5               	rlf	??_convert_to_fp+1,f
  1603  06D0                     u454:	
  1604  06D0  0B89               	decfsz	9,f
  1605  06D1  2ECE               	goto	u455
  1606  06D2  0820               	movf	convert_to_fp@res_fract,w
  1607  06D3  0474               	iorwf	??_convert_to_fp,w
  1608  06D4  00A0               	movwf	convert_to_fp@res_fract
  1609  06D5  0821               	movf	convert_to_fp@res_fract+1,w
  1610  06D6  0475               	iorwf	??_convert_to_fp+1,w
  1611  06D7  00A1               	movwf	convert_to_fp@res_fract+1
  1612                           
  1613                           ;fixed_point.c: 34: tmp_left = tmp_left - 10000;
  1614  06D8  0822               	movf	convert_to_fp@tmp_left,w
  1615  06D9  3EF0               	addlw	240
  1616  06DA  00A2               	movwf	convert_to_fp@tmp_left
  1617  06DB  30D8               	movlw	216
  1618  06DC  3D23               	addwfc	convert_to_fp@tmp_left+1,w
  1619  06DD  00A3               	movwf	convert_to_fp@tmp_left+1
  1620  06DE                     l863:	
  1621  06DE  3001               	movlw	1
  1622  06DF  00F4               	movwf	??_convert_to_fp
  1623  06E0  0874               	movf	??_convert_to_fp,w
  1624  06E1  07A4               	addwf	convert_to_fp@i_bit,f
  1625  06E2  3010               	movlw	16
  1626  06E3  0224               	subwf	convert_to_fp@i_bit,w
  1627  06E4  1C03               	skipc
  1628  06E5  2EB4               	goto	l857
  1629  06E6                     l867:	
  1630                           
  1631                           ;fixed_point.c: 35: }
  1632                           ;fixed_point.c: 36: }
  1633                           ;fixed_point.c: 38: res = res + res_fract;
  1634  06E6  0825               	movf	convert_to_fp@res,w
  1635  06E7  00F4               	movwf	??_convert_to_fp
  1636  06E8  0826               	movf	convert_to_fp@res+1,w
  1637  06E9  00F5               	movwf	??_convert_to_fp+1
  1638  06EA  0827               	movf	convert_to_fp@res+2,w
  1639  06EB  00F6               	movwf	??_convert_to_fp+2
  1640  06EC  0828               	movf	convert_to_fp@res+3,w
  1641  06ED  00F7               	movwf	??_convert_to_fp+3
  1642  06EE  0820               	movf	convert_to_fp@res_fract,w
  1643  06EF  00F8               	movwf	??_convert_to_fp+4
  1644  06F0  0821               	movf	convert_to_fp@res_fract+1,w
  1645  06F1  00F9               	movwf	??_convert_to_fp+5
  1646  06F2  01FA               	clrf	??_convert_to_fp+6
  1647  06F3  01FB               	clrf	??_convert_to_fp+7
  1648  06F4  0878               	movf	??_convert_to_fp+4,w
  1649  06F5  07F4               	addwf	??_convert_to_fp,f
  1650  06F6  0879               	movf	??_convert_to_fp+5,w
  1651  06F7  3DF5               	addwfc	??_convert_to_fp+1,f
  1652  06F8  087A               	movf	??_convert_to_fp+6,w
  1653  06F9  3DF6               	addwfc	??_convert_to_fp+2,f
  1654  06FA  087B               	movf	??_convert_to_fp+7,w
  1655  06FB  3DF7               	addwfc	??_convert_to_fp+3,f
  1656  06FC  0877               	movf	??_convert_to_fp+3,w
  1657  06FD  00A8               	movwf	convert_to_fp@res+3
  1658  06FE  0876               	movf	??_convert_to_fp+2,w
  1659  06FF  00A7               	movwf	convert_to_fp@res+2
  1660  0700  0875               	movf	??_convert_to_fp+1,w
  1661  0701  00A6               	movwf	convert_to_fp@res+1
  1662  0702  0874               	movf	??_convert_to_fp,w
  1663  0703  00A5               	movwf	convert_to_fp@res
  1664                           
  1665                           ;fixed_point.c: 39: return res;
  1666  0704  0828               	movf	convert_to_fp@res+3,w
  1667  0705  00F3               	movwf	?_convert_to_fp+3
  1668  0706  0827               	movf	convert_to_fp@res+2,w
  1669  0707  00F2               	movwf	?_convert_to_fp+2
  1670  0708  0826               	movf	convert_to_fp@res+1,w
  1671  0709  00F1               	movwf	?_convert_to_fp+1
  1672  070A  0825               	movf	convert_to_fp@res,w
  1673  070B  00F0               	movwf	?_convert_to_fp
  1674  070C  0008               	return
  1675  070D                     __end_of_convert_to_fp:	
  1676  007E                     btemp	set	126	;btemp
  1677  007E                     wtemp	set	126
  1678  007E                     wtemp0	set	126
  1679  0080                     wtemp1	set	128
  1680  0082                     wtemp2	set	130
  1681  0084                     wtemp3	set	132
  1682  0086                     wtemp4	set	134
  1683  0088                     wtemp5	set	136
  1684  007F                     wtemp6	set	127
  1685  007E                     ttemp	set	126
  1686  007E                     ttemp0	set	126
  1687  0081                     ttemp1	set	129
  1688  0084                     ttemp2	set	132
  1689  0087                     ttemp3	set	135
  1690  007F                     ttemp4	set	127
  1691  007E                     ltemp	set	126
  1692  007E                     ltemp0	set	126
  1693  0082                     ltemp1	set	130
  1694  0086                     ltemp2	set	134
  1695  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    6
    Data        1
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     36      44
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_convert_to_fp
    _multiply_fp->___lmul

Critical Paths under _main in BANK0

    _main->_multiply_fp

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1297
                                             32 BANK0      4     4      0
                      _convert_to_fp
                        _multiply_fp
 ---------------------------------------------------------------------------------
 (1) _multiply_fp                                         32    24      8     870
                                              0 BANK0     32    24      8
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     516
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _convert_to_fp                                       21    17      4     403
                                              0 COMMON    12     8      4
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _convert_to_fp
   _multiply_fp
     ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     24      2C       6       55.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      3A      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Sep 19 08:20:10 2016

             __CFG_CP$OFF 0000                        l73 0682                       l831 0627  
                     l835 0631                       l863 06DE                       l857 06B4  
                     l867 06E6                       u405 0639                       u425 069B  
                     u505 0770              __CFG_CPD$OFF 0000                       u515 079B  
                     u525 07DA                       u454 06D0                       u455 06CE  
                     u395 0632                       u475 0727                       u485 073E  
                     u495 0759              __CFG_BORV$LO 0000                       wreg 0009  
            __CFG_IESO$ON 0000              __CFG_LVP$OFF 0000                      _LATA 010C  
                    _LATB 010D                      _PLLR 04D6                      _WPUA 020C  
                    _WPUB 020D              __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000  
                    _main 064E                      fsr0h 0005                      fsr0l 0004  
                    btemp 007E             __CFG_BOREN$ON 0000                      ltemp 007E  
                    start 0002                      ttemp 007E                      wtemp 007E  
           __CFG_MCLRE$ON 0000             __CFG_PLLEN$ON 0000                     ?_main 0070  
           _convert_to_fp 0683             __CFG_WDTE$OFF 0000                     _TRISA 008C  
                   _TRISB 008D       ___lmul@multiplicand 0074                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
           multiply_fp@n1 0020             multiply_fp@n2 0024           __initialization 07F1  
            __end_of_main 0683            ?_convert_to_fp 0070                    ??_main 007C  
            _b_last_state 007C          _b_push_confirmed 0049           _b_count_pressed 0046  
                  _ANSELA 018C                    _ANSELB 018D                    _OSCCON 0099  
          __CFG_PWRTE$OFF 0000        convert_to_fp@i_bit 0024                    ___lmul 061F  
          __CFG_STVREN$ON 0000    convert_to_fp@res_fract 0020              ?_multiply_fp 0020  
 __end_of__initialization 07FD            multiply_fp@res 0034            __pcstackCOMMON 0070  
            __pidataBANK0 061E           ??_convert_to_fp 0074            _OPTION_REGbits 0095  
_b_has_once_been_released 0048                __pbssBANK0 0044          _b_count_released 0047  
              __pmaintext 064E                   ?___lmul 0070            ___lmul@product 0078  
                 _APFCON0 011D                   _APFCON1 011E                   _OSCSTAT 009A  
                 _OSCTUNE 0098           __size_of___lmul 002F   convert_to_fp@fract_part 0072  
                 __ptext1 070D                   __ptext2 061F                   __ptext3 0683  
    end_of_initialization 07FD         __end_of_ratio_mph 0804                 _LED_state 004B  
    __size_of_multiply_fp 00E4              __pstringtext 0800          __CFG_FOSC$INTOSC 0000  
          __end_of___lmul 064E          convert_to_fp@one 0804          convert_to_fp@res 0025  
     start_initialization 07F1                  ??___lmul 0078               __pdataBANK0 004B  
   convert_to_fp@int_part 0070     __end_of_convert_to_fp 070D               __pbssCOMMON 007C  
               ___latbits 0001             __pcstackBANK0 0020     convert_to_fp@tmp_left 0022  
               _ratio_mph 0800                 main@speed 0040         ___lmul@multiplier 0070  
           ??_multiply_fp 0028  __end_ofconvert_to_fp@one 0806               _LED_counter 0044  
       _b_confirmed_state 0045             __size_of_main 0035       __end_of_multiply_fp 07F1  
     _b_release_confirmed 004A         __CFG_CLKOUTEN$OFF 0000               _multiply_fp 070D  
  __size_of_convert_to_fp 008A         multiply_fp@n1_fra 0038         multiply_fp@n2_fra 003C  

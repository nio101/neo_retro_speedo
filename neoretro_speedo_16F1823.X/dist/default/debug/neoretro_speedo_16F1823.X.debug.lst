

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Sep 13 08:18:14 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     	;# 
    29  0001                     	;# 
    30  0002                     	;# 
    31  0003                     	;# 
    32  0004                     	;# 
    33  0005                     	;# 
    34  0006                     	;# 
    35  0007                     	;# 
    36  0008                     	;# 
    37  0009                     	;# 
    38  000A                     	;# 
    39  000B                     	;# 
    40  000C                     	;# 
    41  000E                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001B                     	;# 
    52  001C                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  008C                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0095                     	;# 
    60  0096                     	;# 
    61  0097                     	;# 
    62  0098                     	;# 
    63  0099                     	;# 
    64  009A                     	;# 
    65  009B                     	;# 
    66  009B                     	;# 
    67  009C                     	;# 
    68  009D                     	;# 
    69  009E                     	;# 
    70  010C                     	;# 
    71  010E                     	;# 
    72  0111                     	;# 
    73  0112                     	;# 
    74  0113                     	;# 
    75  0114                     	;# 
    76  0115                     	;# 
    77  0116                     	;# 
    78  0117                     	;# 
    79  0118                     	;# 
    80  0119                     	;# 
    81  011A                     	;# 
    82  011B                     	;# 
    83  011D                     	;# 
    84  011D                     	;# 
    85  018C                     	;# 
    86  018E                     	;# 
    87  0191                     	;# 
    88  0191                     	;# 
    89  0192                     	;# 
    90  0193                     	;# 
    91  0193                     	;# 
    92  0193                     	;# 
    93  0194                     	;# 
    94  0195                     	;# 
    95  0196                     	;# 
    96  0199                     	;# 
    97  019A                     	;# 
    98  019B                     	;# 
    99  019B                     	;# 
   100  019B                     	;# 
   101  019B                     	;# 
   102  019C                     	;# 
   103  019C                     	;# 
   104  019D                     	;# 
   105  019E                     	;# 
   106  019F                     	;# 
   107  020C                     	;# 
   108  020E                     	;# 
   109  0211                     	;# 
   110  0211                     	;# 
   111  0212                     	;# 
   112  0212                     	;# 
   113  0213                     	;# 
   114  0213                     	;# 
   115  0214                     	;# 
   116  0214                     	;# 
   117  0215                     	;# 
   118  0215                     	;# 
   119  0215                     	;# 
   120  0216                     	;# 
   121  0216                     	;# 
   122  0217                     	;# 
   123  0217                     	;# 
   124  0291                     	;# 
   125  0291                     	;# 
   126  0292                     	;# 
   127  0293                     	;# 
   128  0294                     	;# 
   129  0295                     	;# 
   130  0295                     	;# 
   131  0296                     	;# 
   132  0391                     	;# 
   133  0392                     	;# 
   134  0393                     	;# 
   135  039A                     	;# 
   136  039C                     	;# 
   137  039D                     	;# 
   138  039E                     	;# 
   139  039F                     	;# 
   140  0FE4                     	;# 
   141  0FE5                     	;# 
   142  0FE6                     	;# 
   143  0FE7                     	;# 
   144  0FE8                     	;# 
   145  0FE9                     	;# 
   146  0FEA                     	;# 
   147  0FEB                     	;# 
   148  0FED                     	;# 
   149  0FEE                     	;# 
   150  0FEF                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000E                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  008C                     	;# 
   179  008E                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  010C                     	;# 
   194  010E                     	;# 
   195  0111                     	;# 
   196  0112                     	;# 
   197  0113                     	;# 
   198  0114                     	;# 
   199  0115                     	;# 
   200  0116                     	;# 
   201  0117                     	;# 
   202  0118                     	;# 
   203  0119                     	;# 
   204  011A                     	;# 
   205  011B                     	;# 
   206  011D                     	;# 
   207  011D                     	;# 
   208  018C                     	;# 
   209  018E                     	;# 
   210  0191                     	;# 
   211  0191                     	;# 
   212  0192                     	;# 
   213  0193                     	;# 
   214  0193                     	;# 
   215  0193                     	;# 
   216  0194                     	;# 
   217  0195                     	;# 
   218  0196                     	;# 
   219  0199                     	;# 
   220  019A                     	;# 
   221  019B                     	;# 
   222  019B                     	;# 
   223  019B                     	;# 
   224  019B                     	;# 
   225  019C                     	;# 
   226  019C                     	;# 
   227  019D                     	;# 
   228  019E                     	;# 
   229  019F                     	;# 
   230  020C                     	;# 
   231  020E                     	;# 
   232  0211                     	;# 
   233  0211                     	;# 
   234  0212                     	;# 
   235  0212                     	;# 
   236  0213                     	;# 
   237  0213                     	;# 
   238  0214                     	;# 
   239  0214                     	;# 
   240  0215                     	;# 
   241  0215                     	;# 
   242  0215                     	;# 
   243  0216                     	;# 
   244  0216                     	;# 
   245  0217                     	;# 
   246  0217                     	;# 
   247  0291                     	;# 
   248  0291                     	;# 
   249  0292                     	;# 
   250  0293                     	;# 
   251  0294                     	;# 
   252  0295                     	;# 
   253  0295                     	;# 
   254  0296                     	;# 
   255  0391                     	;# 
   256  0392                     	;# 
   257  0393                     	;# 
   258  039A                     	;# 
   259  039C                     	;# 
   260  039D                     	;# 
   261  039E                     	;# 
   262  039F                     	;# 
   263  0FE4                     	;# 
   264  0FE5                     	;# 
   265  0FE6                     	;# 
   266  0FE7                     	;# 
   267  0FE8                     	;# 
   268  0FE9                     	;# 
   269  0FEA                     	;# 
   270  0FEB                     	;# 
   271  0FED                     	;# 
   272  0FEE                     	;# 
   273  0FEF                     	;# 
   274  0000                     	;# 
   275  0001                     	;# 
   276  0002                     	;# 
   277  0003                     	;# 
   278  0004                     	;# 
   279  0005                     	;# 
   280  0006                     	;# 
   281  0007                     	;# 
   282  0008                     	;# 
   283  0009                     	;# 
   284  000A                     	;# 
   285  000B                     	;# 
   286  000C                     	;# 
   287  000E                     	;# 
   288  0011                     	;# 
   289  0012                     	;# 
   290  0015                     	;# 
   291  0016                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  001A                     	;# 
   297  001B                     	;# 
   298  001C                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  008C                     	;# 
   302  008E                     	;# 
   303  0091                     	;# 
   304  0092                     	;# 
   305  0095                     	;# 
   306  0096                     	;# 
   307  0097                     	;# 
   308  0098                     	;# 
   309  0099                     	;# 
   310  009A                     	;# 
   311  009B                     	;# 
   312  009B                     	;# 
   313  009C                     	;# 
   314  009D                     	;# 
   315  009E                     	;# 
   316  010C                     	;# 
   317  010E                     	;# 
   318  0111                     	;# 
   319  0112                     	;# 
   320  0113                     	;# 
   321  0114                     	;# 
   322  0115                     	;# 
   323  0116                     	;# 
   324  0117                     	;# 
   325  0118                     	;# 
   326  0119                     	;# 
   327  011A                     	;# 
   328  011B                     	;# 
   329  011D                     	;# 
   330  011D                     	;# 
   331  018C                     	;# 
   332  018E                     	;# 
   333  0191                     	;# 
   334  0191                     	;# 
   335  0192                     	;# 
   336  0193                     	;# 
   337  0193                     	;# 
   338  0193                     	;# 
   339  0194                     	;# 
   340  0195                     	;# 
   341  0196                     	;# 
   342  0199                     	;# 
   343  019A                     	;# 
   344  019B                     	;# 
   345  019B                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019C                     	;# 
   349  019C                     	;# 
   350  019D                     	;# 
   351  019E                     	;# 
   352  019F                     	;# 
   353  020C                     	;# 
   354  020E                     	;# 
   355  0211                     	;# 
   356  0211                     	;# 
   357  0212                     	;# 
   358  0212                     	;# 
   359  0213                     	;# 
   360  0213                     	;# 
   361  0214                     	;# 
   362  0214                     	;# 
   363  0215                     	;# 
   364  0215                     	;# 
   365  0215                     	;# 
   366  0216                     	;# 
   367  0216                     	;# 
   368  0217                     	;# 
   369  0217                     	;# 
   370  0291                     	;# 
   371  0291                     	;# 
   372  0292                     	;# 
   373  0293                     	;# 
   374  0294                     	;# 
   375  0295                     	;# 
   376  0295                     	;# 
   377  0296                     	;# 
   378  0391                     	;# 
   379  0392                     	;# 
   380  0393                     	;# 
   381  039A                     	;# 
   382  039C                     	;# 
   383  039D                     	;# 
   384  039E                     	;# 
   385  039F                     	;# 
   386  0FE4                     	;# 
   387  0FE5                     	;# 
   388  0FE6                     	;# 
   389  0FE7                     	;# 
   390  0FE8                     	;# 
   391  0FE9                     	;# 
   392  0FEA                     	;# 
   393  0FEB                     	;# 
   394  0FED                     	;# 
   395  0FEE                     	;# 
   396  0FEF                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000E                     	;# 
   411  0011                     	;# 
   412  0012                     	;# 
   413  0015                     	;# 
   414  0016                     	;# 
   415  0016                     	;# 
   416  0017                     	;# 
   417  0018                     	;# 
   418  0019                     	;# 
   419  001A                     	;# 
   420  001B                     	;# 
   421  001C                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  008C                     	;# 
   425  008E                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  010C                     	;# 
   440  010E                     	;# 
   441  0111                     	;# 
   442  0112                     	;# 
   443  0113                     	;# 
   444  0114                     	;# 
   445  0115                     	;# 
   446  0116                     	;# 
   447  0117                     	;# 
   448  0118                     	;# 
   449  0119                     	;# 
   450  011A                     	;# 
   451  011B                     	;# 
   452  011D                     	;# 
   453  011D                     	;# 
   454  018C                     	;# 
   455  018E                     	;# 
   456  0191                     	;# 
   457  0191                     	;# 
   458  0192                     	;# 
   459  0193                     	;# 
   460  0193                     	;# 
   461  0193                     	;# 
   462  0194                     	;# 
   463  0195                     	;# 
   464  0196                     	;# 
   465  0199                     	;# 
   466  019A                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019C                     	;# 
   472  019C                     	;# 
   473  019D                     	;# 
   474  019E                     	;# 
   475  019F                     	;# 
   476  020C                     	;# 
   477  020E                     	;# 
   478  0211                     	;# 
   479  0211                     	;# 
   480  0212                     	;# 
   481  0212                     	;# 
   482  0213                     	;# 
   483  0213                     	;# 
   484  0214                     	;# 
   485  0214                     	;# 
   486  0215                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0216                     	;# 
   490  0216                     	;# 
   491  0217                     	;# 
   492  0217                     	;# 
   493  0291                     	;# 
   494  0291                     	;# 
   495  0292                     	;# 
   496  0293                     	;# 
   497  0294                     	;# 
   498  0295                     	;# 
   499  0295                     	;# 
   500  0296                     	;# 
   501  0391                     	;# 
   502  0392                     	;# 
   503  0393                     	;# 
   504  039A                     	;# 
   505  039C                     	;# 
   506  039D                     	;# 
   507  039E                     	;# 
   508  039F                     	;# 
   509  0FE4                     	;# 
   510  0FE5                     	;# 
   511  0FE6                     	;# 
   512  0FE7                     	;# 
   513  0FE8                     	;# 
   514  0FE9                     	;# 
   515  0FEA                     	;# 
   516  0FEB                     	;# 
   517  0FED                     	;# 
   518  0FEE                     	;# 
   519  0FEF                     	;# 
   520  0000                     	;# 
   521  0001                     	;# 
   522  0002                     	;# 
   523  0003                     	;# 
   524  0004                     	;# 
   525  0005                     	;# 
   526  0006                     	;# 
   527  0007                     	;# 
   528  0008                     	;# 
   529  0009                     	;# 
   530  000A                     	;# 
   531  000B                     	;# 
   532  000C                     	;# 
   533  000E                     	;# 
   534  0011                     	;# 
   535  0012                     	;# 
   536  0015                     	;# 
   537  0016                     	;# 
   538  0016                     	;# 
   539  0017                     	;# 
   540  0018                     	;# 
   541  0019                     	;# 
   542  001A                     	;# 
   543  001B                     	;# 
   544  001C                     	;# 
   545  001E                     	;# 
   546  001F                     	;# 
   547  008C                     	;# 
   548  008E                     	;# 
   549  0091                     	;# 
   550  0092                     	;# 
   551  0095                     	;# 
   552  0096                     	;# 
   553  0097                     	;# 
   554  0098                     	;# 
   555  0099                     	;# 
   556  009A                     	;# 
   557  009B                     	;# 
   558  009B                     	;# 
   559  009C                     	;# 
   560  009D                     	;# 
   561  009E                     	;# 
   562  010C                     	;# 
   563  010E                     	;# 
   564  0111                     	;# 
   565  0112                     	;# 
   566  0113                     	;# 
   567  0114                     	;# 
   568  0115                     	;# 
   569  0116                     	;# 
   570  0117                     	;# 
   571  0118                     	;# 
   572  0119                     	;# 
   573  011A                     	;# 
   574  011B                     	;# 
   575  011D                     	;# 
   576  011D                     	;# 
   577  018C                     	;# 
   578  018E                     	;# 
   579  0191                     	;# 
   580  0191                     	;# 
   581  0192                     	;# 
   582  0193                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0194                     	;# 
   586  0195                     	;# 
   587  0196                     	;# 
   588  0199                     	;# 
   589  019A                     	;# 
   590  019B                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019C                     	;# 
   595  019C                     	;# 
   596  019D                     	;# 
   597  019E                     	;# 
   598  019F                     	;# 
   599  020C                     	;# 
   600  020E                     	;# 
   601  0211                     	;# 
   602  0211                     	;# 
   603  0212                     	;# 
   604  0212                     	;# 
   605  0213                     	;# 
   606  0213                     	;# 
   607  0214                     	;# 
   608  0214                     	;# 
   609  0215                     	;# 
   610  0215                     	;# 
   611  0215                     	;# 
   612  0216                     	;# 
   613  0216                     	;# 
   614  0217                     	;# 
   615  0217                     	;# 
   616  0291                     	;# 
   617  0291                     	;# 
   618  0292                     	;# 
   619  0293                     	;# 
   620  0294                     	;# 
   621  0295                     	;# 
   622  0295                     	;# 
   623  0296                     	;# 
   624  0391                     	;# 
   625  0392                     	;# 
   626  0393                     	;# 
   627  039A                     	;# 
   628  039C                     	;# 
   629  039D                     	;# 
   630  039E                     	;# 
   631  039F                     	;# 
   632  0FE4                     	;# 
   633  0FE5                     	;# 
   634  0FE6                     	;# 
   635  0FE7                     	;# 
   636  0FE8                     	;# 
   637  0FE9                     	;# 
   638  0FEA                     	;# 
   639  0FEB                     	;# 
   640  0FED                     	;# 
   641  0FEE                     	;# 
   642  0FEF                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0008                     	;# 
   652  0009                     	;# 
   653  000A                     	;# 
   654  000B                     	;# 
   655  000C                     	;# 
   656  000E                     	;# 
   657  0011                     	;# 
   658  0012                     	;# 
   659  0015                     	;# 
   660  0016                     	;# 
   661  0016                     	;# 
   662  0017                     	;# 
   663  0018                     	;# 
   664  0019                     	;# 
   665  001A                     	;# 
   666  001B                     	;# 
   667  001C                     	;# 
   668  001E                     	;# 
   669  001F                     	;# 
   670  008C                     	;# 
   671  008E                     	;# 
   672  0091                     	;# 
   673  0092                     	;# 
   674  0095                     	;# 
   675  0096                     	;# 
   676  0097                     	;# 
   677  0098                     	;# 
   678  0099                     	;# 
   679  009A                     	;# 
   680  009B                     	;# 
   681  009B                     	;# 
   682  009C                     	;# 
   683  009D                     	;# 
   684  009E                     	;# 
   685  010C                     	;# 
   686  010E                     	;# 
   687  0111                     	;# 
   688  0112                     	;# 
   689  0113                     	;# 
   690  0114                     	;# 
   691  0115                     	;# 
   692  0116                     	;# 
   693  0117                     	;# 
   694  0118                     	;# 
   695  0119                     	;# 
   696  011A                     	;# 
   697  011B                     	;# 
   698  011D                     	;# 
   699  011D                     	;# 
   700  018C                     	;# 
   701  018E                     	;# 
   702  0191                     	;# 
   703  0191                     	;# 
   704  0192                     	;# 
   705  0193                     	;# 
   706  0193                     	;# 
   707  0193                     	;# 
   708  0194                     	;# 
   709  0195                     	;# 
   710  0196                     	;# 
   711  0199                     	;# 
   712  019A                     	;# 
   713  019B                     	;# 
   714  019B                     	;# 
   715  019B                     	;# 
   716  019B                     	;# 
   717  019C                     	;# 
   718  019C                     	;# 
   719  019D                     	;# 
   720  019E                     	;# 
   721  019F                     	;# 
   722  020C                     	;# 
   723  020E                     	;# 
   724  0211                     	;# 
   725  0211                     	;# 
   726  0212                     	;# 
   727  0212                     	;# 
   728  0213                     	;# 
   729  0213                     	;# 
   730  0214                     	;# 
   731  0214                     	;# 
   732  0215                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0216                     	;# 
   736  0216                     	;# 
   737  0217                     	;# 
   738  0217                     	;# 
   739  0291                     	;# 
   740  0291                     	;# 
   741  0292                     	;# 
   742  0293                     	;# 
   743  0294                     	;# 
   744  0295                     	;# 
   745  0295                     	;# 
   746  0296                     	;# 
   747  0391                     	;# 
   748  0392                     	;# 
   749  0393                     	;# 
   750  039A                     	;# 
   751  039C                     	;# 
   752  039D                     	;# 
   753  039E                     	;# 
   754  039F                     	;# 
   755  0FE4                     	;# 
   756  0FE5                     	;# 
   757  0FE6                     	;# 
   758  0FE7                     	;# 
   759  0FE8                     	;# 
   760  0FE9                     	;# 
   761  0FEA                     	;# 
   762  0FEB                     	;# 
   763  0FED                     	;# 
   764  0FEE                     	;# 
   765  0FEF                     	;# 
   766  0000                     	;# 
   767  0001                     	;# 
   768  0002                     	;# 
   769  0003                     	;# 
   770  0004                     	;# 
   771  0005                     	;# 
   772  0006                     	;# 
   773  0007                     	;# 
   774  0008                     	;# 
   775  0009                     	;# 
   776  000A                     	;# 
   777  000B                     	;# 
   778  000C                     	;# 
   779  000E                     	;# 
   780  0011                     	;# 
   781  0012                     	;# 
   782  0015                     	;# 
   783  0016                     	;# 
   784  0016                     	;# 
   785  0017                     	;# 
   786  0018                     	;# 
   787  0019                     	;# 
   788  001A                     	;# 
   789  001B                     	;# 
   790  001C                     	;# 
   791  001E                     	;# 
   792  001F                     	;# 
   793  008C                     	;# 
   794  008E                     	;# 
   795  0091                     	;# 
   796  0092                     	;# 
   797  0095                     	;# 
   798  0096                     	;# 
   799  0097                     	;# 
   800  0098                     	;# 
   801  0099                     	;# 
   802  009A                     	;# 
   803  009B                     	;# 
   804  009B                     	;# 
   805  009C                     	;# 
   806  009D                     	;# 
   807  009E                     	;# 
   808  010C                     	;# 
   809  010E                     	;# 
   810  0111                     	;# 
   811  0112                     	;# 
   812  0113                     	;# 
   813  0114                     	;# 
   814  0115                     	;# 
   815  0116                     	;# 
   816  0117                     	;# 
   817  0118                     	;# 
   818  0119                     	;# 
   819  011A                     	;# 
   820  011B                     	;# 
   821  011D                     	;# 
   822  011D                     	;# 
   823  018C                     	;# 
   824  018E                     	;# 
   825  0191                     	;# 
   826  0191                     	;# 
   827  0192                     	;# 
   828  0193                     	;# 
   829  0193                     	;# 
   830  0193                     	;# 
   831  0194                     	;# 
   832  0195                     	;# 
   833  0196                     	;# 
   834  0199                     	;# 
   835  019A                     	;# 
   836  019B                     	;# 
   837  019B                     	;# 
   838  019B                     	;# 
   839  019B                     	;# 
   840  019C                     	;# 
   841  019C                     	;# 
   842  019D                     	;# 
   843  019E                     	;# 
   844  019F                     	;# 
   845  020C                     	;# 
   846  020E                     	;# 
   847  0211                     	;# 
   848  0211                     	;# 
   849  0212                     	;# 
   850  0212                     	;# 
   851  0213                     	;# 
   852  0213                     	;# 
   853  0214                     	;# 
   854  0214                     	;# 
   855  0215                     	;# 
   856  0215                     	;# 
   857  0215                     	;# 
   858  0216                     	;# 
   859  0216                     	;# 
   860  0217                     	;# 
   861  0217                     	;# 
   862  0291                     	;# 
   863  0291                     	;# 
   864  0292                     	;# 
   865  0293                     	;# 
   866  0294                     	;# 
   867  0295                     	;# 
   868  0295                     	;# 
   869  0296                     	;# 
   870  0391                     	;# 
   871  0392                     	;# 
   872  0393                     	;# 
   873  039A                     	;# 
   874  039C                     	;# 
   875  039D                     	;# 
   876  039E                     	;# 
   877  039F                     	;# 
   878  0FE4                     	;# 
   879  0FE5                     	;# 
   880  0FE6                     	;# 
   881  0FE7                     	;# 
   882  0FE8                     	;# 
   883  0FE9                     	;# 
   884  0FEA                     	;# 
   885  0FEB                     	;# 
   886  0FED                     	;# 
   887  0FEE                     	;# 
   888  0FEF                     	;# 
   889  0000                     	;# 
   890  0001                     	;# 
   891  0002                     	;# 
   892  0003                     	;# 
   893  0004                     	;# 
   894  0005                     	;# 
   895  0006                     	;# 
   896  0007                     	;# 
   897  0008                     	;# 
   898  0009                     	;# 
   899  000A                     	;# 
   900  000B                     	;# 
   901  000C                     	;# 
   902  000E                     	;# 
   903  0011                     	;# 
   904  0012                     	;# 
   905  0015                     	;# 
   906  0016                     	;# 
   907  0016                     	;# 
   908  0017                     	;# 
   909  0018                     	;# 
   910  0019                     	;# 
   911  001A                     	;# 
   912  001B                     	;# 
   913  001C                     	;# 
   914  001E                     	;# 
   915  001F                     	;# 
   916  008C                     	;# 
   917  008E                     	;# 
   918  0091                     	;# 
   919  0092                     	;# 
   920  0095                     	;# 
   921  0096                     	;# 
   922  0097                     	;# 
   923  0098                     	;# 
   924  0099                     	;# 
   925  009A                     	;# 
   926  009B                     	;# 
   927  009B                     	;# 
   928  009C                     	;# 
   929  009D                     	;# 
   930  009E                     	;# 
   931  010C                     	;# 
   932  010E                     	;# 
   933  0111                     	;# 
   934  0112                     	;# 
   935  0113                     	;# 
   936  0114                     	;# 
   937  0115                     	;# 
   938  0116                     	;# 
   939  0117                     	;# 
   940  0118                     	;# 
   941  0119                     	;# 
   942  011A                     	;# 
   943  011B                     	;# 
   944  011D                     	;# 
   945  011D                     	;# 
   946  018C                     	;# 
   947  018E                     	;# 
   948  0191                     	;# 
   949  0191                     	;# 
   950  0192                     	;# 
   951  0193                     	;# 
   952  0193                     	;# 
   953  0193                     	;# 
   954  0194                     	;# 
   955  0195                     	;# 
   956  0196                     	;# 
   957  0199                     	;# 
   958  019A                     	;# 
   959  019B                     	;# 
   960  019B                     	;# 
   961  019B                     	;# 
   962  019B                     	;# 
   963  019C                     	;# 
   964  019C                     	;# 
   965  019D                     	;# 
   966  019E                     	;# 
   967  019F                     	;# 
   968  020C                     	;# 
   969  020E                     	;# 
   970  0211                     	;# 
   971  0211                     	;# 
   972  0212                     	;# 
   973  0212                     	;# 
   974  0213                     	;# 
   975  0213                     	;# 
   976  0214                     	;# 
   977  0214                     	;# 
   978  0215                     	;# 
   979  0215                     	;# 
   980  0215                     	;# 
   981  0216                     	;# 
   982  0216                     	;# 
   983  0217                     	;# 
   984  0217                     	;# 
   985  0291                     	;# 
   986  0291                     	;# 
   987  0292                     	;# 
   988  0293                     	;# 
   989  0294                     	;# 
   990  0295                     	;# 
   991  0295                     	;# 
   992  0296                     	;# 
   993  0391                     	;# 
   994  0392                     	;# 
   995  0393                     	;# 
   996  039A                     	;# 
   997  039C                     	;# 
   998  039D                     	;# 
   999  039E                     	;# 
  1000  039F                     	;# 
  1001  0FE4                     	;# 
  1002  0FE5                     	;# 
  1003  0FE6                     	;# 
  1004  0FE7                     	;# 
  1005  0FE8                     	;# 
  1006  0FE9                     	;# 
  1007  0FEA                     	;# 
  1008  0FEB                     	;# 
  1009  0FED                     	;# 
  1010  0FEE                     	;# 
  1011  0FEF                     	;# 
  1012  000B                     _INTCONbits	set	11
  1013  0011                     _PIR1bits	set	17
  1014  001B                     _PR2	set	27
  1015  001C                     _T2CON	set	28
  1016  001C                     _T2CONbits	set	28
  1017  001A                     _TMR2	set	26
  1018  0095                     _OPTION_REGbits	set	149
  1019  0099                     _OSCCON	set	153
  1020  009A                     _OSCSTAT	set	154
  1021  0098                     _OSCTUNE	set	152
  1022  0091                     _PIE1bits	set	145
  1023  008C                     _TRISA	set	140
  1024  008E                     _TRISC	set	142
  1025  04D6                     _PLLR	set	1238
  1026  011D                     _APFCON	set	285
  1027  010C                     _LATA	set	268
  1028  010E                     _LATC	set	270
  1029  0865                     _LATA5	set	2149
  1030  018C                     _ANSELA	set	396
  1031  018E                     _ANSELC	set	398
  1032  019F                     _BAUDCON	set	415
  1033  0192                     _EEADRH	set	402
  1034  0191                     _EEADRL	set	401
  1035  0195                     _EECON1bits	set	405
  1036  0196                     _EECON2	set	406
  1037  0194                     _EEDATH	set	404
  1038  0193                     _EEDATL	set	403
  1039  0199                     _RCREG	set	409
  1040  019D                     _RCSTA	set	413
  1041  019D                     _RCSTAbits	set	413
  1042  019C                     _SPBRGH	set	412
  1043  019B                     _SPBRGL	set	411
  1044  019A                     _TXREG	set	410
  1045  019E                     _TXSTA	set	414
  1046  020C                     _WPUA	set	524
  1047  020E                     _WPUC	set	526
  1048  0293                     _CCP1CON	set	659
  1049  0292                     _CCPR1H	set	658
  1050  0291                     _CCPR1L	set	657
  1051  0295                     _ECCP1AS	set	661
  1052  0296                     _PSTR1CON	set	662
  1053  0294                     _PWM1CON	set	660
  1054                           
  1055                           	psect	stringtext
  1056  0090                     __pstringtext:	
  1057  0090                     STR_1:	
  1058  0090  3424               	retlw	36	;'$'
  1059  0091  3450               	retlw	80	;'P'
  1060  0092  344D               	retlw	77	;'M'
  1061  0093  3454               	retlw	84	;'T'
  1062  0094  344B               	retlw	75	;'K'
  1063  0095  3433               	retlw	51	;'3'
  1064  0096  3431               	retlw	49	;'1'
  1065  0097  3434               	retlw	52	;'4'
  1066  0098  342C               	retlw	44	;','
  1067  0099  3430               	retlw	48	;'0'
  1068  009A  342C               	retlw	44	;','
  1069  009B  3430               	retlw	48	;'0'
  1070  009C  342C               	retlw	44	;','
  1071  009D  3431               	retlw	49	;'1'
  1072  009E  342C               	retlw	44	;','
  1073  009F  3430               	retlw	48	;'0'
  1074  00A0  342C               	retlw	44	;','
  1075  00A1  3430               	retlw	48	;'0'
  1076  00A2  342C               	retlw	44	;','
  1077  00A3  3430               	retlw	48	;'0'
  1078  00A4  342C               	retlw	44	;','
  1079  00A5  3430               	retlw	48	;'0'
  1080  00A6  342C               	retlw	44	;','
  1081  00A7  3430               	retlw	48	;'0'
  1082  00A8  342C               	retlw	44	;','
  1083  00A9  3430               	retlw	48	;'0'
  1084  00AA  342C               	retlw	44	;','
  1085  00AB  3430               	retlw	48	;'0'
  1086  00AC  342C               	retlw	44	;','
  1087  00AD  3430               	retlw	48	;'0'
  1088  00AE  342C               	retlw	44	;','
  1089  00AF  3430               	retlw	48	;'0'
  1090  00B0  342C               	retlw	44	;','
  1091  00B1  3430               	retlw	48	;'0'
  1092  00B2  342C               	retlw	44	;','
  1093  00B3  3430               	retlw	48	;'0'
  1094  00B4  342C               	retlw	44	;','
  1095  00B5  3430               	retlw	48	;'0'
  1096  00B6  342C               	retlw	44	;','
  1097  00B7  3430               	retlw	48	;'0'
  1098  00B8  342C               	retlw	44	;','
  1099  00B9  3430               	retlw	48	;'0'
  1100  00BA  342C               	retlw	44	;','
  1101  00BB  3430               	retlw	48	;'0'
  1102  00BC  342C               	retlw	44	;','
  1103  00BD  3430               	retlw	48	;'0'
  1104  00BE  342A               	retlw	42	;'*'
  1105  00BF  3432               	retlw	50	;'2'
  1106  00C0  3439               	retlw	57	;'9'
  1107  00C1  340D               	retlw	13
  1108  00C2  340A               	retlw	10
  1109  00C3  3400               	retlw	0
  1110  00C4                     STR_2:	
  1111  00C4  3424               	retlw	36	;'$'
  1112  00C5  3450               	retlw	80	;'P'
  1113  00C6  344D               	retlw	77	;'M'
  1114  00C7  3454               	retlw	84	;'T'
  1115  00C8  344B               	retlw	75	;'K'
  1116  00C9  3432               	retlw	50	;'2'
  1117  00CA  3432               	retlw	50	;'2'
  1118  00CB  3430               	retlw	48	;'0'
  1119  00CC  342C               	retlw	44	;','
  1120  00CD  3431               	retlw	49	;'1'
  1121  00CE  3430               	retlw	48	;'0'
  1122  00CF  3430               	retlw	48	;'0'
  1123  00D0  342A               	retlw	42	;'*'
  1124  00D1  3432               	retlw	50	;'2'
  1125  00D2  3446               	retlw	70	;'F'
  1126  00D3  340D               	retlw	13
  1127  00D4  340A               	retlw	10
  1128  00D5  3400               	retlw	0
  1129                           
  1130                           ; #config settings
  1131  0000                     
  1132                           	psect	cinit
  1133  0021                     start_initialization:	
  1134  0021                     __initialization:	
  1135                           
  1136                           ; Clear objects allocated to COMMON
  1137  0021  01FA               	clrf	__pbssCOMMON& (0+127)
  1138  0022  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1139                           
  1140                           ; Clear objects allocated to BANK0
  1141  0023  3020               	movlw	low __pbssBANK0
  1142  0024  0084               	movwf	4
  1143  0025  3000               	movlw	high __pbssBANK0
  1144  0026  0085               	movwf	5
  1145  0027  3018               	movlw	24
  1146  0028  21F0               	fcall	clear_ram0
  1147  0029                     end_of_initialization:	
  1148                           ;End of C runtime variable initialization code
  1149                           
  1150  0029                     __end_of__initialization:	
  1151  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1152  002A  0020               	movlb	0
  1153  002B  282C               	ljmp	_main	;jump to C main() function
  1154                           
  1155                           	psect	bssCOMMON
  1156  007A                     __pbssCOMMON:	
  1157  007A                     _eusartRxCount:	
  1158  007A                     	ds	1
  1159  007B                     _eusartTxBufferRemaining:	
  1160  007B                     	ds	1
  1161                           
  1162                           	psect	bssBANK0
  1163  0020                     __pbssBANK0:	
  1164  0020                     _eusartRxBuffer:	
  1165  0020                     	ds	8
  1166  0028                     _eusartTxBuffer:	
  1167  0028                     	ds	8
  1168  0030                     _speed:	
  1169  0030                     	ds	3
  1170  0033                     _eusartRxHead:	
  1171  0033                     	ds	1
  1172  0034                     _eusartRxTail:	
  1173  0034                     	ds	1
  1174  0035                     _eusartTxHead:	
  1175  0035                     	ds	1
  1176  0036                     _eusartTxTail:	
  1177  0036                     	ds	1
  1178  0037                     _speed_units:	
  1179  0037                     	ds	1
  1180                           
  1181                           	psect	clrtext
  1182  01F0                     clear_ram0:	
  1183                           ;	Called with FSR0 containing the base address, and
  1184                           ;	WREG with the size to clear
  1185                           
  1186  01F0  0064               	clrwdt	;clear the watchdog before getting into this loop
  1187  01F1                     clrloop0:	
  1188  01F1  0180               	clrf	0	;clear RAM location pointed to by FSR
  1189  01F2  3101               	addfsr 0,1
  1190  01F3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1191  01F4  29F1               	goto	clrloop0	;have we reached the end yet?
  1192  01F5  3400               	retlw	0	;all done for this memory range, return
  1193                           
  1194                           	psect	cstackCOMMON
  1195  0070                     __pcstackCOMMON:	
  1196  0070                     ?_TMR2_StartTimer:	
  1197  0070                     ?_OSCILLATOR_Initialize:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_TMR2_Initialize:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_EUSART_Initialize:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_EUSART_Write:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_putch:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_EUSART_Transmit_ISR:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ??_EUSART_Transmit_ISR:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_EUSART_Receive_ISR:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ??_EUSART_Receive_ISR:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_EPWM_Initialize:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?_PIN_MANAGER_Initialize:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_SYSTEM_Initialize:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_INTERRUPT_InterruptManager:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_GPS_Initialize:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_main:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242                           
  1243                           ; 1 bytes @ 0x0
  1244  0070                     	ds	1
  1245  0071                     ??_INTERRUPT_InterruptManager:	
  1246                           
  1247                           ; 1 bytes @ 0x1
  1248  0071                     	ds	1
  1249  0072                     ??_TMR2_StartTimer:	
  1250  0072                     ??_OSCILLATOR_Initialize:	
  1251                           ; 1 bytes @ 0x2
  1252                           
  1253  0072                     ??_TMR2_Initialize:	
  1254                           ; 1 bytes @ 0x2
  1255                           
  1256  0072                     ??_EUSART_Initialize:	
  1257                           ; 1 bytes @ 0x2
  1258                           
  1259  0072                     ??_EUSART_Write:	
  1260                           ; 1 bytes @ 0x2
  1261                           
  1262  0072                     ??_EPWM_Initialize:	
  1263                           ; 1 bytes @ 0x2
  1264                           
  1265  0072                     ?_EPWM_LoadDutyValue:	
  1266                           ; 1 bytes @ 0x2
  1267                           
  1268  0072                     ??_PIN_MANAGER_Initialize:	
  1269                           ; 1 bytes @ 0x2
  1270                           
  1271  0072                     EPWM_LoadDutyValue@dutyValue:	
  1272                           ; 1 bytes @ 0x2
  1273                           
  1274                           
  1275                           ; 2 bytes @ 0x2
  1276  0072                     	ds	1
  1277  0073                     ??_SYSTEM_Initialize:	
  1278  0073                     EUSART_Write@txData:	
  1279                           ; 1 bytes @ 0x3
  1280                           
  1281                           
  1282                           ; 1 bytes @ 0x3
  1283  0073                     	ds	1
  1284  0074                     ??_putch:	
  1285  0074                     ??_EPWM_LoadDutyValue:	
  1286                           ; 1 bytes @ 0x4
  1287                           
  1288  0074                     putch@txData:	
  1289                           ; 1 bytes @ 0x4
  1290                           
  1291                           
  1292                           ; 1 bytes @ 0x4
  1293  0074                     	ds	1
  1294  0075                     ?_printf:	
  1295  0075                     printf@f:	
  1296                           ; 2 bytes @ 0x5
  1297                           
  1298                           
  1299                           ; 2 bytes @ 0x5
  1300  0075                     	ds	2
  1301  0077                     ??_printf:	
  1302                           
  1303                           ; 1 bytes @ 0x7
  1304  0077                     	ds	3
  1305                           
  1306                           	psect	cstackBANK0
  1307  0038                     __pcstackBANK0:	
  1308  0038                     printf@ap:	
  1309                           
  1310                           ; 1 bytes @ 0x0
  1311  0038                     	ds	1
  1312  0039                     printf@c:	
  1313                           
  1314                           ; 1 bytes @ 0x1
  1315  0039                     	ds	1
  1316  003A                     ??_GPS_Initialize:	
  1317                           
  1318                           ; 1 bytes @ 0x2
  1319  003A                     	ds	3
  1320  003D                     GPS_Initialize@tmp:	
  1321                           
  1322                           ; 1 bytes @ 0x5
  1323  003D                     	ds	1
  1324  003E                     ??_main:	
  1325                           
  1326                           ; 1 bytes @ 0x6
  1327  003E                     	ds	3
  1328  0041                     main@up:	
  1329                           
  1330                           ; 1 bytes @ 0x9
  1331  0041                     	ds	1
  1332  0042                     main@tmp:	
  1333                           
  1334                           ; 1 bytes @ 0xA
  1335  0042                     	ds	1
  1336  0043                     main@motor_load:	
  1337                           
  1338                           ; 2 bytes @ 0xB
  1339  0043                     	ds	2
  1340                           
  1341                           	psect	maintext
  1342  002C                     __pmaintext:	
  1343 ;;
  1344 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1345 ;;
  1346 ;; *************** function _main *****************
  1347 ;; Defined at:
  1348 ;;		line 100 in file "main.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  tmp             1   10[BANK0 ] unsigned char 
  1353 ;;  motor_load      2   11[BANK0 ] unsigned int 
  1354 ;;  up              1    9[BANK0 ] unsigned char 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : B1F/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1
  1364 ;;      Params:         0       0       0
  1365 ;;      Locals:         0       4       0
  1366 ;;      Temps:          0       3       0
  1367 ;;      Totals:         0       7       0
  1368 ;;Total ram usage:        7 bytes
  1369 ;; Hardware stack levels required when called:    6
  1370 ;; This function calls:
  1371 ;;		_EPWM_LoadDutyValue
  1372 ;;		_GPS_Initialize
  1373 ;;		_SYSTEM_Initialize
  1374 ;;		_TMR2_StartTimer
  1375 ;; This function is called by:
  1376 ;;		Startup code after reset
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           
  1381                           ;psect for function _main
  1382  002C                     _main:	
  1383                           
  1384                           ;main.c: 103: SYSTEM_Initialize();
  1385                           
  1386                           ;incstack = 0
  1387                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1388  002C  21F6               	fcall	_SYSTEM_Initialize
  1389                           
  1390                           ;main.c: 109: (INTCONbits.GIE = 1);
  1391  002D  178B               	bsf	11,7	;volatile
  1392                           
  1393                           ;main.c: 112: (INTCONbits.PEIE = 1);
  1394  002E  170B               	bsf	11,6	;volatile
  1395                           
  1396                           ;main.c: 165: uint16_t motor_load = 0;
  1397  002F  0020               	movlb	0	; select bank0
  1398  0030  01C3               	clrf	main@motor_load
  1399  0031  01C4               	clrf	main@motor_load+1
  1400                           
  1401                           ;main.c: 166: EPWM_LoadDutyValue(1023);
  1402  0032  30FF               	movlw	255
  1403  0033  00F2               	movwf	EPWM_LoadDutyValue@dutyValue
  1404  0034  3003               	movlw	3
  1405  0035  00F3               	movwf	EPWM_LoadDutyValue@dutyValue+1
  1406  0036  21A6               	fcall	_EPWM_LoadDutyValue
  1407                           
  1408                           ;main.c: 167: TMR2_StartTimer();
  1409  0037  2200               	fcall	_TMR2_StartTimer
  1410                           
  1411                           ;main.c: 168: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  1412  0038  0020               	movlb	0	; select bank0
  1413  0039  01C2               	clrf	main@tmp
  1414  003A  3032               	movlw	50
  1415  003B  0242               	subwf	main@tmp,w
  1416  003C  1803               	btfsc	3,0
  1417  003D  2853               	goto	l1462
  1418  003E                     l1456:	
  1419  003E  3005               	movlw	5
  1420  003F  00C0               	movwf	??_main+2
  1421  0040  300F               	movlw	15
  1422  0041  00BF               	movwf	??_main+1
  1423  0042  30F4               	movlw	244
  1424  0043  00BE               	movwf	??_main
  1425  0044                     u767:	
  1426  0044  0BBE               	decfsz	??_main,f
  1427  0045  2844               	goto	u767
  1428  0046  0BBF               	decfsz	??_main+1,f
  1429  0047  2844               	goto	u767
  1430  0048  0BC0               	decfsz	??_main+2,f
  1431  0049  2844               	goto	u767
  1432  004A  3001               	movlw	1
  1433  004B  0020               	movlb	0	; select bank0
  1434  004C  00BE               	movwf	??_main
  1435  004D  083E               	movf	??_main,w
  1436  004E  07C2               	addwf	main@tmp,f
  1437  004F  3032               	movlw	50
  1438  0050  0242               	subwf	main@tmp,w
  1439  0051  1C03               	skipc
  1440  0052  283E               	goto	l1456
  1441  0053                     l1462:	
  1442                           
  1443                           ;main.c: 170: GPS_Initialize();
  1444  0053  20D6               	fcall	_GPS_Initialize
  1445                           
  1446                           ;main.c: 171: bool up = 1;
  1447  0054  0020               	movlb	0	; select bank0
  1448  0055  01C1               	clrf	main@up
  1449  0056  0AC1               	incf	main@up,f
  1450  0057                     l1466:	
  1451                           ;main.c: 175: while (1)
  1452                           
  1453                           
  1454                           ;main.c: 176: {
  1455                           ;main.c: 177: _delay((unsigned long)((200)*(32000000/4000.0)));
  1456  0057  3009               	movlw	9
  1457  0058  0020               	movlb	0	; select bank0
  1458  0059  00C0               	movwf	??_main+2
  1459  005A  301E               	movlw	30
  1460  005B  00BF               	movwf	??_main+1
  1461  005C  30EB               	movlw	235
  1462  005D  00BE               	movwf	??_main
  1463  005E                     u777:	
  1464  005E  0BBE               	decfsz	??_main,f
  1465  005F  285E               	goto	u777
  1466  0060  0BBF               	decfsz	??_main+1,f
  1467  0061  285E               	goto	u777
  1468  0062  0BC0               	decfsz	??_main+2,f
  1469  0063  285E               	goto	u777
  1470  0064  0000               	nop
  1471                           
  1472                           ;main.c: 178: if (up == 1)
  1473  0065  0020               	movlb	0	; select bank0
  1474  0066  0341               	decf	main@up,w
  1475  0067  1D03               	btfss	3,2
  1476  0068  286E               	goto	l1472
  1477                           
  1478                           ;main.c: 179: motor_load += 1;
  1479  0069  3001               	movlw	1
  1480  006A  07C3               	addwf	main@motor_load,f
  1481  006B  3000               	movlw	0
  1482  006C  3DC4               	addwfc	main@motor_load+1,f
  1483  006D  2872               	goto	l282
  1484  006E                     l1472:	
  1485                           
  1486                           ;main.c: 180: else
  1487                           ;main.c: 181: motor_load -= 1;
  1488  006E  3001               	movlw	1
  1489  006F  02C3               	subwf	main@motor_load,f
  1490  0070  3000               	movlw	0
  1491  0071  3BC4               	subwfb	main@motor_load+1,f
  1492  0072                     l282:	
  1493                           
  1494                           ;main.c: 182: if (motor_load > 450)
  1495  0072  3001               	movlw	1
  1496  0073  0244               	subwf	main@motor_load+1,w
  1497  0074  30C3               	movlw	195
  1498  0075  1903               	skipnz
  1499  0076  0243               	subwf	main@motor_load,w
  1500  0077  1C03               	skipc
  1501  0078  287B               	goto	l1476
  1502                           
  1503                           ;main.c: 183: up = 0;
  1504  0079  01C1               	clrf	main@up
  1505  007A  2881               	goto	l1480
  1506  007B                     l1476:	
  1507                           
  1508                           ;main.c: 184: else if (motor_load == 0)
  1509  007B  0843               	movf	main@motor_load,w
  1510  007C  0444               	iorwf	main@motor_load+1,w
  1511  007D  1D03               	btfss	3,2
  1512  007E  2881               	goto	l1480
  1513                           
  1514                           ;main.c: 185: up = 1;
  1515  007F  01C1               	clrf	main@up
  1516  0080  0AC1               	incf	main@up,f
  1517  0081                     l1480:	
  1518                           
  1519                           ;main.c: 186: EPWM_LoadDutyValue(1023-motor_load);
  1520  0081  0943               	comf	main@motor_load,w
  1521  0082  00BE               	movwf	??_main
  1522  0083  0944               	comf	main@motor_load+1,w
  1523  0084  00BF               	movwf	??_main+1
  1524  0085  0ABE               	incf	??_main,f
  1525  0086  1903               	skipnz
  1526  0087  0ABF               	incf	??_main+1,f
  1527  0088  083E               	movf	??_main,w
  1528  0089  3EFF               	addlw	255
  1529  008A  00F2               	movwf	EPWM_LoadDutyValue@dutyValue
  1530  008B  3003               	movlw	3
  1531  008C  3D3F               	addwfc	??_main+1,w
  1532  008D  00F3               	movwf	EPWM_LoadDutyValue@dutyValue+1
  1533  008E  21A6               	fcall	_EPWM_LoadDutyValue
  1534  008F  2857               	goto	l1466
  1535  0090                     __end_of_main:	
  1536                           
  1537                           	psect	text1
  1538  01F6                     __ptext1:	
  1539 ;; *************** function _SYSTEM_Initialize *****************
  1540 ;; Defined at:
  1541 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0, pclath, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMMON   BANK0   BANK1
  1555 ;;      Params:         0       0       0
  1556 ;;      Locals:         0       0       0
  1557 ;;      Temps:          0       0       0
  1558 ;;      Totals:         0       0       0
  1559 ;;Total ram usage:        0 bytes
  1560 ;; Hardware stack levels used:    1
  1561 ;; Hardware stack levels required when called:    4
  1562 ;; This function calls:
  1563 ;;		_EPWM_Initialize
  1564 ;;		_EUSART_Initialize
  1565 ;;		_OSCILLATOR_Initialize
  1566 ;;		_PIN_MANAGER_Initialize
  1567 ;;		_TMR2_Initialize
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _SYSTEM_Initialize
  1575  01F6                     _SYSTEM_Initialize:	
  1576                           
  1577                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  1578                           
  1579                           ;incstack = 0
  1580                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1581  01F6  21BD               	fcall	_PIN_MANAGER_Initialize
  1582                           
  1583                           ;mcc.c: 73: OSCILLATOR_Initialize();
  1584  01F7  21E8               	fcall	_OSCILLATOR_Initialize
  1585                           
  1586                           ;mcc.c: 74: EPWM_Initialize();
  1587  01F8  21D3               	fcall	_EPWM_Initialize
  1588                           
  1589                           ;mcc.c: 75: TMR2_Initialize();
  1590  01F9  21DF               	fcall	_TMR2_Initialize
  1591                           
  1592                           ;mcc.c: 76: EUSART_Initialize();
  1593  01FA  2155               	fcall	_EUSART_Initialize
  1594  01FB  0008               	return
  1595  01FC                     __end_of_SYSTEM_Initialize:	
  1596                           
  1597                           	psect	text2
  1598  01DF                     __ptext2:	
  1599 ;; *************** function _TMR2_Initialize *****************
  1600 ;; Defined at:
  1601 ;;		line 57 in file "mcc_generated_files/tmr2.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, status,2, status,0, pclath, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0   BANK1
  1615 ;;      Params:         0       0       0
  1616 ;;      Locals:         0       0       0
  1617 ;;      Temps:          0       0       0
  1618 ;;      Totals:         0       0       0
  1619 ;;Total ram usage:        0 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:    3
  1622 ;; This function calls:
  1623 ;;		_TMR2_StartTimer
  1624 ;; This function is called by:
  1625 ;;		_SYSTEM_Initialize
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           
  1630                           ;psect for function _TMR2_Initialize
  1631  01DF                     _TMR2_Initialize:	
  1632                           
  1633                           ;tmr2.c: 62: T2CON = 0x02;
  1634                           
  1635                           ;incstack = 0
  1636                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1637  01DF  3002               	movlw	2
  1638  01E0  0020               	movlb	0	; select bank0
  1639  01E1  009C               	movwf	28	;volatile
  1640                           
  1641                           ;tmr2.c: 65: PR2 = 0xFF;
  1642  01E2  30FF               	movlw	255
  1643  01E3  009B               	movwf	27	;volatile
  1644                           
  1645                           ;tmr2.c: 68: TMR2 = 0x00;
  1646  01E4  019A               	clrf	26	;volatile
  1647                           
  1648                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
  1649  01E5  1091               	bcf	17,1	;volatile
  1650                           
  1651                           ;tmr2.c: 74: TMR2_StartTimer();
  1652  01E6  2200               	fcall	_TMR2_StartTimer
  1653  01E7  0008               	return
  1654  01E8                     __end_of_TMR2_Initialize:	
  1655                           
  1656                           	psect	text3
  1657  0200                     __ptext3:	
  1658 ;; *************** function _TMR2_StartTimer *****************
  1659 ;; Defined at:
  1660 ;;		line 77 in file "mcc_generated_files/tmr2.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		None
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1
  1674 ;;      Params:         0       0       0
  1675 ;;      Locals:         0       0       0
  1676 ;;      Temps:          0       0       0
  1677 ;;      Totals:         0       0       0
  1678 ;;Total ram usage:        0 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    2
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_TMR2_Initialize
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           
  1690                           ;psect for function _TMR2_StartTimer
  1691  0200                     _TMR2_StartTimer:	
  1692                           
  1693                           ;tmr2.c: 80: T2CONbits.TMR2ON = 1;
  1694                           
  1695                           ;incstack = 0
  1696                           ; Regs used in _TMR2_StartTimer: []
  1697  0200  0020               	movlb	0	; select bank0
  1698  0201  151C               	bsf	28,2	;volatile
  1699  0202  0008               	return
  1700  0203                     __end_of_TMR2_StartTimer:	
  1701                           
  1702                           	psect	text4
  1703  01BD                     __ptext4:	
  1704 ;; *************** function _PIN_MANAGER_Initialize *****************
  1705 ;; Defined at:
  1706 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;		None
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;		None
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      void 
  1713 ;; Registers used:
  1714 ;;		wreg, status,2
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMMON   BANK0   BANK1
  1720 ;;      Params:         0       0       0
  1721 ;;      Locals:         0       0       0
  1722 ;;      Temps:          0       0       0
  1723 ;;      Totals:         0       0       0
  1724 ;;Total ram usage:        0 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; Hardware stack levels required when called:    2
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_SYSTEM_Initialize
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           
  1735                           ;psect for function _PIN_MANAGER_Initialize
  1736  01BD                     _PIN_MANAGER_Initialize:	
  1737                           
  1738                           ;pin_manager.c: 51: LATA = 0x0;
  1739                           
  1740                           ;incstack = 0
  1741                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1742  01BD  0022               	movlb	2	; select bank2
  1743  01BE  018C               	clrf	12	;volatile
  1744                           
  1745                           ;pin_manager.c: 52: LATC = 0x0;
  1746  01BF  018E               	clrf	14	;volatile
  1747                           
  1748                           ;pin_manager.c: 53: ANSELA = 0x17;
  1749  01C0  3017               	movlw	23
  1750  01C1  0023               	movlb	3	; select bank3
  1751  01C2  008C               	movwf	12	;volatile
  1752                           
  1753                           ;pin_manager.c: 54: ANSELC = 0xF;
  1754  01C3  300F               	movlw	15
  1755  01C4  008E               	movwf	14	;volatile
  1756                           
  1757                           ;pin_manager.c: 55: WPUA = 0x3F;
  1758  01C5  303F               	movlw	63
  1759  01C6  0024               	movlb	4	; select bank4
  1760  01C7  008C               	movwf	12	;volatile
  1761                           
  1762                           ;pin_manager.c: 56: WPUC = 0x3F;
  1763  01C8  303F               	movlw	63
  1764  01C9  008E               	movwf	14	;volatile
  1765                           
  1766                           ;pin_manager.c: 57: TRISC = 0x37;
  1767  01CA  3037               	movlw	55
  1768  01CB  0021               	movlb	1	; select bank1
  1769  01CC  008E               	movwf	14	;volatile
  1770                           
  1771                           ;pin_manager.c: 58: TRISA = 0x1F;
  1772  01CD  301F               	movlw	31
  1773  01CE  008C               	movwf	12	;volatile
  1774                           
  1775                           ;pin_manager.c: 60: OPTION_REGbits.nWPUEN = 0x0;
  1776  01CF  1395               	bcf	21,7	;volatile
  1777                           
  1778                           ;pin_manager.c: 61: APFCON = 0x00;
  1779  01D0  0022               	movlb	2	; select bank2
  1780  01D1  019D               	clrf	29	;volatile
  1781  01D2  0008               	return
  1782  01D3                     __end_of_PIN_MANAGER_Initialize:	
  1783                           
  1784                           	psect	text5
  1785  01E8                     __ptext5:	
  1786 ;; *************** function _OSCILLATOR_Initialize *****************
  1787 ;; Defined at:
  1788 ;;		line 79 in file "mcc_generated_files/mcc.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;		None
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;		None
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMMON   BANK0   BANK1
  1802 ;;      Params:         0       0       0
  1803 ;;      Locals:         0       0       0
  1804 ;;      Temps:          0       0       0
  1805 ;;      Totals:         0       0       0
  1806 ;;Total ram usage:        0 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    2
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_SYSTEM_Initialize
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           
  1817                           ;psect for function _OSCILLATOR_Initialize
  1818  01E8                     _OSCILLATOR_Initialize:	
  1819                           
  1820                           ;mcc.c: 82: OSCCON = 0x70;
  1821                           
  1822                           ;incstack = 0
  1823                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1824  01E8  3070               	movlw	112
  1825  01E9  0021               	movlb	1	; select bank1
  1826  01EA  0099               	movwf	25	;volatile
  1827                           
  1828                           ;mcc.c: 84: OSCSTAT = 0x00;
  1829  01EB  019A               	clrf	26	;volatile
  1830                           
  1831                           ;mcc.c: 86: OSCTUNE = 0x00;
  1832  01EC  0198               	clrf	24	;volatile
  1833  01ED                     l216:	
  1834                           ;mcc.c: 91: {
  1835                           
  1836                           ;mcc.c: 90: while(PLLR == 0)
  1837                           
  1838  01ED  1B1A               	btfsc	26,6	;volatile
  1839  01EE  0008               	return
  1840  01EF  29ED               	goto	l216
  1841  01F0                     __end_of_OSCILLATOR_Initialize:	
  1842                           
  1843                           	psect	text6
  1844  0155                     __ptext6:	
  1845 ;; *************** function _EUSART_Initialize *****************
  1846 ;; Defined at:
  1847 ;;		line 75 in file "mcc_generated_files/eusart.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1
  1861 ;;      Params:         0       0       0
  1862 ;;      Locals:         0       0       0
  1863 ;;      Temps:          1       0       0
  1864 ;;      Totals:         1       0       0
  1865 ;;Total ram usage:        1 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    2
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_SYSTEM_Initialize
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           
  1876                           ;psect for function _EUSART_Initialize
  1877  0155                     _EUSART_Initialize:	
  1878                           
  1879                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  1880                           
  1881                           ;incstack = 0
  1882                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  1883  0155  0021               	movlb	1	; select bank1
  1884  0156  1291               	bcf	17,5	;volatile
  1885                           
  1886                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  1887  0157  1211               	bcf	17,4	;volatile
  1888                           
  1889                           ;eusart.c: 84: BAUDCON = 0x08;
  1890  0158  3008               	movlw	8
  1891  0159  0023               	movlb	3	; select bank3
  1892  015A  009F               	movwf	31	;volatile
  1893                           
  1894                           ;eusart.c: 87: RCSTA = 0x90;
  1895  015B  3090               	movlw	144
  1896  015C  009D               	movwf	29	;volatile
  1897                           
  1898                           ;eusart.c: 90: TXSTA = 0x24;
  1899  015D  3024               	movlw	36
  1900  015E  009E               	movwf	30	;volatile
  1901                           
  1902                           ;eusart.c: 93: SPBRGL = 0x40;
  1903  015F  3040               	movlw	64
  1904  0160  009B               	movwf	27	;volatile
  1905                           
  1906                           ;eusart.c: 96: SPBRGH = 0x03;
  1907  0161  3003               	movlw	3
  1908  0162  009C               	movwf	28	;volatile
  1909                           
  1910                           ;eusart.c: 100: eusartTxHead = 0;
  1911  0163  0020               	movlb	0	; select bank0
  1912  0164  01B5               	clrf	_eusartTxHead
  1913                           
  1914                           ;eusart.c: 101: eusartTxTail = 0;
  1915  0165  01B6               	clrf	_eusartTxTail
  1916                           
  1917                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  1918  0166  3008               	movlw	8
  1919  0167  00F2               	movwf	??_EUSART_Initialize
  1920  0168  0872               	movf	??_EUSART_Initialize,w
  1921  0169  00FB               	movwf	_eusartTxBufferRemaining	;volatile
  1922                           
  1923                           ;eusart.c: 104: eusartRxHead = 0;
  1924  016A  01B3               	clrf	_eusartRxHead
  1925                           
  1926                           ;eusart.c: 105: eusartRxTail = 0;
  1927  016B  01B4               	clrf	_eusartRxTail
  1928                           
  1929                           ;eusart.c: 106: eusartRxCount = 0;
  1930  016C  01FA               	clrf	_eusartRxCount	;volatile
  1931                           
  1932                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  1933  016D  0021               	movlb	1	; select bank1
  1934  016E  1691               	bsf	17,5	;volatile
  1935  016F  0008               	return
  1936  0170                     __end_of_EUSART_Initialize:	
  1937                           
  1938                           	psect	text7
  1939  01D3                     __ptext7:	
  1940 ;; *************** function _EPWM_Initialize *****************
  1941 ;; Defined at:
  1942 ;;		line 63 in file "mcc_generated_files/epwm.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1
  1956 ;;      Params:         0       0       0
  1957 ;;      Locals:         0       0       0
  1958 ;;      Temps:          0       0       0
  1959 ;;      Totals:         0       0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    2
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_SYSTEM_Initialize
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function _EPWM_Initialize
  1972  01D3                     _EPWM_Initialize:	
  1973                           
  1974                           ;epwm.c: 68: CCP1CON = 0x3C;
  1975                           
  1976                           ;incstack = 0
  1977                           ; Regs used in _EPWM_Initialize: [wreg+status,2]
  1978  01D3  303C               	movlw	60
  1979  01D4  0025               	movlb	5	; select bank5
  1980  01D5  0093               	movwf	19	;volatile
  1981                           
  1982                           ;epwm.c: 71: ECCP1AS = 0x00;
  1983  01D6  0195               	clrf	21	;volatile
  1984                           
  1985                           ;epwm.c: 74: PWM1CON = 0x80;
  1986  01D7  3080               	movlw	128
  1987  01D8  0094               	movwf	20	;volatile
  1988                           
  1989                           ;epwm.c: 77: PSTR1CON = 0x04;
  1990  01D9  3004               	movlw	4
  1991  01DA  0096               	movwf	22	;volatile
  1992                           
  1993                           ;epwm.c: 80: CCPR1L = 0x7F;
  1994  01DB  307F               	movlw	127
  1995  01DC  0091               	movwf	17	;volatile
  1996                           
  1997                           ;epwm.c: 83: CCPR1H = 0x00;
  1998  01DD  0192               	clrf	18	;volatile
  1999  01DE  0008               	return
  2000  01DF                     __end_of_EPWM_Initialize:	
  2001                           
  2002                           	psect	text8
  2003  00D6                     __ptext8:	
  2004 ;; *************** function _GPS_Initialize *****************
  2005 ;; Defined at:
  2006 ;;		line 64 in file "main.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  tmp             1    5[BANK0 ] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1
  2020 ;;      Params:         0       0       0
  2021 ;;      Locals:         0       1       0
  2022 ;;      Temps:          0       3       0
  2023 ;;      Totals:         0       4       0
  2024 ;;Total ram usage:        4 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    5
  2027 ;; This function calls:
  2028 ;;		_printf
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function _GPS_Initialize
  2036  00D6                     _GPS_Initialize:	
  2037                           
  2038                           ;main.c: 66: for(unsigned char tmp=0;tmp<(10*1);tmp++){_delay((unsigned long)((100)*(320
      +                          00000/4000.0)));};
  2039                           
  2040                           ;incstack = 0
  2041                           ; Regs used in _GPS_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2042  00D6  0020               	movlb	0	; select bank0
  2043  00D7  01BD               	clrf	GPS_Initialize@tmp
  2044  00D8  300A               	movlw	10
  2045  00D9  023D               	subwf	GPS_Initialize@tmp,w
  2046  00DA  1803               	btfsc	3,0
  2047  00DB  28F1               	goto	l1432
  2048  00DC                     l1426:	
  2049  00DC  3005               	movlw	5
  2050  00DD  00BC               	movwf	??_GPS_Initialize+2
  2051  00DE  300F               	movlw	15
  2052  00DF  00BB               	movwf	??_GPS_Initialize+1
  2053  00E0  30F4               	movlw	244
  2054  00E1  00BA               	movwf	??_GPS_Initialize
  2055  00E2                     u787:	
  2056  00E2  0BBA               	decfsz	??_GPS_Initialize,f
  2057  00E3  28E2               	goto	u787
  2058  00E4  0BBB               	decfsz	??_GPS_Initialize+1,f
  2059  00E5  28E2               	goto	u787
  2060  00E6  0BBC               	decfsz	??_GPS_Initialize+2,f
  2061  00E7  28E2               	goto	u787
  2062  00E8  3001               	movlw	1
  2063  00E9  0020               	movlb	0	; select bank0
  2064  00EA  00BA               	movwf	??_GPS_Initialize
  2065  00EB  083A               	movf	??_GPS_Initialize,w
  2066  00EC  07BD               	addwf	GPS_Initialize@tmp,f
  2067  00ED  300A               	movlw	10
  2068  00EE  023D               	subwf	GPS_Initialize@tmp,w
  2069  00EF  1C03               	skipc
  2070  00F0  28DC               	goto	l1426
  2071  00F1                     l1432:	
  2072                           
  2073                           ;main.c: 68: printf("$PMTK314,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0*29\r\n");
  2074  00F1  3090               	movlw	low (STR_1| (0+32768))
  2075  00F2  00F5               	movwf	printf@f
  2076  00F3  3080               	movlw	high (STR_1| (0+32768))
  2077  00F4  00F6               	movwf	printf@f+1
  2078  00F5  2170               	fcall	_printf
  2079                           
  2080                           ;main.c: 69: _delay((unsigned long)((100)*(32000000/4000.0)));
  2081  00F6  3005               	movlw	5
  2082  00F7  0020               	movlb	0	; select bank0
  2083  00F8  00BC               	movwf	??_GPS_Initialize+2
  2084  00F9  300F               	movlw	15
  2085  00FA  00BB               	movwf	??_GPS_Initialize+1
  2086  00FB  30F4               	movlw	244
  2087  00FC  00BA               	movwf	??_GPS_Initialize
  2088  00FD                     u797:	
  2089  00FD  0BBA               	decfsz	??_GPS_Initialize,f
  2090  00FE  28FD               	goto	u797
  2091  00FF  0BBB               	decfsz	??_GPS_Initialize+1,f
  2092  0100  28FD               	goto	u797
  2093  0101  0BBC               	decfsz	??_GPS_Initialize+2,f
  2094  0102  28FD               	goto	u797
  2095                           
  2096                           ;main.c: 70: printf("$PMTK220,100*2F\r\n");
  2097  0103  30C4               	movlw	low (STR_2| (0+32768))
  2098  0104  00F5               	movwf	printf@f
  2099  0105  3080               	movlw	high (STR_2| (0+32768))
  2100  0106  00F6               	movwf	printf@f+1
  2101  0107  2170               	fcall	_printf
  2102                           
  2103                           ;main.c: 71: _delay((unsigned long)((100)*(32000000/4000.0)));
  2104  0108  3005               	movlw	5
  2105  0109  0020               	movlb	0	; select bank0
  2106  010A  00BC               	movwf	??_GPS_Initialize+2
  2107  010B  300F               	movlw	15
  2108  010C  00BB               	movwf	??_GPS_Initialize+1
  2109  010D  30F4               	movlw	244
  2110  010E  00BA               	movwf	??_GPS_Initialize
  2111  010F                     u807:	
  2112  010F  0BBA               	decfsz	??_GPS_Initialize,f
  2113  0110  290F               	goto	u807
  2114  0111  0BBB               	decfsz	??_GPS_Initialize+1,f
  2115  0112  290F               	goto	u807
  2116  0113  0BBC               	decfsz	??_GPS_Initialize+2,f
  2117  0114  290F               	goto	u807
  2118  0115  0008               	return
  2119  0116                     __end_of_GPS_Initialize:	
  2120                           
  2121                           	psect	text9
  2122  0170                     __ptext9:	
  2123 ;; *************** function _printf *****************
  2124 ;; Defined at:
  2125 ;;		line 464 in file "D:\Program Files\Microchip\xc8\v1.38\sources\common\doprnt.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  f               2    5[COMMON] PTR const unsigned char 
  2128 ;;		 -> STR_2(18), STR_1(52), 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  tmpval          4    0        struct .
  2131 ;;  cp              2    0        PTR const unsigned char 
  2132 ;;  len             2    0        unsigned int 
  2133 ;;  val             2    0        unsigned int 
  2134 ;;  c               1    1[BANK0 ] char 
  2135 ;;  ap              1    0[BANK0 ] PTR void [1]
  2136 ;;		 -> ?_printf(2), 
  2137 ;;  flag            1    0        unsigned char 
  2138 ;;  prec            1    0        char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  2    5[COMMON] int 
  2141 ;; Registers used:
  2142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1
  2148 ;;      Params:         2       0       0
  2149 ;;      Locals:         0       2       0
  2150 ;;      Temps:          3       0       0
  2151 ;;      Totals:         5       2       0
  2152 ;;Total ram usage:        7 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:    4
  2155 ;; This function calls:
  2156 ;;		_putch
  2157 ;; This function is called by:
  2158 ;;		_GPS_Initialize
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           
  2163                           ;psect for function _printf
  2164  0170                     _printf:	
  2165                           
  2166                           ;doprnt.c: 466: va_list ap;
  2167                           ;doprnt.c: 499: signed char c;
  2168                           ;doprnt.c: 506: signed char prec;
  2169                           ;doprnt.c: 508: unsigned char flag;
  2170                           ;doprnt.c: 523: union {
  2171                           ;doprnt.c: 524: unsigned long vd;
  2172                           ;doprnt.c: 525: double integ;
  2173                           ;doprnt.c: 526: } tmpval;
  2174                           ;doprnt.c: 528: unsigned int val;
  2175                           ;doprnt.c: 529: unsigned len;
  2176                           ;doprnt.c: 530: const char * cp;
  2177                           ;doprnt.c: 533: *ap = __va_start();
  2178                           
  2179                           ;incstack = 0
  2180                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2181  0170  3077               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2182  0171  00F7               	movwf	??_printf
  2183  0172  0877               	movf	??_printf,w
  2184  0173  0020               	movlb	0	; select bank0
  2185  0174  00B8               	movwf	printf@ap
  2186  0175                     l1418:	
  2187                           ;doprnt.c: 543: }
  2188                           ;doprnt.c: 1422: {
  2189                           
  2190                           ;doprnt.c: 542: continue;
  2191                           
  2192                           ;doprnt.c: 536: while(c = *f++) {
  2193                           
  2194  0175  0876               	movf	printf@f+1,w
  2195  0176  00F8               	movwf	??_printf+1
  2196  0177  0875               	movf	printf@f,w
  2197  0178  00F7               	movwf	??_printf
  2198  0179  0AF5               	incf	printf@f,f
  2199  017A  1903               	skipnz
  2200  017B  0AF6               	incf	printf@f+1,f
  2201  017C  0877               	movf	??_printf,w
  2202  017D  0084               	movwf	4
  2203  017E  0878               	movf	??_printf+1,w
  2204  017F  0085               	movwf	5
  2205  0180  0800               	movf	0,w	;code access
  2206  0181  00F9               	movwf	??_printf+2
  2207  0182  0879               	movf	??_printf+2,w
  2208  0183  0020               	movlb	0	; select bank0
  2209  0184  00B9               	movwf	printf@c
  2210  0185  0839               	movf	printf@c,w
  2211  0186  1903               	btfsc	3,2
  2212  0187  0008               	return
  2213                           
  2214                           ;doprnt.c: 540: {
  2215                           ;doprnt.c: 541: (putch(c) );
  2216  0188  0839               	movf	printf@c,w
  2217  0189  21FC               	fcall	_putch
  2218  018A  2975               	goto	l1418
  2219  018B                     __end_of_printf:	
  2220                           ;doprnt.c: 1469: }
  2221                           ;doprnt.c: 1533: }
  2222                           ;doprnt.c: 1540: return 0;
  2223                           ;	Return value of _printf is never used
  2224                           
  2225                           
  2226                           	psect	text10
  2227  01FC                     __ptext10:	
  2228 ;; *************** function _putch *****************
  2229 ;; Defined at:
  2230 ;;		line 164 in file "mcc_generated_files/eusart.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;  txData          1    wreg     unsigned char 
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  txData          1    4[COMMON] unsigned char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1
  2244 ;;      Params:         0       0       0
  2245 ;;      Locals:         1       0       0
  2246 ;;      Temps:          0       0       0
  2247 ;;      Totals:         1       0       0
  2248 ;;Total ram usage:        1 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:    3
  2251 ;; This function calls:
  2252 ;;		_EUSART_Write
  2253 ;; This function is called by:
  2254 ;;		_printf
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           
  2259                           ;psect for function _putch
  2260  01FC                     _putch:	
  2261                           
  2262                           ;incstack = 0
  2263                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2264                           ;putch@txData stored from wreg
  2265  01FC  00F4               	movwf	putch@txData
  2266                           
  2267                           ;eusart.c: 166: EUSART_Write(txData);
  2268  01FD  0874               	movf	putch@txData,w
  2269  01FE  2116               	fcall	_EUSART_Write
  2270  01FF  0008               	return
  2271  0200                     __end_of_putch:	
  2272                           
  2273                           	psect	text11
  2274  0116                     __ptext11:	
  2275 ;; *************** function _EUSART_Write *****************
  2276 ;; Defined at:
  2277 ;;		line 136 in file "mcc_generated_files/eusart.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  txData          1    wreg     unsigned char 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  txData          1    3[COMMON] unsigned char 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1
  2291 ;;      Params:         0       0       0
  2292 ;;      Locals:         1       0       0
  2293 ;;      Temps:          1       0       0
  2294 ;;      Totals:         2       0       0
  2295 ;;Total ram usage:        2 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    2
  2298 ;; This function calls:
  2299 ;;		Nothing
  2300 ;; This function is called by:
  2301 ;;		_putch
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           
  2306                           ;psect for function _EUSART_Write
  2307  0116                     _EUSART_Write:	
  2308                           
  2309                           ;incstack = 0
  2310                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  2311                           ;EUSART_Write@txData stored from wreg
  2312  0116  00F3               	movwf	EUSART_Write@txData
  2313  0117                     l1396:	
  2314                           ;eusart.c: 139: {
  2315                           
  2316                           ;eusart.c: 138: while(0 == eusartTxBufferRemaining)
  2317                           
  2318  0117  087B               	movf	_eusartTxBufferRemaining,w	;volatile
  2319  0118  1903               	btfsc	3,2
  2320  0119  2917               	goto	l1396
  2321                           
  2322                           ;eusart.c: 140: }
  2323                           ;eusart.c: 142: if(0 == PIE1bits.TXIE)
  2324  011A  0021               	movlb	1	; select bank1
  2325  011B  1A11               	btfsc	17,4	;volatile
  2326  011C  2921               	goto	l131
  2327                           
  2328                           ;eusart.c: 143: {
  2329                           ;eusart.c: 144: TXREG = txData;
  2330  011D  0873               	movf	EUSART_Write@txData,w
  2331  011E  0023               	movlb	3	; select bank3
  2332  011F  009A               	movwf	26	;volatile
  2333                           
  2334                           ;eusart.c: 145: }
  2335  0120  2935               	goto	l1410
  2336  0121                     l131:	
  2337                           
  2338                           ;eusart.c: 146: else
  2339                           ;eusart.c: 147: {
  2340                           ;eusart.c: 148: PIE1bits.TXIE = 0;
  2341  0121  1211               	bcf	17,4	;volatile
  2342                           
  2343                           ;eusart.c: 149: eusartTxBuffer[eusartTxHead++] = txData;
  2344  0122  0873               	movf	EUSART_Write@txData,w
  2345  0123  00F2               	movwf	??_EUSART_Write
  2346  0124  0020               	movlb	0	; select bank0
  2347  0125  0835               	movf	_eusartTxHead,w
  2348  0126  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2349  0127  0086               	movwf	6
  2350  0128  0187               	clrf	7
  2351  0129  0872               	movf	??_EUSART_Write,w
  2352  012A  0081               	movwf	1
  2353  012B  3001               	movlw	1
  2354  012C  00F2               	movwf	??_EUSART_Write
  2355  012D  0872               	movf	??_EUSART_Write,w
  2356  012E  07B5               	addwf	_eusartTxHead,f
  2357                           
  2358                           ;eusart.c: 150: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  2359  012F  3008               	movlw	8
  2360  0130  0235               	subwf	_eusartTxHead,w
  2361  0131  1803               	btfsc	3,0
  2362                           
  2363                           ;eusart.c: 151: {
  2364                           ;eusart.c: 152: eusartTxHead = 0;
  2365  0132  01B5               	clrf	_eusartTxHead
  2366                           
  2367                           ;eusart.c: 153: }
  2368                           ;eusart.c: 154: eusartTxBufferRemaining--;
  2369  0133  3001               	movlw	1
  2370  0134  02FB               	subwf	_eusartTxBufferRemaining,f	;volatile
  2371  0135                     l1410:	
  2372                           
  2373                           ;eusart.c: 155: }
  2374                           ;eusart.c: 156: PIE1bits.TXIE = 1;
  2375  0135  0021               	movlb	1	; select bank1
  2376  0136  1611               	bsf	17,4	;volatile
  2377  0137  0008               	return
  2378  0138                     __end_of_EUSART_Write:	
  2379                           
  2380                           	psect	text12
  2381  01A6                     __ptext12:	
  2382 ;; *************** function _EPWM_LoadDutyValue *****************
  2383 ;; Defined at:
  2384 ;;		line 87 in file "mcc_generated_files/epwm.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  dutyValue       2    2[COMMON] unsigned int 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMMON   BANK0   BANK1
  2398 ;;      Params:         2       0       0
  2399 ;;      Locals:         0       0       0
  2400 ;;      Temps:          2       0       0
  2401 ;;      Totals:         4       0       0
  2402 ;;Total ram usage:        4 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    2
  2405 ;; This function calls:
  2406 ;;		Nothing
  2407 ;; This function is called by:
  2408 ;;		_main
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           
  2413                           ;psect for function _EPWM_LoadDutyValue
  2414  01A6                     _EPWM_LoadDutyValue:	
  2415                           
  2416                           ;epwm.c: 90: CCPR1L = ((dutyValue & 0x03FC)>>2);
  2417                           
  2418                           ;incstack = 0
  2419                           ; Regs used in _EPWM_LoadDutyValue: [wreg+status,2+status,0]
  2420  01A6  0873               	movf	EPWM_LoadDutyValue@dutyValue+1,w
  2421  01A7  00F5               	movwf	??_EPWM_LoadDutyValue+1
  2422  01A8  0872               	movf	EPWM_LoadDutyValue@dutyValue,w
  2423  01A9  00F4               	movwf	??_EPWM_LoadDutyValue
  2424  01AA  36F5               	lsrf	??_EPWM_LoadDutyValue+1,f
  2425  01AB  0CF4               	rrf	??_EPWM_LoadDutyValue,f
  2426  01AC  36F5               	lsrf	??_EPWM_LoadDutyValue+1,f
  2427  01AD  0CF4               	rrf	??_EPWM_LoadDutyValue,f
  2428  01AE  0874               	movf	??_EPWM_LoadDutyValue,w
  2429  01AF  0025               	movlb	5	; select bank5
  2430  01B0  0091               	movwf	17	;volatile
  2431                           
  2432                           ;epwm.c: 93: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  2433  01B1  0872               	movf	EPWM_LoadDutyValue@dutyValue,w
  2434  01B2  3903               	andlw	3
  2435  01B3  00F4               	movwf	??_EPWM_LoadDutyValue
  2436  01B4  3004               	movlw	4
  2437  01B5                     u485:	
  2438  01B5  35F4               	lslf	??_EPWM_LoadDutyValue,f
  2439  01B6  0B89               	decfsz	9,f
  2440  01B7  29B5               	goto	u485
  2441  01B8  0813               	movf	19,w	;volatile
  2442  01B9  39CF               	andlw	207
  2443  01BA  0474               	iorwf	??_EPWM_LoadDutyValue,w
  2444  01BB  0093               	movwf	19	;volatile
  2445  01BC  0008               	return
  2446  01BD                     __end_of_EPWM_LoadDutyValue:	
  2447                           
  2448                           	psect	intentry
  2449  0004                     __pintentry:	
  2450 ;; *************** function _INTERRUPT_InterruptManager *****************
  2451 ;; Defined at:
  2452 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;		None
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;		None
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1
  2466 ;;      Params:         0       0       0
  2467 ;;      Locals:         0       0       0
  2468 ;;      Temps:          1       0       0
  2469 ;;      Totals:         1       0       0
  2470 ;;Total ram usage:        1 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    1
  2473 ;; This function calls:
  2474 ;;		_EUSART_Receive_ISR
  2475 ;;		_EUSART_Transmit_ISR
  2476 ;; This function is called by:
  2477 ;;		Interrupt level 1
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481  0004                     _INTERRUPT_InterruptManager:	
  2482                           
  2483                           ;incstack = 0
  2484  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2485                           
  2486                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2487  0005  3180               	pagesel	$
  2488  0006  0020               	movlb	0	; select bank0
  2489  0007  087F               	movf	127,w
  2490  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  2491                           
  2492                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits.TXIF
      +                           == 1)
  2493  0009  1F0B               	btfss	11,6	;volatile
  2494  000A  2812               	goto	i1l1328
  2495  000B  0021               	movlb	1	; select bank1
  2496  000C  1E11               	btfss	17,4	;volatile
  2497  000D  2812               	goto	i1l1328
  2498  000E  0020               	movlb	0	; select bank0
  2499  000F  1E11               	btfss	17,4	;volatile
  2500  0010  2812               	goto	i1l1328
  2501                           
  2502                           ;interrupt_manager.c: 55: {
  2503                           ;interrupt_manager.c: 56: EUSART_Transmit_ISR();
  2504  0011  2138               	fcall	_EUSART_Transmit_ISR
  2505  0012                     i1l1328:	
  2506                           
  2507                           ;interrupt_manager.c: 57: }
  2508                           ;interrupt_manager.c: 58: if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits.RCIF
      +                           == 1)
  2509  0012  1F0B               	btfss	11,6	;volatile
  2510  0013  281B               	goto	i1l235
  2511  0014  0021               	movlb	1	; select bank1
  2512  0015  1E91               	btfss	17,5	;volatile
  2513  0016  281B               	goto	i1l235
  2514  0017  0020               	movlb	0	; select bank0
  2515  0018  1E91               	btfss	17,5	;volatile
  2516  0019  281B               	goto	i1l235
  2517                           
  2518                           ;interrupt_manager.c: 59: {
  2519                           ;interrupt_manager.c: 60: EUSART_Receive_ISR();
  2520  001A  218B               	fcall	_EUSART_Receive_ISR
  2521  001B                     i1l235:	
  2522                           ;interrupt_manager.c: 62: else
  2523                           ;interrupt_manager.c: 63: {
  2524                           
  2525                           ;interrupt_manager.c: 61: }
  2526                           
  2527  001B  0871               	movf	??_INTERRUPT_InterruptManager,w
  2528  001C  0020               	movlb	0	; select bank0
  2529  001D  00FF               	movwf	127
  2530  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2531  001F  0009               	retfie
  2532  0020                     __end_of_INTERRUPT_InterruptManager:	
  2533                           
  2534                           	psect	text14
  2535  0138                     __ptext14:	
  2536 ;; *************** function _EUSART_Transmit_ISR *****************
  2537 ;; Defined at:
  2538 ;;		line 169 in file "mcc_generated_files/eusart.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMMON   BANK0   BANK1
  2552 ;;      Params:         0       0       0
  2553 ;;      Locals:         0       0       0
  2554 ;;      Temps:          1       0       0
  2555 ;;      Totals:         1       0       0
  2556 ;;Total ram usage:        1 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; This function calls:
  2559 ;;		Nothing
  2560 ;; This function is called by:
  2561 ;;		_INTERRUPT_InterruptManager
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           
  2566                           ;psect for function _EUSART_Transmit_ISR
  2567  0138                     _EUSART_Transmit_ISR:	
  2568                           
  2569                           ;eusart.c: 173: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  2570                           
  2571                           ;incstack = 0
  2572                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2573  0138  3008               	movlw	8
  2574  0139  027B               	subwf	_eusartTxBufferRemaining,w	;volatile
  2575  013A  1803               	skipnc
  2576  013B  2952               	goto	i1l143
  2577                           
  2578                           ;eusart.c: 174: {
  2579                           ;eusart.c: 175: TXREG = eusartTxBuffer[eusartTxTail++];
  2580  013C  0020               	movlb	0	; select bank0
  2581  013D  0836               	movf	_eusartTxTail,w
  2582  013E  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2583  013F  0086               	movwf	6
  2584  0140  0187               	clrf	7
  2585  0141  0801               	movf	1,w
  2586  0142  0023               	movlb	3	; select bank3
  2587  0143  009A               	movwf	26	;volatile
  2588  0144  3001               	movlw	1
  2589  0145  00F0               	movwf	??_EUSART_Transmit_ISR
  2590  0146  0870               	movf	??_EUSART_Transmit_ISR,w
  2591  0147  0020               	movlb	0	; select bank0
  2592  0148  07B6               	addwf	_eusartTxTail,f
  2593                           
  2594                           ;eusart.c: 176: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  2595  0149  3008               	movlw	8
  2596  014A  0236               	subwf	_eusartTxTail,w
  2597  014B  1803               	btfsc	3,0
  2598                           
  2599                           ;eusart.c: 177: {
  2600                           ;eusart.c: 178: eusartTxTail = 0;
  2601  014C  01B6               	clrf	_eusartTxTail
  2602                           
  2603                           ;eusart.c: 179: }
  2604                           ;eusart.c: 180: eusartTxBufferRemaining++;
  2605  014D  3001               	movlw	1
  2606  014E  00F0               	movwf	??_EUSART_Transmit_ISR
  2607  014F  0870               	movf	??_EUSART_Transmit_ISR,w
  2608  0150  07FB               	addwf	_eusartTxBufferRemaining,f	;volatile
  2609                           
  2610                           ;eusart.c: 181: }
  2611  0151  0008               	return
  2612  0152                     i1l143:	
  2613                           
  2614                           ;eusart.c: 182: else
  2615                           ;eusart.c: 183: {
  2616                           ;eusart.c: 184: PIE1bits.TXIE = 0;
  2617  0152  0021               	movlb	1	; select bank1
  2618  0153  1211               	bcf	17,4	;volatile
  2619  0154  0008               	return
  2620  0155                     __end_of_EUSART_Transmit_ISR:	
  2621                           
  2622                           	psect	text15
  2623  018B                     __ptext15:	
  2624 ;; *************** function _EUSART_Receive_ISR *****************
  2625 ;; Defined at:
  2626 ;;		line 188 in file "mcc_generated_files/eusart.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1
  2640 ;;      Params:         0       0       0
  2641 ;;      Locals:         0       0       0
  2642 ;;      Temps:          1       0       0
  2643 ;;      Totals:         1       0       0
  2644 ;;Total ram usage:        1 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; This function calls:
  2647 ;;		Nothing
  2648 ;; This function is called by:
  2649 ;;		_INTERRUPT_InterruptManager
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           
  2654                           ;psect for function _EUSART_Receive_ISR
  2655  018B                     _EUSART_Receive_ISR:	
  2656                           
  2657                           ;eusart.c: 191: if(1 == RCSTAbits.OERR)
  2658                           
  2659                           ;incstack = 0
  2660                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2661  018B  0023               	movlb	3	; select bank3
  2662  018C  1C9D               	btfss	29,1	;volatile
  2663  018D  2990               	goto	i1l1284
  2664                           
  2665                           ;eusart.c: 192: {
  2666                           ;eusart.c: 195: RCSTAbits.SPEN = 0;
  2667  018E  139D               	bcf	29,7	;volatile
  2668                           
  2669                           ;eusart.c: 196: RCSTAbits.SPEN = 1;
  2670  018F  179D               	bsf	29,7	;volatile
  2671  0190                     i1l1284:	
  2672                           
  2673                           ;eusart.c: 197: }
  2674                           ;eusart.c: 200: eusartRxBuffer[eusartRxHead++] = RCREG;
  2675  0190  0819               	movf	25,w	;volatile
  2676  0191  00F0               	movwf	??_EUSART_Receive_ISR
  2677  0192  0020               	movlb	0	; select bank0
  2678  0193  0833               	movf	_eusartRxHead,w
  2679  0194  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  2680  0195  0086               	movwf	6
  2681  0196  0187               	clrf	7
  2682  0197  0870               	movf	??_EUSART_Receive_ISR,w
  2683  0198  0081               	movwf	1
  2684  0199  3001               	movlw	1
  2685  019A  00F0               	movwf	??_EUSART_Receive_ISR
  2686  019B  0870               	movf	??_EUSART_Receive_ISR,w
  2687  019C  07B3               	addwf	_eusartRxHead,f
  2688                           
  2689                           ;eusart.c: 201: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  2690  019D  3008               	movlw	8
  2691  019E  0233               	subwf	_eusartRxHead,w
  2692  019F  1803               	btfsc	3,0
  2693                           
  2694                           ;eusart.c: 202: {
  2695                           ;eusart.c: 203: eusartRxHead = 0;
  2696  01A0  01B3               	clrf	_eusartRxHead
  2697                           
  2698                           ;eusart.c: 204: }
  2699                           ;eusart.c: 205: eusartRxCount++;
  2700  01A1  3001               	movlw	1
  2701  01A2  00F0               	movwf	??_EUSART_Receive_ISR
  2702  01A3  0870               	movf	??_EUSART_Receive_ISR,w
  2703  01A4  07FA               	addwf	_eusartRxCount,f	;volatile
  2704  01A5  0008               	return
  2705  01A6                     __end_of_EUSART_Receive_ISR:	
  2706  007E                     btemp	set	126	;btemp
  2707  007E                     int$flags	set	126
  2708  007E                     wtemp	set	126
  2709  007E                     wtemp0	set	126
  2710  0080                     wtemp1	set	128
  2711  0082                     wtemp2	set	130
  2712  0084                     wtemp3	set	132
  2713  0086                     wtemp4	set	134
  2714  0088                     wtemp5	set	136
  2715  007F                     wtemp6	set	127
  2716  007E                     ttemp	set	126
  2717  007E                     ttemp0	set	126
  2718  0081                     ttemp1	set	129
  2719  0084                     ttemp2	set	132
  2720  0087                     ttemp3	set	135
  2721  007F                     ttemp4	set	127
  2722  007E                     ltemp	set	126
  2723  007E                     ltemp0	set	126
  2724  0082                     ltemp1	set	130
  2725  0086                     ltemp2	set	134
  2726  0080                     ltemp3	set	128


Data Sizes:
    Strings     70
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     13      37
    BANK1            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_2(CODE[18]), STR_1(CODE[52]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_EUSART_Initialize
    _GPS_Initialize->_printf
    _printf->_putch
    _putch->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_GPS_Initialize
    _GPS_Initialize->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     765
                                              6 BANK0      7     7      0
                 _EPWM_LoadDutyValue
                     _GPS_Initialize
                  _SYSTEM_Initialize
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _EPWM_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EPWM_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPS_Initialize                                       4     4      0     383
                                              2 BANK0      4     4      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              19    17      2     315
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      93
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _EPWM_LoadDutyValue                                   4     2      2     172
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (6) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM_LoadDutyValue
   _GPS_Initialize
     _printf
       _putch
         _EUSART_Write
   _SYSTEM_Initialize
     _EPWM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   _TMR2_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              60      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      31       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      D      25       6       46.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            10      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      31       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Sep 13 08:18:14 2016

                        __CFG_CP$OFF 0000                                  l131 0121  
                                l216 01ED                                  l282 0072  
                                _PR2 001B                         __CFG_CPD$OFF 0000  
                                u485 01B5                                  u807 010F  
                                u767 0044                                  u777 005E  
                                u787 00E2                                  u797 00FD  
                    _TMR2_Initialize 01DF                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
                       __CFG_LVP$OFF 0000                                 l1410 0135  
                               l1432 00F1                                 l1418 0175  
                               l1426 00DC                                 l1462 0053  
                               l1480 0081                                 l1472 006E  
                               l1456 003E                                 l1466 0057  
                               l1396 0117                                 l1476 007B  
                               STR_1 0090                                 STR_2 00C4  
                               _LATA 010C                                 _LATC 010E  
                               _PLLR 04D6                                 _TMR2 001A  
                               _WPUA 020C                                 _WPUC 020E  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _main 002C                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                               start 0020                                 ttemp 007E  
                               wtemp 007E                        __CFG_MCLRE$ON 0000  
                      __CFG_PLLEN$ON 0000                        ?_EUSART_Write 0070  
     __size_of_OSCILLATOR_Initialize 0008        __end_of_OSCILLATOR_Initialize 01F0  
                              ?_main 0070                        __CFG_WDTE$OFF 0000  
                              _T2CON 001C                                _LATA5 0865  
                              i1l143 0152                                i1l235 001B  
                              _RCREG 0199                                _RCSTA 019D  
                              _TRISA 008C                                _TRISC 008E  
                              _TXREG 019A                                _TXSTA 019E  
                   ??_GPS_Initialize 003A                                _speed 0030  
                              _putch 01FC                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                    _TMR2_StartTimer 0200                      __initialization 0021  
                       __end_of_main 0090                       ??_EUSART_Write 0072  
            __end_of_TMR2_Initialize 01E8          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 003E                               _EEADRH 0192  
                             _EEADRL 0191                               _CCPR1H 0292  
                             _EEDATH 0194                               _CCPR1L 0291  
                             _EEDATL 0193                               _EECON2 0196  
                             _APFCON 011D                               _ANSELA 018C  
                             ?_putch 0070                               _ANSELC 018E  
                             i1l1328 0012                               i1l1284 0190  
                             _OSCCON 0099                               _SPBRGH 019C  
                             _SPBRGL 019B                       __CFG_PWRTE$OFF 0000  
                     __CFG_STVREN$ON 0000                  _EUSART_Transmit_ISR 0138  
                             _printf 0170                               main@up 0041  
           __size_of_EPWM_Initialize 000C              __end_of_TMR2_StartTimer 0203  
               ?_EUSART_Transmit_ISR 0070          __size_of_EPWM_LoadDutyValue 0017  
                  _SYSTEM_Initialize 01F6              __end_of__initialization 0029  
                 ?_SYSTEM_Initialize 0070                       __pcstackCOMMON 0070  
                ??_SYSTEM_Initialize 0073                        __end_of_putch 0200  
                   ?_TMR2_Initialize 0070                       _OPTION_REGbits 0095  
          __end_of_SYSTEM_Initialize 01FC                ??_EUSART_Transmit_ISR 0070  
                            ??_putch 0074                           __pbssBANK0 0020  
               __end_of_EUSART_Write 0138          __size_of_EUSART_Receive_ISR 001B  
                         __pmaintext 002C                           __pintentry 0004  
                            _CCP1CON 0293                              _ECCP1AS 0295  
                            _BAUDCON 019F                              ?_printf 0075  
                      _eusartRxCount 007A                              _OSCSTAT 009A  
                            _OSCTUNE 0098                              _PWM1CON 0294  
                   ?_TMR2_StartTimer 0070                    ??_EPWM_Initialize 0072  
                            __ptext1 01F6                              __ptext2 01DF  
                            __ptext3 0200                              __ptext4 01BD  
                            __ptext5 01E8                              __ptext6 0155  
                            __ptext7 01D3                              __ptext8 00D6  
                            __ptext9 0170                      __size_of_printf 001B  
              _OSCILLATOR_Initialize 01E8                            _T2CONbits 001C  
           ??_PIN_MANAGER_Initialize 0072           __size_of_SYSTEM_Initialize 0006  
                            clrloop0 01F1                              main@tmp 0042  
                     main@motor_load 0043                 end_of_initialization 0029  
        EPWM_LoadDutyValue@dutyValue 0072                    _EUSART_Initialize 0155  
                 ?_EUSART_Initialize 0070                            _RCSTAbits 019D  
                            printf@c 0039                              printf@f 0075  
                       __pstringtext 0090                  ??_EUSART_Initialize 0072  
                   __CFG_FOSC$INTOSC 0000                __size_of_EUSART_Write 0022  
          __end_of_EUSART_Initialize 0170              __size_of_GPS_Initialize 0040  
                       _EUSART_Write 0116               ?_OSCILLATOR_Initialize 0070  
                     __end_of_printf 018B                  start_initialization 0021  
    __size_of_PIN_MANAGER_Initialize 0016           __end_of_EPWM_LoadDutyValue 01BD  
                        putch@txData 0074                             ??_printf 0077  
                    _EPWM_Initialize 01D3          __end_of_EUSART_Transmit_ISR 0155  
                        __pbssCOMMON 007A                            ___latbits 0000  
                      __pcstackBANK0 0038             __size_of_TMR2_Initialize 0009  
         __end_of_EUSART_Receive_ISR 01A6           __size_of_EUSART_Initialize 001B  
             _PIN_MANAGER_Initialize 01BD                         _eusartRxHead 0033  
                       _eusartTxHead 0035                         _eusartRxTail 0034  
                       _eusartTxTail 0036         ??_INTERRUPT_InterruptManager 0071  
            _eusartTxBufferRemaining 007B                       __size_of_putch 0004  
                     _eusartRxBuffer 0020                       _GPS_Initialize 00D6  
                     _eusartTxBuffer 0028                            clear_ram0 01F0  
                           _PIE1bits 0091             __size_of_TMR2_StartTimer 0003  
__size_of_INTERRUPT_InterruptManager 001C                             _PIR1bits 0011  
                           _PSTR1CON 0296              __end_of_EPWM_Initialize 01DF  
             __end_of_GPS_Initialize 0116                    ??_TMR2_Initialize 0072  
                         _EECON1bits 0195                    GPS_Initialize@tmp 003D  
            ??_OSCILLATOR_Initialize 0072                             __ptext10 01FC  
                           __ptext11 0116                             __ptext12 01A6  
                           __ptext14 0138                             __ptext15 018B  
                    ?_GPS_Initialize 0070                        __size_of_main 0064  
                 _EPWM_LoadDutyValue 01A6                             int$flags 007E  
                   ?_EPWM_Initialize 0070                    ??_TMR2_StartTimer 0072  
 __end_of_INTERRUPT_InterruptManager 0020           _INTERRUPT_InterruptManager 0004  
                ?_EPWM_LoadDutyValue 0072                           _INTCONbits 000B  
               ??_EPWM_LoadDutyValue 0074                             intlevel1 0000  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                           printf@ap 0038                   _EUSART_Receive_ISR 018B  
                ?_EUSART_Receive_ISR 0070                          _speed_units 0037  
                 EUSART_Write@txData 0073         __size_of_EUSART_Transmit_ISR 001D  
     __end_of_PIN_MANAGER_Initialize 01D3                 ??_EUSART_Receive_ISR 0070  

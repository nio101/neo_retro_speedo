

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Sep 13 08:34:21 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     	;# 
    29  0001                     	;# 
    30  0002                     	;# 
    31  0003                     	;# 
    32  0004                     	;# 
    33  0005                     	;# 
    34  0006                     	;# 
    35  0007                     	;# 
    36  0008                     	;# 
    37  0009                     	;# 
    38  000A                     	;# 
    39  000B                     	;# 
    40  000C                     	;# 
    41  000E                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001B                     	;# 
    52  001C                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  008C                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0095                     	;# 
    60  0096                     	;# 
    61  0097                     	;# 
    62  0098                     	;# 
    63  0099                     	;# 
    64  009A                     	;# 
    65  009B                     	;# 
    66  009B                     	;# 
    67  009C                     	;# 
    68  009D                     	;# 
    69  009E                     	;# 
    70  010C                     	;# 
    71  010E                     	;# 
    72  0111                     	;# 
    73  0112                     	;# 
    74  0113                     	;# 
    75  0114                     	;# 
    76  0115                     	;# 
    77  0116                     	;# 
    78  0117                     	;# 
    79  0118                     	;# 
    80  0119                     	;# 
    81  011A                     	;# 
    82  011B                     	;# 
    83  011D                     	;# 
    84  011D                     	;# 
    85  018C                     	;# 
    86  018E                     	;# 
    87  0191                     	;# 
    88  0191                     	;# 
    89  0192                     	;# 
    90  0193                     	;# 
    91  0193                     	;# 
    92  0193                     	;# 
    93  0194                     	;# 
    94  0195                     	;# 
    95  0196                     	;# 
    96  0199                     	;# 
    97  019A                     	;# 
    98  019B                     	;# 
    99  019B                     	;# 
   100  019B                     	;# 
   101  019B                     	;# 
   102  019C                     	;# 
   103  019C                     	;# 
   104  019D                     	;# 
   105  019E                     	;# 
   106  019F                     	;# 
   107  020C                     	;# 
   108  020E                     	;# 
   109  0211                     	;# 
   110  0211                     	;# 
   111  0212                     	;# 
   112  0212                     	;# 
   113  0213                     	;# 
   114  0213                     	;# 
   115  0214                     	;# 
   116  0214                     	;# 
   117  0215                     	;# 
   118  0215                     	;# 
   119  0215                     	;# 
   120  0216                     	;# 
   121  0216                     	;# 
   122  0217                     	;# 
   123  0217                     	;# 
   124  0291                     	;# 
   125  0291                     	;# 
   126  0292                     	;# 
   127  0293                     	;# 
   128  0294                     	;# 
   129  0295                     	;# 
   130  0295                     	;# 
   131  0296                     	;# 
   132  0391                     	;# 
   133  0392                     	;# 
   134  0393                     	;# 
   135  039A                     	;# 
   136  039C                     	;# 
   137  039D                     	;# 
   138  039E                     	;# 
   139  039F                     	;# 
   140  0FE4                     	;# 
   141  0FE5                     	;# 
   142  0FE6                     	;# 
   143  0FE7                     	;# 
   144  0FE8                     	;# 
   145  0FE9                     	;# 
   146  0FEA                     	;# 
   147  0FEB                     	;# 
   148  0FED                     	;# 
   149  0FEE                     	;# 
   150  0FEF                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000E                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  008C                     	;# 
   179  008E                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  010C                     	;# 
   194  010E                     	;# 
   195  0111                     	;# 
   196  0112                     	;# 
   197  0113                     	;# 
   198  0114                     	;# 
   199  0115                     	;# 
   200  0116                     	;# 
   201  0117                     	;# 
   202  0118                     	;# 
   203  0119                     	;# 
   204  011A                     	;# 
   205  011B                     	;# 
   206  011D                     	;# 
   207  011D                     	;# 
   208  018C                     	;# 
   209  018E                     	;# 
   210  0191                     	;# 
   211  0191                     	;# 
   212  0192                     	;# 
   213  0193                     	;# 
   214  0193                     	;# 
   215  0193                     	;# 
   216  0194                     	;# 
   217  0195                     	;# 
   218  0196                     	;# 
   219  0199                     	;# 
   220  019A                     	;# 
   221  019B                     	;# 
   222  019B                     	;# 
   223  019B                     	;# 
   224  019B                     	;# 
   225  019C                     	;# 
   226  019C                     	;# 
   227  019D                     	;# 
   228  019E                     	;# 
   229  019F                     	;# 
   230  020C                     	;# 
   231  020E                     	;# 
   232  0211                     	;# 
   233  0211                     	;# 
   234  0212                     	;# 
   235  0212                     	;# 
   236  0213                     	;# 
   237  0213                     	;# 
   238  0214                     	;# 
   239  0214                     	;# 
   240  0215                     	;# 
   241  0215                     	;# 
   242  0215                     	;# 
   243  0216                     	;# 
   244  0216                     	;# 
   245  0217                     	;# 
   246  0217                     	;# 
   247  0291                     	;# 
   248  0291                     	;# 
   249  0292                     	;# 
   250  0293                     	;# 
   251  0294                     	;# 
   252  0295                     	;# 
   253  0295                     	;# 
   254  0296                     	;# 
   255  0391                     	;# 
   256  0392                     	;# 
   257  0393                     	;# 
   258  039A                     	;# 
   259  039C                     	;# 
   260  039D                     	;# 
   261  039E                     	;# 
   262  039F                     	;# 
   263  0FE4                     	;# 
   264  0FE5                     	;# 
   265  0FE6                     	;# 
   266  0FE7                     	;# 
   267  0FE8                     	;# 
   268  0FE9                     	;# 
   269  0FEA                     	;# 
   270  0FEB                     	;# 
   271  0FED                     	;# 
   272  0FEE                     	;# 
   273  0FEF                     	;# 
   274  0000                     	;# 
   275  0001                     	;# 
   276  0002                     	;# 
   277  0003                     	;# 
   278  0004                     	;# 
   279  0005                     	;# 
   280  0006                     	;# 
   281  0007                     	;# 
   282  0008                     	;# 
   283  0009                     	;# 
   284  000A                     	;# 
   285  000B                     	;# 
   286  000C                     	;# 
   287  000E                     	;# 
   288  0011                     	;# 
   289  0012                     	;# 
   290  0015                     	;# 
   291  0016                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  001A                     	;# 
   297  001B                     	;# 
   298  001C                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  008C                     	;# 
   302  008E                     	;# 
   303  0091                     	;# 
   304  0092                     	;# 
   305  0095                     	;# 
   306  0096                     	;# 
   307  0097                     	;# 
   308  0098                     	;# 
   309  0099                     	;# 
   310  009A                     	;# 
   311  009B                     	;# 
   312  009B                     	;# 
   313  009C                     	;# 
   314  009D                     	;# 
   315  009E                     	;# 
   316  010C                     	;# 
   317  010E                     	;# 
   318  0111                     	;# 
   319  0112                     	;# 
   320  0113                     	;# 
   321  0114                     	;# 
   322  0115                     	;# 
   323  0116                     	;# 
   324  0117                     	;# 
   325  0118                     	;# 
   326  0119                     	;# 
   327  011A                     	;# 
   328  011B                     	;# 
   329  011D                     	;# 
   330  011D                     	;# 
   331  018C                     	;# 
   332  018E                     	;# 
   333  0191                     	;# 
   334  0191                     	;# 
   335  0192                     	;# 
   336  0193                     	;# 
   337  0193                     	;# 
   338  0193                     	;# 
   339  0194                     	;# 
   340  0195                     	;# 
   341  0196                     	;# 
   342  0199                     	;# 
   343  019A                     	;# 
   344  019B                     	;# 
   345  019B                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019C                     	;# 
   349  019C                     	;# 
   350  019D                     	;# 
   351  019E                     	;# 
   352  019F                     	;# 
   353  020C                     	;# 
   354  020E                     	;# 
   355  0211                     	;# 
   356  0211                     	;# 
   357  0212                     	;# 
   358  0212                     	;# 
   359  0213                     	;# 
   360  0213                     	;# 
   361  0214                     	;# 
   362  0214                     	;# 
   363  0215                     	;# 
   364  0215                     	;# 
   365  0215                     	;# 
   366  0216                     	;# 
   367  0216                     	;# 
   368  0217                     	;# 
   369  0217                     	;# 
   370  0291                     	;# 
   371  0291                     	;# 
   372  0292                     	;# 
   373  0293                     	;# 
   374  0294                     	;# 
   375  0295                     	;# 
   376  0295                     	;# 
   377  0296                     	;# 
   378  0391                     	;# 
   379  0392                     	;# 
   380  0393                     	;# 
   381  039A                     	;# 
   382  039C                     	;# 
   383  039D                     	;# 
   384  039E                     	;# 
   385  039F                     	;# 
   386  0FE4                     	;# 
   387  0FE5                     	;# 
   388  0FE6                     	;# 
   389  0FE7                     	;# 
   390  0FE8                     	;# 
   391  0FE9                     	;# 
   392  0FEA                     	;# 
   393  0FEB                     	;# 
   394  0FED                     	;# 
   395  0FEE                     	;# 
   396  0FEF                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000E                     	;# 
   411  0011                     	;# 
   412  0012                     	;# 
   413  0015                     	;# 
   414  0016                     	;# 
   415  0016                     	;# 
   416  0017                     	;# 
   417  0018                     	;# 
   418  0019                     	;# 
   419  001A                     	;# 
   420  001B                     	;# 
   421  001C                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  008C                     	;# 
   425  008E                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  010C                     	;# 
   440  010E                     	;# 
   441  0111                     	;# 
   442  0112                     	;# 
   443  0113                     	;# 
   444  0114                     	;# 
   445  0115                     	;# 
   446  0116                     	;# 
   447  0117                     	;# 
   448  0118                     	;# 
   449  0119                     	;# 
   450  011A                     	;# 
   451  011B                     	;# 
   452  011D                     	;# 
   453  011D                     	;# 
   454  018C                     	;# 
   455  018E                     	;# 
   456  0191                     	;# 
   457  0191                     	;# 
   458  0192                     	;# 
   459  0193                     	;# 
   460  0193                     	;# 
   461  0193                     	;# 
   462  0194                     	;# 
   463  0195                     	;# 
   464  0196                     	;# 
   465  0199                     	;# 
   466  019A                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019C                     	;# 
   472  019C                     	;# 
   473  019D                     	;# 
   474  019E                     	;# 
   475  019F                     	;# 
   476  020C                     	;# 
   477  020E                     	;# 
   478  0211                     	;# 
   479  0211                     	;# 
   480  0212                     	;# 
   481  0212                     	;# 
   482  0213                     	;# 
   483  0213                     	;# 
   484  0214                     	;# 
   485  0214                     	;# 
   486  0215                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0216                     	;# 
   490  0216                     	;# 
   491  0217                     	;# 
   492  0217                     	;# 
   493  0291                     	;# 
   494  0291                     	;# 
   495  0292                     	;# 
   496  0293                     	;# 
   497  0294                     	;# 
   498  0295                     	;# 
   499  0295                     	;# 
   500  0296                     	;# 
   501  0391                     	;# 
   502  0392                     	;# 
   503  0393                     	;# 
   504  039A                     	;# 
   505  039C                     	;# 
   506  039D                     	;# 
   507  039E                     	;# 
   508  039F                     	;# 
   509  0FE4                     	;# 
   510  0FE5                     	;# 
   511  0FE6                     	;# 
   512  0FE7                     	;# 
   513  0FE8                     	;# 
   514  0FE9                     	;# 
   515  0FEA                     	;# 
   516  0FEB                     	;# 
   517  0FED                     	;# 
   518  0FEE                     	;# 
   519  0FEF                     	;# 
   520  0000                     	;# 
   521  0001                     	;# 
   522  0002                     	;# 
   523  0003                     	;# 
   524  0004                     	;# 
   525  0005                     	;# 
   526  0006                     	;# 
   527  0007                     	;# 
   528  0008                     	;# 
   529  0009                     	;# 
   530  000A                     	;# 
   531  000B                     	;# 
   532  000C                     	;# 
   533  000E                     	;# 
   534  0011                     	;# 
   535  0012                     	;# 
   536  0015                     	;# 
   537  0016                     	;# 
   538  0016                     	;# 
   539  0017                     	;# 
   540  0018                     	;# 
   541  0019                     	;# 
   542  001A                     	;# 
   543  001B                     	;# 
   544  001C                     	;# 
   545  001E                     	;# 
   546  001F                     	;# 
   547  008C                     	;# 
   548  008E                     	;# 
   549  0091                     	;# 
   550  0092                     	;# 
   551  0095                     	;# 
   552  0096                     	;# 
   553  0097                     	;# 
   554  0098                     	;# 
   555  0099                     	;# 
   556  009A                     	;# 
   557  009B                     	;# 
   558  009B                     	;# 
   559  009C                     	;# 
   560  009D                     	;# 
   561  009E                     	;# 
   562  010C                     	;# 
   563  010E                     	;# 
   564  0111                     	;# 
   565  0112                     	;# 
   566  0113                     	;# 
   567  0114                     	;# 
   568  0115                     	;# 
   569  0116                     	;# 
   570  0117                     	;# 
   571  0118                     	;# 
   572  0119                     	;# 
   573  011A                     	;# 
   574  011B                     	;# 
   575  011D                     	;# 
   576  011D                     	;# 
   577  018C                     	;# 
   578  018E                     	;# 
   579  0191                     	;# 
   580  0191                     	;# 
   581  0192                     	;# 
   582  0193                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0194                     	;# 
   586  0195                     	;# 
   587  0196                     	;# 
   588  0199                     	;# 
   589  019A                     	;# 
   590  019B                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019C                     	;# 
   595  019C                     	;# 
   596  019D                     	;# 
   597  019E                     	;# 
   598  019F                     	;# 
   599  020C                     	;# 
   600  020E                     	;# 
   601  0211                     	;# 
   602  0211                     	;# 
   603  0212                     	;# 
   604  0212                     	;# 
   605  0213                     	;# 
   606  0213                     	;# 
   607  0214                     	;# 
   608  0214                     	;# 
   609  0215                     	;# 
   610  0215                     	;# 
   611  0215                     	;# 
   612  0216                     	;# 
   613  0216                     	;# 
   614  0217                     	;# 
   615  0217                     	;# 
   616  0291                     	;# 
   617  0291                     	;# 
   618  0292                     	;# 
   619  0293                     	;# 
   620  0294                     	;# 
   621  0295                     	;# 
   622  0295                     	;# 
   623  0296                     	;# 
   624  0391                     	;# 
   625  0392                     	;# 
   626  0393                     	;# 
   627  039A                     	;# 
   628  039C                     	;# 
   629  039D                     	;# 
   630  039E                     	;# 
   631  039F                     	;# 
   632  0FE4                     	;# 
   633  0FE5                     	;# 
   634  0FE6                     	;# 
   635  0FE7                     	;# 
   636  0FE8                     	;# 
   637  0FE9                     	;# 
   638  0FEA                     	;# 
   639  0FEB                     	;# 
   640  0FED                     	;# 
   641  0FEE                     	;# 
   642  0FEF                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0008                     	;# 
   652  0009                     	;# 
   653  000A                     	;# 
   654  000B                     	;# 
   655  000C                     	;# 
   656  000E                     	;# 
   657  0011                     	;# 
   658  0012                     	;# 
   659  0015                     	;# 
   660  0016                     	;# 
   661  0016                     	;# 
   662  0017                     	;# 
   663  0018                     	;# 
   664  0019                     	;# 
   665  001A                     	;# 
   666  001B                     	;# 
   667  001C                     	;# 
   668  001E                     	;# 
   669  001F                     	;# 
   670  008C                     	;# 
   671  008E                     	;# 
   672  0091                     	;# 
   673  0092                     	;# 
   674  0095                     	;# 
   675  0096                     	;# 
   676  0097                     	;# 
   677  0098                     	;# 
   678  0099                     	;# 
   679  009A                     	;# 
   680  009B                     	;# 
   681  009B                     	;# 
   682  009C                     	;# 
   683  009D                     	;# 
   684  009E                     	;# 
   685  010C                     	;# 
   686  010E                     	;# 
   687  0111                     	;# 
   688  0112                     	;# 
   689  0113                     	;# 
   690  0114                     	;# 
   691  0115                     	;# 
   692  0116                     	;# 
   693  0117                     	;# 
   694  0118                     	;# 
   695  0119                     	;# 
   696  011A                     	;# 
   697  011B                     	;# 
   698  011D                     	;# 
   699  011D                     	;# 
   700  018C                     	;# 
   701  018E                     	;# 
   702  0191                     	;# 
   703  0191                     	;# 
   704  0192                     	;# 
   705  0193                     	;# 
   706  0193                     	;# 
   707  0193                     	;# 
   708  0194                     	;# 
   709  0195                     	;# 
   710  0196                     	;# 
   711  0199                     	;# 
   712  019A                     	;# 
   713  019B                     	;# 
   714  019B                     	;# 
   715  019B                     	;# 
   716  019B                     	;# 
   717  019C                     	;# 
   718  019C                     	;# 
   719  019D                     	;# 
   720  019E                     	;# 
   721  019F                     	;# 
   722  020C                     	;# 
   723  020E                     	;# 
   724  0211                     	;# 
   725  0211                     	;# 
   726  0212                     	;# 
   727  0212                     	;# 
   728  0213                     	;# 
   729  0213                     	;# 
   730  0214                     	;# 
   731  0214                     	;# 
   732  0215                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0216                     	;# 
   736  0216                     	;# 
   737  0217                     	;# 
   738  0217                     	;# 
   739  0291                     	;# 
   740  0291                     	;# 
   741  0292                     	;# 
   742  0293                     	;# 
   743  0294                     	;# 
   744  0295                     	;# 
   745  0295                     	;# 
   746  0296                     	;# 
   747  0391                     	;# 
   748  0392                     	;# 
   749  0393                     	;# 
   750  039A                     	;# 
   751  039C                     	;# 
   752  039D                     	;# 
   753  039E                     	;# 
   754  039F                     	;# 
   755  0FE4                     	;# 
   756  0FE5                     	;# 
   757  0FE6                     	;# 
   758  0FE7                     	;# 
   759  0FE8                     	;# 
   760  0FE9                     	;# 
   761  0FEA                     	;# 
   762  0FEB                     	;# 
   763  0FED                     	;# 
   764  0FEE                     	;# 
   765  0FEF                     	;# 
   766  0000                     	;# 
   767  0001                     	;# 
   768  0002                     	;# 
   769  0003                     	;# 
   770  0004                     	;# 
   771  0005                     	;# 
   772  0006                     	;# 
   773  0007                     	;# 
   774  0008                     	;# 
   775  0009                     	;# 
   776  000A                     	;# 
   777  000B                     	;# 
   778  000C                     	;# 
   779  000E                     	;# 
   780  0011                     	;# 
   781  0012                     	;# 
   782  0015                     	;# 
   783  0016                     	;# 
   784  0016                     	;# 
   785  0017                     	;# 
   786  0018                     	;# 
   787  0019                     	;# 
   788  001A                     	;# 
   789  001B                     	;# 
   790  001C                     	;# 
   791  001E                     	;# 
   792  001F                     	;# 
   793  008C                     	;# 
   794  008E                     	;# 
   795  0091                     	;# 
   796  0092                     	;# 
   797  0095                     	;# 
   798  0096                     	;# 
   799  0097                     	;# 
   800  0098                     	;# 
   801  0099                     	;# 
   802  009A                     	;# 
   803  009B                     	;# 
   804  009B                     	;# 
   805  009C                     	;# 
   806  009D                     	;# 
   807  009E                     	;# 
   808  010C                     	;# 
   809  010E                     	;# 
   810  0111                     	;# 
   811  0112                     	;# 
   812  0113                     	;# 
   813  0114                     	;# 
   814  0115                     	;# 
   815  0116                     	;# 
   816  0117                     	;# 
   817  0118                     	;# 
   818  0119                     	;# 
   819  011A                     	;# 
   820  011B                     	;# 
   821  011D                     	;# 
   822  011D                     	;# 
   823  018C                     	;# 
   824  018E                     	;# 
   825  0191                     	;# 
   826  0191                     	;# 
   827  0192                     	;# 
   828  0193                     	;# 
   829  0193                     	;# 
   830  0193                     	;# 
   831  0194                     	;# 
   832  0195                     	;# 
   833  0196                     	;# 
   834  0199                     	;# 
   835  019A                     	;# 
   836  019B                     	;# 
   837  019B                     	;# 
   838  019B                     	;# 
   839  019B                     	;# 
   840  019C                     	;# 
   841  019C                     	;# 
   842  019D                     	;# 
   843  019E                     	;# 
   844  019F                     	;# 
   845  020C                     	;# 
   846  020E                     	;# 
   847  0211                     	;# 
   848  0211                     	;# 
   849  0212                     	;# 
   850  0212                     	;# 
   851  0213                     	;# 
   852  0213                     	;# 
   853  0214                     	;# 
   854  0214                     	;# 
   855  0215                     	;# 
   856  0215                     	;# 
   857  0215                     	;# 
   858  0216                     	;# 
   859  0216                     	;# 
   860  0217                     	;# 
   861  0217                     	;# 
   862  0291                     	;# 
   863  0291                     	;# 
   864  0292                     	;# 
   865  0293                     	;# 
   866  0294                     	;# 
   867  0295                     	;# 
   868  0295                     	;# 
   869  0296                     	;# 
   870  0391                     	;# 
   871  0392                     	;# 
   872  0393                     	;# 
   873  039A                     	;# 
   874  039C                     	;# 
   875  039D                     	;# 
   876  039E                     	;# 
   877  039F                     	;# 
   878  0FE4                     	;# 
   879  0FE5                     	;# 
   880  0FE6                     	;# 
   881  0FE7                     	;# 
   882  0FE8                     	;# 
   883  0FE9                     	;# 
   884  0FEA                     	;# 
   885  0FEB                     	;# 
   886  0FED                     	;# 
   887  0FEE                     	;# 
   888  0FEF                     	;# 
   889  0000                     	;# 
   890  0001                     	;# 
   891  0002                     	;# 
   892  0003                     	;# 
   893  0004                     	;# 
   894  0005                     	;# 
   895  0006                     	;# 
   896  0007                     	;# 
   897  0008                     	;# 
   898  0009                     	;# 
   899  000A                     	;# 
   900  000B                     	;# 
   901  000C                     	;# 
   902  000E                     	;# 
   903  0011                     	;# 
   904  0012                     	;# 
   905  0015                     	;# 
   906  0016                     	;# 
   907  0016                     	;# 
   908  0017                     	;# 
   909  0018                     	;# 
   910  0019                     	;# 
   911  001A                     	;# 
   912  001B                     	;# 
   913  001C                     	;# 
   914  001E                     	;# 
   915  001F                     	;# 
   916  008C                     	;# 
   917  008E                     	;# 
   918  0091                     	;# 
   919  0092                     	;# 
   920  0095                     	;# 
   921  0096                     	;# 
   922  0097                     	;# 
   923  0098                     	;# 
   924  0099                     	;# 
   925  009A                     	;# 
   926  009B                     	;# 
   927  009B                     	;# 
   928  009C                     	;# 
   929  009D                     	;# 
   930  009E                     	;# 
   931  010C                     	;# 
   932  010E                     	;# 
   933  0111                     	;# 
   934  0112                     	;# 
   935  0113                     	;# 
   936  0114                     	;# 
   937  0115                     	;# 
   938  0116                     	;# 
   939  0117                     	;# 
   940  0118                     	;# 
   941  0119                     	;# 
   942  011A                     	;# 
   943  011B                     	;# 
   944  011D                     	;# 
   945  011D                     	;# 
   946  018C                     	;# 
   947  018E                     	;# 
   948  0191                     	;# 
   949  0191                     	;# 
   950  0192                     	;# 
   951  0193                     	;# 
   952  0193                     	;# 
   953  0193                     	;# 
   954  0194                     	;# 
   955  0195                     	;# 
   956  0196                     	;# 
   957  0199                     	;# 
   958  019A                     	;# 
   959  019B                     	;# 
   960  019B                     	;# 
   961  019B                     	;# 
   962  019B                     	;# 
   963  019C                     	;# 
   964  019C                     	;# 
   965  019D                     	;# 
   966  019E                     	;# 
   967  019F                     	;# 
   968  020C                     	;# 
   969  020E                     	;# 
   970  0211                     	;# 
   971  0211                     	;# 
   972  0212                     	;# 
   973  0212                     	;# 
   974  0213                     	;# 
   975  0213                     	;# 
   976  0214                     	;# 
   977  0214                     	;# 
   978  0215                     	;# 
   979  0215                     	;# 
   980  0215                     	;# 
   981  0216                     	;# 
   982  0216                     	;# 
   983  0217                     	;# 
   984  0217                     	;# 
   985  0291                     	;# 
   986  0291                     	;# 
   987  0292                     	;# 
   988  0293                     	;# 
   989  0294                     	;# 
   990  0295                     	;# 
   991  0295                     	;# 
   992  0296                     	;# 
   993  0391                     	;# 
   994  0392                     	;# 
   995  0393                     	;# 
   996  039A                     	;# 
   997  039C                     	;# 
   998  039D                     	;# 
   999  039E                     	;# 
  1000  039F                     	;# 
  1001  0FE4                     	;# 
  1002  0FE5                     	;# 
  1003  0FE6                     	;# 
  1004  0FE7                     	;# 
  1005  0FE8                     	;# 
  1006  0FE9                     	;# 
  1007  0FEA                     	;# 
  1008  0FEB                     	;# 
  1009  0FED                     	;# 
  1010  0FEE                     	;# 
  1011  0FEF                     	;# 
  1012  000B                     _INTCONbits	set	11
  1013  0011                     _PIR1bits	set	17
  1014  001B                     _PR2	set	27
  1015  001C                     _T2CON	set	28
  1016  001C                     _T2CONbits	set	28
  1017  001A                     _TMR2	set	26
  1018  0095                     _OPTION_REGbits	set	149
  1019  0099                     _OSCCON	set	153
  1020  009A                     _OSCSTAT	set	154
  1021  0098                     _OSCTUNE	set	152
  1022  0091                     _PIE1bits	set	145
  1023  008C                     _TRISA	set	140
  1024  008E                     _TRISC	set	142
  1025  04D6                     _PLLR	set	1238
  1026  011D                     _APFCON	set	285
  1027  010C                     _LATA	set	268
  1028  010E                     _LATC	set	270
  1029  0865                     _LATA5	set	2149
  1030  018C                     _ANSELA	set	396
  1031  018E                     _ANSELC	set	398
  1032  019F                     _BAUDCON	set	415
  1033  0192                     _EEADRH	set	402
  1034  0191                     _EEADRL	set	401
  1035  0195                     _EECON1bits	set	405
  1036  0196                     _EECON2	set	406
  1037  0194                     _EEDATH	set	404
  1038  0193                     _EEDATL	set	403
  1039  0199                     _RCREG	set	409
  1040  019D                     _RCSTA	set	413
  1041  019D                     _RCSTAbits	set	413
  1042  019C                     _SPBRGH	set	412
  1043  019B                     _SPBRGL	set	411
  1044  019A                     _TXREG	set	410
  1045  019E                     _TXSTA	set	414
  1046  020C                     _WPUA	set	524
  1047  020E                     _WPUC	set	526
  1048  0293                     _CCP1CON	set	659
  1049  0292                     _CCPR1H	set	658
  1050  0291                     _CCPR1L	set	657
  1051  0295                     _ECCP1AS	set	661
  1052  0296                     _PSTR1CON	set	662
  1053  0294                     _PWM1CON	set	660
  1054                           
  1055                           	psect	stringtext
  1056  00F8                     __pstringtext:	
  1057  00F8                     STR_1:	
  1058  00F8  3424               	retlw	36	;'$'
  1059  00F9  3450               	retlw	80	;'P'
  1060  00FA  344D               	retlw	77	;'M'
  1061  00FB  3454               	retlw	84	;'T'
  1062  00FC  344B               	retlw	75	;'K'
  1063  00FD  3433               	retlw	51	;'3'
  1064  00FE  3431               	retlw	49	;'1'
  1065  00FF  3434               	retlw	52	;'4'
  1066  0100  342C               	retlw	44	;','
  1067  0101  3430               	retlw	48	;'0'
  1068  0102  342C               	retlw	44	;','
  1069  0103  3430               	retlw	48	;'0'
  1070  0104  342C               	retlw	44	;','
  1071  0105  3431               	retlw	49	;'1'
  1072  0106  342C               	retlw	44	;','
  1073  0107  3430               	retlw	48	;'0'
  1074  0108  342C               	retlw	44	;','
  1075  0109  3430               	retlw	48	;'0'
  1076  010A  342C               	retlw	44	;','
  1077  010B  3430               	retlw	48	;'0'
  1078  010C  342C               	retlw	44	;','
  1079  010D  3430               	retlw	48	;'0'
  1080  010E  342C               	retlw	44	;','
  1081  010F  3430               	retlw	48	;'0'
  1082  0110  342C               	retlw	44	;','
  1083  0111  3430               	retlw	48	;'0'
  1084  0112  342C               	retlw	44	;','
  1085  0113  3430               	retlw	48	;'0'
  1086  0114  342C               	retlw	44	;','
  1087  0115  3430               	retlw	48	;'0'
  1088  0116  342C               	retlw	44	;','
  1089  0117  3430               	retlw	48	;'0'
  1090  0118  342C               	retlw	44	;','
  1091  0119  3430               	retlw	48	;'0'
  1092  011A  342C               	retlw	44	;','
  1093  011B  3430               	retlw	48	;'0'
  1094  011C  342C               	retlw	44	;','
  1095  011D  3430               	retlw	48	;'0'
  1096  011E  342C               	retlw	44	;','
  1097  011F  3430               	retlw	48	;'0'
  1098  0120  342C               	retlw	44	;','
  1099  0121  3430               	retlw	48	;'0'
  1100  0122  342C               	retlw	44	;','
  1101  0123  3430               	retlw	48	;'0'
  1102  0124  342C               	retlw	44	;','
  1103  0125  3430               	retlw	48	;'0'
  1104  0126  342A               	retlw	42	;'*'
  1105  0127  3432               	retlw	50	;'2'
  1106  0128  3439               	retlw	57	;'9'
  1107  0129  340D               	retlw	13
  1108  012A  340A               	retlw	10
  1109  012B  3400               	retlw	0
  1110  012C                     STR_2:	
  1111  012C  3424               	retlw	36	;'$'
  1112  012D  3450               	retlw	80	;'P'
  1113  012E  344D               	retlw	77	;'M'
  1114  012F  3454               	retlw	84	;'T'
  1115  0130  344B               	retlw	75	;'K'
  1116  0131  3432               	retlw	50	;'2'
  1117  0132  3432               	retlw	50	;'2'
  1118  0133  3430               	retlw	48	;'0'
  1119  0134  342C               	retlw	44	;','
  1120  0135  3431               	retlw	49	;'1'
  1121  0136  3430               	retlw	48	;'0'
  1122  0137  3430               	retlw	48	;'0'
  1123  0138  342A               	retlw	42	;'*'
  1124  0139  3432               	retlw	50	;'2'
  1125  013A  3446               	retlw	70	;'F'
  1126  013B  340D               	retlw	13
  1127  013C  340A               	retlw	10
  1128  013D  3400               	retlw	0
  1129                           
  1130                           ; #config settings
  1131  0000                     
  1132                           	psect	cinit
  1133  0021                     start_initialization:	
  1134  0021                     __initialization:	
  1135                           
  1136                           ; Clear objects allocated to COMMON
  1137  0021  01FA               	clrf	__pbssCOMMON& (0+127)
  1138  0022  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1139                           
  1140                           ; Clear objects allocated to BANK0
  1141  0023  3020               	movlw	low __pbssBANK0
  1142  0024  0084               	movwf	4
  1143  0025  3000               	movlw	high __pbssBANK0
  1144  0026  0085               	movwf	5
  1145  0027  3018               	movlw	24
  1146  0028  2258               	fcall	clear_ram0
  1147  0029                     end_of_initialization:	
  1148                           ;End of C runtime variable initialization code
  1149                           
  1150  0029                     __end_of__initialization:	
  1151  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1152  002A  0020               	movlb	0
  1153  002B  282C               	ljmp	_main	;jump to C main() function
  1154                           
  1155                           	psect	bssCOMMON
  1156  007A                     __pbssCOMMON:	
  1157  007A                     _eusartRxCount:	
  1158  007A                     	ds	1
  1159  007B                     _eusartTxBufferRemaining:	
  1160  007B                     	ds	1
  1161                           
  1162                           	psect	bssBANK0
  1163  0020                     __pbssBANK0:	
  1164  0020                     _eusartRxBuffer:	
  1165  0020                     	ds	8
  1166  0028                     _eusartTxBuffer:	
  1167  0028                     	ds	8
  1168  0030                     _speed:	
  1169  0030                     	ds	3
  1170  0033                     _eusartRxHead:	
  1171  0033                     	ds	1
  1172  0034                     _eusartRxTail:	
  1173  0034                     	ds	1
  1174  0035                     _eusartTxHead:	
  1175  0035                     	ds	1
  1176  0036                     _eusartTxTail:	
  1177  0036                     	ds	1
  1178  0037                     _speed_units:	
  1179  0037                     	ds	1
  1180                           
  1181                           	psect	clrtext
  1182  0258                     clear_ram0:	
  1183                           ;	Called with FSR0 containing the base address, and
  1184                           ;	WREG with the size to clear
  1185                           
  1186  0258  0064               	clrwdt	;clear the watchdog before getting into this loop
  1187  0259                     clrloop0:	
  1188  0259  0180               	clrf	0	;clear RAM location pointed to by FSR
  1189  025A  3101               	addfsr 0,1
  1190  025B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1191  025C  2A59               	goto	clrloop0	;have we reached the end yet?
  1192  025D  3400               	retlw	0	;all done for this memory range, return
  1193                           
  1194                           	psect	cstackCOMMON
  1195  0070                     __pcstackCOMMON:	
  1196  0070                     ?_TMR2_StartTimer:	
  1197  0070                     ?_OSCILLATOR_Initialize:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_TMR2_Initialize:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_EUSART_Initialize:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_EUSART_Write:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_putch:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_EUSART_Transmit_ISR:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ??_EUSART_Transmit_ISR:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_EUSART_Receive_ISR:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ??_EUSART_Receive_ISR:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_EPWM_Initialize:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?_PIN_MANAGER_Initialize:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_SYSTEM_Initialize:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_INTERRUPT_InterruptManager:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_GPS_Initialize:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_main:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242                           
  1243                           ; 1 bytes @ 0x0
  1244  0070                     	ds	1
  1245  0071                     ??_INTERRUPT_InterruptManager:	
  1246                           
  1247                           ; 1 bytes @ 0x1
  1248  0071                     	ds	1
  1249  0072                     ??_TMR2_StartTimer:	
  1250  0072                     ??_OSCILLATOR_Initialize:	
  1251                           ; 1 bytes @ 0x2
  1252                           
  1253  0072                     ??_TMR2_Initialize:	
  1254                           ; 1 bytes @ 0x2
  1255                           
  1256  0072                     ??_EUSART_Initialize:	
  1257                           ; 1 bytes @ 0x2
  1258                           
  1259  0072                     ??_EUSART_Write:	
  1260                           ; 1 bytes @ 0x2
  1261                           
  1262  0072                     ??_EPWM_Initialize:	
  1263                           ; 1 bytes @ 0x2
  1264                           
  1265  0072                     ?_EPWM_LoadDutyValue:	
  1266                           ; 1 bytes @ 0x2
  1267                           
  1268  0072                     ??_PIN_MANAGER_Initialize:	
  1269                           ; 1 bytes @ 0x2
  1270                           
  1271  0072                     EPWM_LoadDutyValue@dutyValue:	
  1272                           ; 1 bytes @ 0x2
  1273                           
  1274                           
  1275                           ; 2 bytes @ 0x2
  1276  0072                     	ds	1
  1277  0073                     ??_SYSTEM_Initialize:	
  1278  0073                     EUSART_Write@txData:	
  1279                           ; 1 bytes @ 0x3
  1280                           
  1281                           
  1282                           ; 1 bytes @ 0x3
  1283  0073                     	ds	1
  1284  0074                     ??_putch:	
  1285  0074                     ??_EPWM_LoadDutyValue:	
  1286                           ; 1 bytes @ 0x4
  1287                           
  1288  0074                     putch@txData:	
  1289                           ; 1 bytes @ 0x4
  1290                           
  1291                           
  1292                           ; 1 bytes @ 0x4
  1293  0074                     	ds	1
  1294  0075                     ?_printf:	
  1295  0075                     printf@f:	
  1296                           ; 2 bytes @ 0x5
  1297                           
  1298                           
  1299                           ; 2 bytes @ 0x5
  1300  0075                     	ds	2
  1301  0077                     ??_printf:	
  1302                           
  1303                           ; 1 bytes @ 0x7
  1304  0077                     	ds	3
  1305                           
  1306                           	psect	cstackBANK0
  1307  0038                     __pcstackBANK0:	
  1308  0038                     printf@ap:	
  1309                           
  1310                           ; 1 bytes @ 0x0
  1311  0038                     	ds	1
  1312  0039                     printf@c:	
  1313                           
  1314                           ; 1 bytes @ 0x1
  1315  0039                     	ds	1
  1316  003A                     ??_GPS_Initialize:	
  1317                           
  1318                           ; 1 bytes @ 0x2
  1319  003A                     	ds	3
  1320  003D                     GPS_Initialize@tmp:	
  1321                           
  1322                           ; 1 bytes @ 0x5
  1323  003D                     	ds	1
  1324  003E                     ??_main:	
  1325                           
  1326                           ; 1 bytes @ 0x6
  1327  003E                     	ds	3
  1328  0041                     main@up:	
  1329                           
  1330                           ; 1 bytes @ 0x9
  1331  0041                     	ds	1
  1332  0042                     main@tmp:	
  1333                           
  1334                           ; 1 bytes @ 0xA
  1335  0042                     	ds	1
  1336  0043                     main@tmp_481:	
  1337                           
  1338                           ; 1 bytes @ 0xB
  1339  0043                     	ds	1
  1340  0044                     main@tmp_482:	
  1341                           
  1342                           ; 1 bytes @ 0xC
  1343  0044                     	ds	1
  1344  0045                     main@motor_load:	
  1345                           
  1346                           ; 2 bytes @ 0xD
  1347  0045                     	ds	2
  1348                           
  1349                           	psect	maintext
  1350  002C                     __pmaintext:	
  1351 ;;
  1352 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1353 ;;
  1354 ;; *************** function _main *****************
  1355 ;; Defined at:
  1356 ;;		line 100 in file "main.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  tmp             1   12[BANK0 ] unsigned char 
  1361 ;;  tmp             1   11[BANK0 ] unsigned char 
  1362 ;;  tmp             1   10[BANK0 ] unsigned char 
  1363 ;;  motor_load      2   13[BANK0 ] unsigned int 
  1364 ;;  up              1    9[BANK0 ] unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : B1F/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1
  1374 ;;      Params:         0       0       0
  1375 ;;      Locals:         0       6       0
  1376 ;;      Temps:          0       3       0
  1377 ;;      Totals:         0       9       0
  1378 ;;Total ram usage:        9 bytes
  1379 ;; Hardware stack levels required when called:    6
  1380 ;; This function calls:
  1381 ;;		_EPWM_LoadDutyValue
  1382 ;;		_GPS_Initialize
  1383 ;;		_SYSTEM_Initialize
  1384 ;;		_TMR2_StartTimer
  1385 ;; This function is called by:
  1386 ;;		Startup code after reset
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           
  1391                           ;psect for function _main
  1392  002C                     _main:	
  1393                           
  1394                           ;main.c: 103: SYSTEM_Initialize();
  1395                           
  1396                           ;incstack = 0
  1397                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1398  002C  225E               	fcall	_SYSTEM_Initialize
  1399                           
  1400                           ;main.c: 109: (INTCONbits.GIE = 1);
  1401  002D  178B               	bsf	11,7	;volatile
  1402                           
  1403                           ;main.c: 112: (INTCONbits.PEIE = 1);
  1404  002E  170B               	bsf	11,6	;volatile
  1405                           
  1406                           ;main.c: 165: uint16_t motor_load = 0;
  1407  002F  0020               	movlb	0	; select bank0
  1408  0030  01C5               	clrf	main@motor_load
  1409  0031  01C6               	clrf	main@motor_load+1
  1410                           
  1411                           ;main.c: 166: EPWM_LoadDutyValue(1023);
  1412  0032  30FF               	movlw	255
  1413  0033  00F2               	movwf	EPWM_LoadDutyValue@dutyValue
  1414  0034  3003               	movlw	3
  1415  0035  00F3               	movwf	EPWM_LoadDutyValue@dutyValue+1
  1416  0036  220E               	fcall	_EPWM_LoadDutyValue
  1417                           
  1418                           ;main.c: 167: TMR2_StartTimer();
  1419  0037  2268               	fcall	_TMR2_StartTimer
  1420                           
  1421                           ;main.c: 168: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  1422  0038  0020               	movlb	0	; select bank0
  1423  0039  01C2               	clrf	main@tmp
  1424  003A  3032               	movlw	50
  1425  003B  0242               	subwf	main@tmp,w
  1426  003C  1803               	btfsc	3,0
  1427  003D  2853               	goto	l1548
  1428  003E                     l1542:	
  1429  003E  3005               	movlw	5
  1430  003F  00C0               	movwf	??_main+2
  1431  0040  300F               	movlw	15
  1432  0041  00BF               	movwf	??_main+1
  1433  0042  30F4               	movlw	244
  1434  0043  00BE               	movwf	??_main
  1435  0044                     u917:	
  1436  0044  0BBE               	decfsz	??_main,f
  1437  0045  2844               	goto	u917
  1438  0046  0BBF               	decfsz	??_main+1,f
  1439  0047  2844               	goto	u917
  1440  0048  0BC0               	decfsz	??_main+2,f
  1441  0049  2844               	goto	u917
  1442  004A  3001               	movlw	1
  1443  004B  0020               	movlb	0	; select bank0
  1444  004C  00BE               	movwf	??_main
  1445  004D  083E               	movf	??_main,w
  1446  004E  07C2               	addwf	main@tmp,f
  1447  004F  3032               	movlw	50
  1448  0050  0242               	subwf	main@tmp,w
  1449  0051  1C03               	skipc
  1450  0052  283E               	goto	l1542
  1451  0053                     l1548:	
  1452                           
  1453                           ;main.c: 170: GPS_Initialize();
  1454  0053  213E               	fcall	_GPS_Initialize
  1455                           
  1456                           ;main.c: 171: bool up = 1;
  1457  0054  0020               	movlb	0	; select bank0
  1458  0055  01C1               	clrf	main@up
  1459  0056  0AC1               	incf	main@up,f
  1460                           
  1461                           ;main.c: 192: EPWM_LoadDutyValue(0);
  1462  0057  3000               	movlw	0
  1463  0058  00F2               	movwf	EPWM_LoadDutyValue@dutyValue
  1464  0059  00F3               	movwf	EPWM_LoadDutyValue@dutyValue+1
  1465  005A  220E               	fcall	_EPWM_LoadDutyValue
  1466                           
  1467                           ;main.c: 193: _delay((unsigned long)((10)*(32000000/4000.0)));
  1468  005B  3068               	movlw	104
  1469  005C  0020               	movlb	0	; select bank0
  1470  005D  00BF               	movwf	??_main+1
  1471  005E  30E4               	movlw	228
  1472  005F  00BE               	movwf	??_main
  1473  0060                     u927:	
  1474  0060  0BBE               	decfsz	??_main,f
  1475  0061  2860               	goto	u927
  1476  0062  0BBF               	decfsz	??_main+1,f
  1477  0063  2860               	goto	u927
  1478  0064  0000               	nop
  1479                           
  1480                           ;main.c: 194: EPWM_LoadDutyValue(1023-148);
  1481  0065  306B               	movlw	107
  1482  0066  00F2               	movwf	EPWM_LoadDutyValue@dutyValue
  1483  0067  3003               	movlw	3
  1484  0068  00F3               	movwf	EPWM_LoadDutyValue@dutyValue+1
  1485  0069  220E               	fcall	_EPWM_LoadDutyValue
  1486                           
  1487                           ;main.c: 195: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  1488  006A  0020               	movlb	0	; select bank0
  1489  006B  01C3               	clrf	main@tmp_481
  1490  006C  3032               	movlw	50
  1491  006D  0243               	subwf	main@tmp_481,w
  1492  006E  1803               	btfsc	3,0
  1493  006F  2885               	goto	l1570
  1494  0070                     l1564:	
  1495  0070  3005               	movlw	5
  1496  0071  00C0               	movwf	??_main+2
  1497  0072  300F               	movlw	15
  1498  0073  00BF               	movwf	??_main+1
  1499  0074  30F4               	movlw	244
  1500  0075  00BE               	movwf	??_main
  1501  0076                     u937:	
  1502  0076  0BBE               	decfsz	??_main,f
  1503  0077  2876               	goto	u937
  1504  0078  0BBF               	decfsz	??_main+1,f
  1505  0079  2876               	goto	u937
  1506  007A  0BC0               	decfsz	??_main+2,f
  1507  007B  2876               	goto	u937
  1508  007C  3001               	movlw	1
  1509  007D  0020               	movlb	0	; select bank0
  1510  007E  00BE               	movwf	??_main
  1511  007F  083E               	movf	??_main,w
  1512  0080  07C3               	addwf	main@tmp_481,f
  1513  0081  3032               	movlw	50
  1514  0082  0243               	subwf	main@tmp_481,w
  1515  0083  1C03               	skipc
  1516  0084  2870               	goto	l1564
  1517  0085                     l1570:	
  1518                           ;main.c: 196: while (1)
  1519                           
  1520                           
  1521                           ;main.c: 197: {
  1522                           ;main.c: 198: if (up == 1)
  1523  0085  0020               	movlb	0	; select bank0
  1524  0086  0341               	decf	main@up,w
  1525  0087  1D03               	btfss	3,2
  1526  0088  288E               	goto	l1574
  1527                           
  1528                           ;main.c: 199: motor_load += 1;
  1529  0089  3001               	movlw	1
  1530  008A  07C5               	addwf	main@motor_load,f
  1531  008B  3000               	movlw	0
  1532  008C  3DC6               	addwfc	main@motor_load+1,f
  1533  008D  2892               	goto	l284
  1534  008E                     l1574:	
  1535                           
  1536                           ;main.c: 200: else
  1537                           ;main.c: 201: motor_load -= 1;
  1538  008E  3001               	movlw	1
  1539  008F  02C5               	subwf	main@motor_load,f
  1540  0090  3000               	movlw	0
  1541  0091  3BC6               	subwfb	main@motor_load+1,f
  1542  0092                     l284:	
  1543                           
  1544                           ;main.c: 202: if (motor_load > 300)
  1545  0092  3001               	movlw	1
  1546  0093  0246               	subwf	main@motor_load+1,w
  1547  0094  302D               	movlw	45
  1548  0095  1903               	skipnz
  1549  0096  0245               	subwf	main@motor_load,w
  1550  0097  1C03               	skipc
  1551  0098  289B               	goto	l1578
  1552                           
  1553                           ;main.c: 203: up = 0;
  1554  0099  01C1               	clrf	main@up
  1555  009A  28CF               	goto	l1600
  1556  009B                     l1578:	
  1557                           
  1558                           ;main.c: 204: else if (motor_load == 0)
  1559  009B  0845               	movf	main@motor_load,w
  1560  009C  0446               	iorwf	main@motor_load+1,w
  1561  009D  1D03               	btfss	3,2
  1562  009E  28CF               	goto	l1600
  1563                           
  1564                           ;main.c: 205: {
  1565                           ;main.c: 206: up = 1;
  1566  009F  01C1               	clrf	main@up
  1567  00A0  0AC1               	incf	main@up,f
  1568                           
  1569                           ;main.c: 207: EPWM_LoadDutyValue(1023);
  1570  00A1  30FF               	movlw	255
  1571  00A2  00F2               	movwf	EPWM_LoadDutyValue@dutyValue
  1572  00A3  3003               	movlw	3
  1573  00A4  00F3               	movwf	EPWM_LoadDutyValue@dutyValue+1
  1574  00A5  220E               	fcall	_EPWM_LoadDutyValue
  1575                           
  1576                           ;main.c: 208: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  1577  00A6  0020               	movlb	0	; select bank0
  1578  00A7  01C4               	clrf	main@tmp_482
  1579  00A8  3032               	movlw	50
  1580  00A9  0244               	subwf	main@tmp_482,w
  1581  00AA  1803               	btfsc	3,0
  1582  00AB  28C1               	goto	l1596
  1583  00AC                     l1590:	
  1584  00AC  3005               	movlw	5
  1585  00AD  00C0               	movwf	??_main+2
  1586  00AE  300F               	movlw	15
  1587  00AF  00BF               	movwf	??_main+1
  1588  00B0  30F4               	movlw	244
  1589  00B1  00BE               	movwf	??_main
  1590  00B2                     u947:	
  1591  00B2  0BBE               	decfsz	??_main,f
  1592  00B3  28B2               	goto	u947
  1593  00B4  0BBF               	decfsz	??_main+1,f
  1594  00B5  28B2               	goto	u947
  1595  00B6  0BC0               	decfsz	??_main+2,f
  1596  00B7  28B2               	goto	u947
  1597  00B8  3001               	movlw	1
  1598  00B9  0020               	movlb	0	; select bank0
  1599  00BA  00BE               	movwf	??_main
  1600  00BB  083E               	movf	??_main,w
  1601  00BC  07C4               	addwf	main@tmp_482,f
  1602  00BD  3032               	movlw	50
  1603  00BE  0244               	subwf	main@tmp_482,w
  1604  00BF  1C03               	skipc
  1605  00C0  28AC               	goto	l1590
  1606  00C1                     l1596:	
  1607                           
  1608                           ;main.c: 210: EPWM_LoadDutyValue(0);
  1609  00C1  3000               	movlw	0
  1610  00C2  00F2               	movwf	EPWM_LoadDutyValue@dutyValue
  1611  00C3  00F3               	movwf	EPWM_LoadDutyValue@dutyValue+1
  1612  00C4  220E               	fcall	_EPWM_LoadDutyValue
  1613                           
  1614                           ;main.c: 211: _delay((unsigned long)((10)*(32000000/4000.0)));
  1615  00C5  3068               	movlw	104
  1616  00C6  0020               	movlb	0	; select bank0
  1617  00C7  00BF               	movwf	??_main+1
  1618  00C8  30E4               	movlw	228
  1619  00C9  00BE               	movwf	??_main
  1620  00CA                     u957:	
  1621  00CA  0BBE               	decfsz	??_main,f
  1622  00CB  28CA               	goto	u957
  1623  00CC  0BBF               	decfsz	??_main+1,f
  1624  00CD  28CA               	goto	u957
  1625  00CE  0000               	nop
  1626  00CF                     l1600:	
  1627                           
  1628                           ;main.c: 212: }
  1629                           ;main.c: 213: if (motor_load < 148)
  1630  00CF  3000               	movlw	0
  1631  00D0  0020               	movlb	0	; select bank0
  1632  00D1  0246               	subwf	main@motor_load+1,w
  1633  00D2  3094               	movlw	148
  1634  00D3  1903               	skipnz
  1635  00D4  0245               	subwf	main@motor_load,w
  1636  00D5  1803               	skipnc
  1637  00D6  28DB               	goto	l1604
  1638                           
  1639                           ;main.c: 214: EPWM_LoadDutyValue(1023-135);
  1640  00D7  3078               	movlw	120
  1641  00D8  00F2               	movwf	EPWM_LoadDutyValue@dutyValue
  1642  00D9  3003               	movlw	3
  1643  00DA  28E8               	goto	L1
  1644  00DB                     l1604:	
  1645                           
  1646                           ;main.c: 215: else
  1647                           ;main.c: 216: EPWM_LoadDutyValue(1023-motor_load);
  1648  00DB  0020               	movlb	0	; select bank0
  1649  00DC  0945               	comf	main@motor_load,w
  1650  00DD  00BE               	movwf	??_main
  1651  00DE  0946               	comf	main@motor_load+1,w
  1652  00DF  00BF               	movwf	??_main+1
  1653  00E0  0ABE               	incf	??_main,f
  1654  00E1  1903               	skipnz
  1655  00E2  0ABF               	incf	??_main+1,f
  1656  00E3  083E               	movf	??_main,w
  1657  00E4  3EFF               	addlw	255
  1658  00E5  00F2               	movwf	EPWM_LoadDutyValue@dutyValue
  1659  00E6  3003               	movlw	3
  1660  00E7  3D3F               	addwfc	??_main+1,w
  1661  00E8                     L1:	
  1662  00E8  00F3               	movwf	EPWM_LoadDutyValue@dutyValue+1
  1663  00E9  220E               	fcall	_EPWM_LoadDutyValue
  1664                           
  1665                           ;main.c: 217: _delay((unsigned long)((50)*(32000000/4000.0)));
  1666  00EA  3003               	movlw	3
  1667  00EB  0020               	movlb	0	; select bank0
  1668  00EC  00C0               	movwf	??_main+2
  1669  00ED  3008               	movlw	8
  1670  00EE  00BF               	movwf	??_main+1
  1671  00EF  3078               	movlw	120
  1672  00F0  00BE               	movwf	??_main
  1673  00F1                     u967:	
  1674  00F1  0BBE               	decfsz	??_main,f
  1675  00F2  28F1               	goto	u967
  1676  00F3  0BBF               	decfsz	??_main+1,f
  1677  00F4  28F1               	goto	u967
  1678  00F5  0BC0               	decfsz	??_main+2,f
  1679  00F6  28F1               	goto	u967
  1680  00F7  2885               	goto	l1570
  1681  00F8                     __end_of_main:	
  1682                           
  1683                           	psect	text1
  1684  025E                     __ptext1:	
  1685 ;; *************** function _SYSTEM_Initialize *****************
  1686 ;; Defined at:
  1687 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0, pclath, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1
  1701 ;;      Params:         0       0       0
  1702 ;;      Locals:         0       0       0
  1703 ;;      Temps:          0       0       0
  1704 ;;      Totals:         0       0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    4
  1708 ;; This function calls:
  1709 ;;		_EPWM_Initialize
  1710 ;;		_EUSART_Initialize
  1711 ;;		_OSCILLATOR_Initialize
  1712 ;;		_PIN_MANAGER_Initialize
  1713 ;;		_TMR2_Initialize
  1714 ;; This function is called by:
  1715 ;;		_main
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           
  1720                           ;psect for function _SYSTEM_Initialize
  1721  025E                     _SYSTEM_Initialize:	
  1722                           
  1723                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  1724                           
  1725                           ;incstack = 0
  1726                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1727  025E  2225               	fcall	_PIN_MANAGER_Initialize
  1728                           
  1729                           ;mcc.c: 73: OSCILLATOR_Initialize();
  1730  025F  2250               	fcall	_OSCILLATOR_Initialize
  1731                           
  1732                           ;mcc.c: 74: EPWM_Initialize();
  1733  0260  223B               	fcall	_EPWM_Initialize
  1734                           
  1735                           ;mcc.c: 75: TMR2_Initialize();
  1736  0261  2247               	fcall	_TMR2_Initialize
  1737                           
  1738                           ;mcc.c: 76: EUSART_Initialize();
  1739  0262  21BD               	fcall	_EUSART_Initialize
  1740  0263  0008               	return
  1741  0264                     __end_of_SYSTEM_Initialize:	
  1742                           
  1743                           	psect	text2
  1744  0247                     __ptext2:	
  1745 ;; *************** function _TMR2_Initialize *****************
  1746 ;; Defined at:
  1747 ;;		line 57 in file "mcc_generated_files/tmr2.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2, status,0, pclath, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1
  1761 ;;      Params:         0       0       0
  1762 ;;      Locals:         0       0       0
  1763 ;;      Temps:          0       0       0
  1764 ;;      Totals:         0       0       0
  1765 ;;Total ram usage:        0 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    3
  1768 ;; This function calls:
  1769 ;;		_TMR2_StartTimer
  1770 ;; This function is called by:
  1771 ;;		_SYSTEM_Initialize
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           
  1776                           ;psect for function _TMR2_Initialize
  1777  0247                     _TMR2_Initialize:	
  1778                           
  1779                           ;tmr2.c: 62: T2CON = 0x02;
  1780                           
  1781                           ;incstack = 0
  1782                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1783  0247  3002               	movlw	2
  1784  0248  0020               	movlb	0	; select bank0
  1785  0249  009C               	movwf	28	;volatile
  1786                           
  1787                           ;tmr2.c: 65: PR2 = 0xFF;
  1788  024A  30FF               	movlw	255
  1789  024B  009B               	movwf	27	;volatile
  1790                           
  1791                           ;tmr2.c: 68: TMR2 = 0x00;
  1792  024C  019A               	clrf	26	;volatile
  1793                           
  1794                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
  1795  024D  1091               	bcf	17,1	;volatile
  1796                           
  1797                           ;tmr2.c: 74: TMR2_StartTimer();
  1798  024E  2268               	fcall	_TMR2_StartTimer
  1799  024F  0008               	return
  1800  0250                     __end_of_TMR2_Initialize:	
  1801                           
  1802                           	psect	text3
  1803  0268                     __ptext3:	
  1804 ;; *************** function _TMR2_StartTimer *****************
  1805 ;; Defined at:
  1806 ;;		line 77 in file "mcc_generated_files/tmr2.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		None
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMMON   BANK0   BANK1
  1820 ;;      Params:         0       0       0
  1821 ;;      Locals:         0       0       0
  1822 ;;      Temps:          0       0       0
  1823 ;;      Totals:         0       0       0
  1824 ;;Total ram usage:        0 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    2
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_TMR2_Initialize
  1831 ;;		_main
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           
  1836                           ;psect for function _TMR2_StartTimer
  1837  0268                     _TMR2_StartTimer:	
  1838                           
  1839                           ;tmr2.c: 80: T2CONbits.TMR2ON = 1;
  1840                           
  1841                           ;incstack = 0
  1842                           ; Regs used in _TMR2_StartTimer: []
  1843  0268  0020               	movlb	0	; select bank0
  1844  0269  151C               	bsf	28,2	;volatile
  1845  026A  0008               	return
  1846  026B                     __end_of_TMR2_StartTimer:	
  1847                           
  1848                           	psect	text4
  1849  0225                     __ptext4:	
  1850 ;; *************** function _PIN_MANAGER_Initialize *****************
  1851 ;; Defined at:
  1852 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;		None
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg, status,2
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1
  1866 ;;      Params:         0       0       0
  1867 ;;      Locals:         0       0       0
  1868 ;;      Temps:          0       0       0
  1869 ;;      Totals:         0       0       0
  1870 ;;Total ram usage:        0 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    2
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_SYSTEM_Initialize
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           
  1881                           ;psect for function _PIN_MANAGER_Initialize
  1882  0225                     _PIN_MANAGER_Initialize:	
  1883                           
  1884                           ;pin_manager.c: 51: LATA = 0x0;
  1885                           
  1886                           ;incstack = 0
  1887                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1888  0225  0022               	movlb	2	; select bank2
  1889  0226  018C               	clrf	12	;volatile
  1890                           
  1891                           ;pin_manager.c: 52: LATC = 0x0;
  1892  0227  018E               	clrf	14	;volatile
  1893                           
  1894                           ;pin_manager.c: 53: ANSELA = 0x17;
  1895  0228  3017               	movlw	23
  1896  0229  0023               	movlb	3	; select bank3
  1897  022A  008C               	movwf	12	;volatile
  1898                           
  1899                           ;pin_manager.c: 54: ANSELC = 0xF;
  1900  022B  300F               	movlw	15
  1901  022C  008E               	movwf	14	;volatile
  1902                           
  1903                           ;pin_manager.c: 55: WPUA = 0x3F;
  1904  022D  303F               	movlw	63
  1905  022E  0024               	movlb	4	; select bank4
  1906  022F  008C               	movwf	12	;volatile
  1907                           
  1908                           ;pin_manager.c: 56: WPUC = 0x3F;
  1909  0230  303F               	movlw	63
  1910  0231  008E               	movwf	14	;volatile
  1911                           
  1912                           ;pin_manager.c: 57: TRISC = 0x37;
  1913  0232  3037               	movlw	55
  1914  0233  0021               	movlb	1	; select bank1
  1915  0234  008E               	movwf	14	;volatile
  1916                           
  1917                           ;pin_manager.c: 58: TRISA = 0x1F;
  1918  0235  301F               	movlw	31
  1919  0236  008C               	movwf	12	;volatile
  1920                           
  1921                           ;pin_manager.c: 60: OPTION_REGbits.nWPUEN = 0x0;
  1922  0237  1395               	bcf	21,7	;volatile
  1923                           
  1924                           ;pin_manager.c: 61: APFCON = 0x00;
  1925  0238  0022               	movlb	2	; select bank2
  1926  0239  019D               	clrf	29	;volatile
  1927  023A  0008               	return
  1928  023B                     __end_of_PIN_MANAGER_Initialize:	
  1929                           
  1930                           	psect	text5
  1931  0250                     __ptext5:	
  1932 ;; *************** function _OSCILLATOR_Initialize *****************
  1933 ;; Defined at:
  1934 ;;		line 79 in file "mcc_generated_files/mcc.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;		None
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;		None
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1
  1948 ;;      Params:         0       0       0
  1949 ;;      Locals:         0       0       0
  1950 ;;      Temps:          0       0       0
  1951 ;;      Totals:         0       0       0
  1952 ;;Total ram usage:        0 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    2
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_SYSTEM_Initialize
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function _OSCILLATOR_Initialize
  1964  0250                     _OSCILLATOR_Initialize:	
  1965                           
  1966                           ;mcc.c: 82: OSCCON = 0x70;
  1967                           
  1968                           ;incstack = 0
  1969                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1970  0250  3070               	movlw	112
  1971  0251  0021               	movlb	1	; select bank1
  1972  0252  0099               	movwf	25	;volatile
  1973                           
  1974                           ;mcc.c: 84: OSCSTAT = 0x00;
  1975  0253  019A               	clrf	26	;volatile
  1976                           
  1977                           ;mcc.c: 86: OSCTUNE = 0x00;
  1978  0254  0198               	clrf	24	;volatile
  1979  0255                     l216:	
  1980                           ;mcc.c: 91: {
  1981                           
  1982                           ;mcc.c: 90: while(PLLR == 0)
  1983                           
  1984  0255  1B1A               	btfsc	26,6	;volatile
  1985  0256  0008               	return
  1986  0257  2A55               	goto	l216
  1987  0258                     __end_of_OSCILLATOR_Initialize:	
  1988                           
  1989                           	psect	text6
  1990  01BD                     __ptext6:	
  1991 ;; *************** function _EUSART_Initialize *****************
  1992 ;; Defined at:
  1993 ;;		line 75 in file "mcc_generated_files/eusart.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1
  2007 ;;      Params:         0       0       0
  2008 ;;      Locals:         0       0       0
  2009 ;;      Temps:          1       0       0
  2010 ;;      Totals:         1       0       0
  2011 ;;Total ram usage:        1 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    2
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_SYSTEM_Initialize
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           
  2022                           ;psect for function _EUSART_Initialize
  2023  01BD                     _EUSART_Initialize:	
  2024                           
  2025                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  2026                           
  2027                           ;incstack = 0
  2028                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  2029  01BD  0021               	movlb	1	; select bank1
  2030  01BE  1291               	bcf	17,5	;volatile
  2031                           
  2032                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  2033  01BF  1211               	bcf	17,4	;volatile
  2034                           
  2035                           ;eusart.c: 84: BAUDCON = 0x08;
  2036  01C0  3008               	movlw	8
  2037  01C1  0023               	movlb	3	; select bank3
  2038  01C2  009F               	movwf	31	;volatile
  2039                           
  2040                           ;eusart.c: 87: RCSTA = 0x90;
  2041  01C3  3090               	movlw	144
  2042  01C4  009D               	movwf	29	;volatile
  2043                           
  2044                           ;eusart.c: 90: TXSTA = 0x24;
  2045  01C5  3024               	movlw	36
  2046  01C6  009E               	movwf	30	;volatile
  2047                           
  2048                           ;eusart.c: 93: SPBRGL = 0x40;
  2049  01C7  3040               	movlw	64
  2050  01C8  009B               	movwf	27	;volatile
  2051                           
  2052                           ;eusart.c: 96: SPBRGH = 0x03;
  2053  01C9  3003               	movlw	3
  2054  01CA  009C               	movwf	28	;volatile
  2055                           
  2056                           ;eusart.c: 100: eusartTxHead = 0;
  2057  01CB  0020               	movlb	0	; select bank0
  2058  01CC  01B5               	clrf	_eusartTxHead
  2059                           
  2060                           ;eusart.c: 101: eusartTxTail = 0;
  2061  01CD  01B6               	clrf	_eusartTxTail
  2062                           
  2063                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  2064  01CE  3008               	movlw	8
  2065  01CF  00F2               	movwf	??_EUSART_Initialize
  2066  01D0  0872               	movf	??_EUSART_Initialize,w
  2067  01D1  00FB               	movwf	_eusartTxBufferRemaining	;volatile
  2068                           
  2069                           ;eusart.c: 104: eusartRxHead = 0;
  2070  01D2  01B3               	clrf	_eusartRxHead
  2071                           
  2072                           ;eusart.c: 105: eusartRxTail = 0;
  2073  01D3  01B4               	clrf	_eusartRxTail
  2074                           
  2075                           ;eusart.c: 106: eusartRxCount = 0;
  2076  01D4  01FA               	clrf	_eusartRxCount	;volatile
  2077                           
  2078                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  2079  01D5  0021               	movlb	1	; select bank1
  2080  01D6  1691               	bsf	17,5	;volatile
  2081  01D7  0008               	return
  2082  01D8                     __end_of_EUSART_Initialize:	
  2083                           
  2084                           	psect	text7
  2085  023B                     __ptext7:	
  2086 ;; *************** function _EPWM_Initialize *****************
  2087 ;; Defined at:
  2088 ;;		line 63 in file "mcc_generated_files/epwm.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;		None
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMMON   BANK0   BANK1
  2102 ;;      Params:         0       0       0
  2103 ;;      Locals:         0       0       0
  2104 ;;      Temps:          0       0       0
  2105 ;;      Totals:         0       0       0
  2106 ;;Total ram usage:        0 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    2
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_SYSTEM_Initialize
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           
  2117                           ;psect for function _EPWM_Initialize
  2118  023B                     _EPWM_Initialize:	
  2119                           
  2120                           ;epwm.c: 68: CCP1CON = 0x3C;
  2121                           
  2122                           ;incstack = 0
  2123                           ; Regs used in _EPWM_Initialize: [wreg+status,2]
  2124  023B  303C               	movlw	60
  2125  023C  0025               	movlb	5	; select bank5
  2126  023D  0093               	movwf	19	;volatile
  2127                           
  2128                           ;epwm.c: 71: ECCP1AS = 0x00;
  2129  023E  0195               	clrf	21	;volatile
  2130                           
  2131                           ;epwm.c: 74: PWM1CON = 0x80;
  2132  023F  3080               	movlw	128
  2133  0240  0094               	movwf	20	;volatile
  2134                           
  2135                           ;epwm.c: 77: PSTR1CON = 0x04;
  2136  0241  3004               	movlw	4
  2137  0242  0096               	movwf	22	;volatile
  2138                           
  2139                           ;epwm.c: 80: CCPR1L = 0x7F;
  2140  0243  307F               	movlw	127
  2141  0244  0091               	movwf	17	;volatile
  2142                           
  2143                           ;epwm.c: 83: CCPR1H = 0x00;
  2144  0245  0192               	clrf	18	;volatile
  2145  0246  0008               	return
  2146  0247                     __end_of_EPWM_Initialize:	
  2147                           
  2148                           	psect	text8
  2149  013E                     __ptext8:	
  2150 ;; *************** function _GPS_Initialize *****************
  2151 ;; Defined at:
  2152 ;;		line 64 in file "main.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  tmp             1    5[BANK0 ] unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1
  2166 ;;      Params:         0       0       0
  2167 ;;      Locals:         0       1       0
  2168 ;;      Temps:          0       3       0
  2169 ;;      Totals:         0       4       0
  2170 ;;Total ram usage:        4 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    5
  2173 ;; This function calls:
  2174 ;;		_printf
  2175 ;; This function is called by:
  2176 ;;		_main
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           
  2181                           ;psect for function _GPS_Initialize
  2182  013E                     _GPS_Initialize:	
  2183                           
  2184                           ;main.c: 66: for(unsigned char tmp=0;tmp<(10*1);tmp++){_delay((unsigned long)((100)*(320
      +                          00000/4000.0)));};
  2185                           
  2186                           ;incstack = 0
  2187                           ; Regs used in _GPS_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2188  013E  0020               	movlb	0	; select bank0
  2189  013F  01BD               	clrf	GPS_Initialize@tmp
  2190  0140  300A               	movlw	10
  2191  0141  023D               	subwf	GPS_Initialize@tmp,w
  2192  0142  1803               	btfsc	3,0
  2193  0143  2959               	goto	l1518
  2194  0144                     l1512:	
  2195  0144  3005               	movlw	5
  2196  0145  00BC               	movwf	??_GPS_Initialize+2
  2197  0146  300F               	movlw	15
  2198  0147  00BB               	movwf	??_GPS_Initialize+1
  2199  0148  30F4               	movlw	244
  2200  0149  00BA               	movwf	??_GPS_Initialize
  2201  014A                     u977:	
  2202  014A  0BBA               	decfsz	??_GPS_Initialize,f
  2203  014B  294A               	goto	u977
  2204  014C  0BBB               	decfsz	??_GPS_Initialize+1,f
  2205  014D  294A               	goto	u977
  2206  014E  0BBC               	decfsz	??_GPS_Initialize+2,f
  2207  014F  294A               	goto	u977
  2208  0150  3001               	movlw	1
  2209  0151  0020               	movlb	0	; select bank0
  2210  0152  00BA               	movwf	??_GPS_Initialize
  2211  0153  083A               	movf	??_GPS_Initialize,w
  2212  0154  07BD               	addwf	GPS_Initialize@tmp,f
  2213  0155  300A               	movlw	10
  2214  0156  023D               	subwf	GPS_Initialize@tmp,w
  2215  0157  1C03               	skipc
  2216  0158  2944               	goto	l1512
  2217  0159                     l1518:	
  2218                           
  2219                           ;main.c: 68: printf("$PMTK314,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0*29\r\n");
  2220  0159  30F8               	movlw	low (STR_1| (0+32768))
  2221  015A  00F5               	movwf	printf@f
  2222  015B  3080               	movlw	high (STR_1| (0+32768))
  2223  015C  00F6               	movwf	printf@f+1
  2224  015D  21D8               	fcall	_printf
  2225                           
  2226                           ;main.c: 69: _delay((unsigned long)((100)*(32000000/4000.0)));
  2227  015E  3005               	movlw	5
  2228  015F  0020               	movlb	0	; select bank0
  2229  0160  00BC               	movwf	??_GPS_Initialize+2
  2230  0161  300F               	movlw	15
  2231  0162  00BB               	movwf	??_GPS_Initialize+1
  2232  0163  30F4               	movlw	244
  2233  0164  00BA               	movwf	??_GPS_Initialize
  2234  0165                     u987:	
  2235  0165  0BBA               	decfsz	??_GPS_Initialize,f
  2236  0166  2965               	goto	u987
  2237  0167  0BBB               	decfsz	??_GPS_Initialize+1,f
  2238  0168  2965               	goto	u987
  2239  0169  0BBC               	decfsz	??_GPS_Initialize+2,f
  2240  016A  2965               	goto	u987
  2241                           
  2242                           ;main.c: 70: printf("$PMTK220,100*2F\r\n");
  2243  016B  302C               	movlw	low (STR_2| (0+32768))
  2244  016C  00F5               	movwf	printf@f
  2245  016D  3081               	movlw	high (STR_2| (0+32768))
  2246  016E  00F6               	movwf	printf@f+1
  2247  016F  21D8               	fcall	_printf
  2248                           
  2249                           ;main.c: 71: _delay((unsigned long)((100)*(32000000/4000.0)));
  2250  0170  3005               	movlw	5
  2251  0171  0020               	movlb	0	; select bank0
  2252  0172  00BC               	movwf	??_GPS_Initialize+2
  2253  0173  300F               	movlw	15
  2254  0174  00BB               	movwf	??_GPS_Initialize+1
  2255  0175  30F4               	movlw	244
  2256  0176  00BA               	movwf	??_GPS_Initialize
  2257  0177                     u997:	
  2258  0177  0BBA               	decfsz	??_GPS_Initialize,f
  2259  0178  2977               	goto	u997
  2260  0179  0BBB               	decfsz	??_GPS_Initialize+1,f
  2261  017A  2977               	goto	u997
  2262  017B  0BBC               	decfsz	??_GPS_Initialize+2,f
  2263  017C  2977               	goto	u997
  2264  017D  0008               	return
  2265  017E                     __end_of_GPS_Initialize:	
  2266                           
  2267                           	psect	text9
  2268  01D8                     __ptext9:	
  2269 ;; *************** function _printf *****************
  2270 ;; Defined at:
  2271 ;;		line 464 in file "D:\Program Files\Microchip\xc8\v1.38\sources\common\doprnt.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  f               2    5[COMMON] PTR const unsigned char 
  2274 ;;		 -> STR_2(18), STR_1(52), 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  tmpval          4    0        struct .
  2277 ;;  cp              2    0        PTR const unsigned char 
  2278 ;;  len             2    0        unsigned int 
  2279 ;;  val             2    0        unsigned int 
  2280 ;;  c               1    1[BANK0 ] char 
  2281 ;;  ap              1    0[BANK0 ] PTR void [1]
  2282 ;;		 -> ?_printf(2), 
  2283 ;;  flag            1    0        unsigned char 
  2284 ;;  prec            1    0        char 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  2    5[COMMON] int 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1
  2294 ;;      Params:         2       0       0
  2295 ;;      Locals:         0       2       0
  2296 ;;      Temps:          3       0       0
  2297 ;;      Totals:         5       2       0
  2298 ;;Total ram usage:        7 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; Hardware stack levels required when called:    4
  2301 ;; This function calls:
  2302 ;;		_putch
  2303 ;; This function is called by:
  2304 ;;		_GPS_Initialize
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           
  2309                           ;psect for function _printf
  2310  01D8                     _printf:	
  2311                           
  2312                           ;doprnt.c: 466: va_list ap;
  2313                           ;doprnt.c: 499: signed char c;
  2314                           ;doprnt.c: 506: signed char prec;
  2315                           ;doprnt.c: 508: unsigned char flag;
  2316                           ;doprnt.c: 523: union {
  2317                           ;doprnt.c: 524: unsigned long vd;
  2318                           ;doprnt.c: 525: double integ;
  2319                           ;doprnt.c: 526: } tmpval;
  2320                           ;doprnt.c: 528: unsigned int val;
  2321                           ;doprnt.c: 529: unsigned len;
  2322                           ;doprnt.c: 530: const char * cp;
  2323                           ;doprnt.c: 533: *ap = __va_start();
  2324                           
  2325                           ;incstack = 0
  2326                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2327  01D8  3077               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2328  01D9  00F7               	movwf	??_printf
  2329  01DA  0877               	movf	??_printf,w
  2330  01DB  0020               	movlb	0	; select bank0
  2331  01DC  00B8               	movwf	printf@ap
  2332  01DD                     l1504:	
  2333                           ;doprnt.c: 543: }
  2334                           ;doprnt.c: 1422: {
  2335                           
  2336                           ;doprnt.c: 542: continue;
  2337                           
  2338                           ;doprnt.c: 536: while(c = *f++) {
  2339                           
  2340  01DD  0876               	movf	printf@f+1,w
  2341  01DE  00F8               	movwf	??_printf+1
  2342  01DF  0875               	movf	printf@f,w
  2343  01E0  00F7               	movwf	??_printf
  2344  01E1  0AF5               	incf	printf@f,f
  2345  01E2  1903               	skipnz
  2346  01E3  0AF6               	incf	printf@f+1,f
  2347  01E4  0877               	movf	??_printf,w
  2348  01E5  0084               	movwf	4
  2349  01E6  0878               	movf	??_printf+1,w
  2350  01E7  0085               	movwf	5
  2351  01E8  0800               	movf	0,w	;code access
  2352  01E9  00F9               	movwf	??_printf+2
  2353  01EA  0879               	movf	??_printf+2,w
  2354  01EB  0020               	movlb	0	; select bank0
  2355  01EC  00B9               	movwf	printf@c
  2356  01ED  0839               	movf	printf@c,w
  2357  01EE  1903               	btfsc	3,2
  2358  01EF  0008               	return
  2359                           
  2360                           ;doprnt.c: 540: {
  2361                           ;doprnt.c: 541: (putch(c) );
  2362  01F0  0839               	movf	printf@c,w
  2363  01F1  2264               	fcall	_putch
  2364  01F2  29DD               	goto	l1504
  2365  01F3                     __end_of_printf:	
  2366                           ;doprnt.c: 1469: }
  2367                           ;doprnt.c: 1533: }
  2368                           ;doprnt.c: 1540: return 0;
  2369                           ;	Return value of _printf is never used
  2370                           
  2371                           
  2372                           	psect	text10
  2373  0264                     __ptext10:	
  2374 ;; *************** function _putch *****************
  2375 ;; Defined at:
  2376 ;;		line 164 in file "mcc_generated_files/eusart.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  txData          1    wreg     unsigned char 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;  txData          1    4[COMMON] unsigned char 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  1    wreg      void 
  2383 ;; Registers used:
  2384 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMMON   BANK0   BANK1
  2390 ;;      Params:         0       0       0
  2391 ;;      Locals:         1       0       0
  2392 ;;      Temps:          0       0       0
  2393 ;;      Totals:         1       0       0
  2394 ;;Total ram usage:        1 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:    3
  2397 ;; This function calls:
  2398 ;;		_EUSART_Write
  2399 ;; This function is called by:
  2400 ;;		_printf
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           
  2405                           ;psect for function _putch
  2406  0264                     _putch:	
  2407                           
  2408                           ;incstack = 0
  2409                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2410                           ;putch@txData stored from wreg
  2411  0264  00F4               	movwf	putch@txData
  2412                           
  2413                           ;eusart.c: 166: EUSART_Write(txData);
  2414  0265  0874               	movf	putch@txData,w
  2415  0266  217E               	fcall	_EUSART_Write
  2416  0267  0008               	return
  2417  0268                     __end_of_putch:	
  2418                           
  2419                           	psect	text11
  2420  017E                     __ptext11:	
  2421 ;; *************** function _EUSART_Write *****************
  2422 ;; Defined at:
  2423 ;;		line 136 in file "mcc_generated_files/eusart.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  txData          1    wreg     unsigned char 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  txData          1    3[COMMON] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1
  2437 ;;      Params:         0       0       0
  2438 ;;      Locals:         1       0       0
  2439 ;;      Temps:          1       0       0
  2440 ;;      Totals:         2       0       0
  2441 ;;Total ram usage:        2 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    2
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_putch
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           
  2452                           ;psect for function _EUSART_Write
  2453  017E                     _EUSART_Write:	
  2454                           
  2455                           ;incstack = 0
  2456                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  2457                           ;EUSART_Write@txData stored from wreg
  2458  017E  00F3               	movwf	EUSART_Write@txData
  2459  017F                     l1482:	
  2460                           ;eusart.c: 139: {
  2461                           
  2462                           ;eusart.c: 138: while(0 == eusartTxBufferRemaining)
  2463                           
  2464  017F  087B               	movf	_eusartTxBufferRemaining,w	;volatile
  2465  0180  1903               	btfsc	3,2
  2466  0181  297F               	goto	l1482
  2467                           
  2468                           ;eusart.c: 140: }
  2469                           ;eusart.c: 142: if(0 == PIE1bits.TXIE)
  2470  0182  0021               	movlb	1	; select bank1
  2471  0183  1A11               	btfsc	17,4	;volatile
  2472  0184  2989               	goto	l131
  2473                           
  2474                           ;eusart.c: 143: {
  2475                           ;eusart.c: 144: TXREG = txData;
  2476  0185  0873               	movf	EUSART_Write@txData,w
  2477  0186  0023               	movlb	3	; select bank3
  2478  0187  009A               	movwf	26	;volatile
  2479                           
  2480                           ;eusart.c: 145: }
  2481  0188  299D               	goto	l1496
  2482  0189                     l131:	
  2483                           
  2484                           ;eusart.c: 146: else
  2485                           ;eusart.c: 147: {
  2486                           ;eusart.c: 148: PIE1bits.TXIE = 0;
  2487  0189  1211               	bcf	17,4	;volatile
  2488                           
  2489                           ;eusart.c: 149: eusartTxBuffer[eusartTxHead++] = txData;
  2490  018A  0873               	movf	EUSART_Write@txData,w
  2491  018B  00F2               	movwf	??_EUSART_Write
  2492  018C  0020               	movlb	0	; select bank0
  2493  018D  0835               	movf	_eusartTxHead,w
  2494  018E  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2495  018F  0086               	movwf	6
  2496  0190  0187               	clrf	7
  2497  0191  0872               	movf	??_EUSART_Write,w
  2498  0192  0081               	movwf	1
  2499  0193  3001               	movlw	1
  2500  0194  00F2               	movwf	??_EUSART_Write
  2501  0195  0872               	movf	??_EUSART_Write,w
  2502  0196  07B5               	addwf	_eusartTxHead,f
  2503                           
  2504                           ;eusart.c: 150: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  2505  0197  3008               	movlw	8
  2506  0198  0235               	subwf	_eusartTxHead,w
  2507  0199  1803               	btfsc	3,0
  2508                           
  2509                           ;eusart.c: 151: {
  2510                           ;eusart.c: 152: eusartTxHead = 0;
  2511  019A  01B5               	clrf	_eusartTxHead
  2512                           
  2513                           ;eusart.c: 153: }
  2514                           ;eusart.c: 154: eusartTxBufferRemaining--;
  2515  019B  3001               	movlw	1
  2516  019C  02FB               	subwf	_eusartTxBufferRemaining,f	;volatile
  2517  019D                     l1496:	
  2518                           
  2519                           ;eusart.c: 155: }
  2520                           ;eusart.c: 156: PIE1bits.TXIE = 1;
  2521  019D  0021               	movlb	1	; select bank1
  2522  019E  1611               	bsf	17,4	;volatile
  2523  019F  0008               	return
  2524  01A0                     __end_of_EUSART_Write:	
  2525                           
  2526                           	psect	text12
  2527  020E                     __ptext12:	
  2528 ;; *************** function _EPWM_LoadDutyValue *****************
  2529 ;; Defined at:
  2530 ;;		line 87 in file "mcc_generated_files/epwm.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  dutyValue       2    2[COMMON] unsigned int 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		wreg, status,2, status,0
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMMON   BANK0   BANK1
  2544 ;;      Params:         2       0       0
  2545 ;;      Locals:         0       0       0
  2546 ;;      Temps:          2       0       0
  2547 ;;      Totals:         4       0       0
  2548 ;;Total ram usage:        4 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:    2
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_main
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           
  2559                           ;psect for function _EPWM_LoadDutyValue
  2560  020E                     _EPWM_LoadDutyValue:	
  2561                           
  2562                           ;epwm.c: 90: CCPR1L = ((dutyValue & 0x03FC)>>2);
  2563                           
  2564                           ;incstack = 0
  2565                           ; Regs used in _EPWM_LoadDutyValue: [wreg+status,2+status,0]
  2566  020E  0873               	movf	EPWM_LoadDutyValue@dutyValue+1,w
  2567  020F  00F5               	movwf	??_EPWM_LoadDutyValue+1
  2568  0210  0872               	movf	EPWM_LoadDutyValue@dutyValue,w
  2569  0211  00F4               	movwf	??_EPWM_LoadDutyValue
  2570  0212  36F5               	lsrf	??_EPWM_LoadDutyValue+1,f
  2571  0213  0CF4               	rrf	??_EPWM_LoadDutyValue,f
  2572  0214  36F5               	lsrf	??_EPWM_LoadDutyValue+1,f
  2573  0215  0CF4               	rrf	??_EPWM_LoadDutyValue,f
  2574  0216  0874               	movf	??_EPWM_LoadDutyValue,w
  2575  0217  0025               	movlb	5	; select bank5
  2576  0218  0091               	movwf	17	;volatile
  2577                           
  2578                           ;epwm.c: 93: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  2579  0219  0872               	movf	EPWM_LoadDutyValue@dutyValue,w
  2580  021A  3903               	andlw	3
  2581  021B  00F4               	movwf	??_EPWM_LoadDutyValue
  2582  021C  3004               	movlw	4
  2583  021D                     u535:	
  2584  021D  35F4               	lslf	??_EPWM_LoadDutyValue,f
  2585  021E  0B89               	decfsz	9,f
  2586  021F  2A1D               	goto	u535
  2587  0220  0813               	movf	19,w	;volatile
  2588  0221  39CF               	andlw	207
  2589  0222  0474               	iorwf	??_EPWM_LoadDutyValue,w
  2590  0223  0093               	movwf	19	;volatile
  2591  0224  0008               	return
  2592  0225                     __end_of_EPWM_LoadDutyValue:	
  2593                           
  2594                           	psect	intentry
  2595  0004                     __pintentry:	
  2596 ;; *************** function _INTERRUPT_InterruptManager *****************
  2597 ;; Defined at:
  2598 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMMON   BANK0   BANK1
  2612 ;;      Params:         0       0       0
  2613 ;;      Locals:         0       0       0
  2614 ;;      Temps:          1       0       0
  2615 ;;      Totals:         1       0       0
  2616 ;;Total ram usage:        1 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:    1
  2619 ;; This function calls:
  2620 ;;		_EUSART_Receive_ISR
  2621 ;;		_EUSART_Transmit_ISR
  2622 ;; This function is called by:
  2623 ;;		Interrupt level 1
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627  0004                     _INTERRUPT_InterruptManager:	
  2628                           
  2629                           ;incstack = 0
  2630  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2631                           
  2632                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2633  0005  3180               	pagesel	$
  2634  0006  0020               	movlb	0	; select bank0
  2635  0007  087F               	movf	127,w
  2636  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  2637                           
  2638                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits.TXIF
      +                           == 1)
  2639  0009  1F0B               	btfss	11,6	;volatile
  2640  000A  2812               	goto	i1l1374
  2641  000B  0021               	movlb	1	; select bank1
  2642  000C  1E11               	btfss	17,4	;volatile
  2643  000D  2812               	goto	i1l1374
  2644  000E  0020               	movlb	0	; select bank0
  2645  000F  1E11               	btfss	17,4	;volatile
  2646  0010  2812               	goto	i1l1374
  2647                           
  2648                           ;interrupt_manager.c: 55: {
  2649                           ;interrupt_manager.c: 56: EUSART_Transmit_ISR();
  2650  0011  21A0               	fcall	_EUSART_Transmit_ISR
  2651  0012                     i1l1374:	
  2652                           
  2653                           ;interrupt_manager.c: 57: }
  2654                           ;interrupt_manager.c: 58: if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits.RCIF
      +                           == 1)
  2655  0012  1F0B               	btfss	11,6	;volatile
  2656  0013  281B               	goto	i1l235
  2657  0014  0021               	movlb	1	; select bank1
  2658  0015  1E91               	btfss	17,5	;volatile
  2659  0016  281B               	goto	i1l235
  2660  0017  0020               	movlb	0	; select bank0
  2661  0018  1E91               	btfss	17,5	;volatile
  2662  0019  281B               	goto	i1l235
  2663                           
  2664                           ;interrupt_manager.c: 59: {
  2665                           ;interrupt_manager.c: 60: EUSART_Receive_ISR();
  2666  001A  21F3               	fcall	_EUSART_Receive_ISR
  2667  001B                     i1l235:	
  2668                           ;interrupt_manager.c: 62: else
  2669                           ;interrupt_manager.c: 63: {
  2670                           
  2671                           ;interrupt_manager.c: 61: }
  2672                           
  2673  001B  0871               	movf	??_INTERRUPT_InterruptManager,w
  2674  001C  0020               	movlb	0	; select bank0
  2675  001D  00FF               	movwf	127
  2676  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2677  001F  0009               	retfie
  2678  0020                     __end_of_INTERRUPT_InterruptManager:	
  2679                           
  2680                           	psect	text14
  2681  01A0                     __ptext14:	
  2682 ;; *************** function _EUSART_Transmit_ISR *****************
  2683 ;; Defined at:
  2684 ;;		line 169 in file "mcc_generated_files/eusart.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;		None
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1
  2698 ;;      Params:         0       0       0
  2699 ;;      Locals:         0       0       0
  2700 ;;      Temps:          1       0       0
  2701 ;;      Totals:         1       0       0
  2702 ;;Total ram usage:        1 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; This function calls:
  2705 ;;		Nothing
  2706 ;; This function is called by:
  2707 ;;		_INTERRUPT_InterruptManager
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           
  2712                           ;psect for function _EUSART_Transmit_ISR
  2713  01A0                     _EUSART_Transmit_ISR:	
  2714                           
  2715                           ;eusart.c: 173: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  2716                           
  2717                           ;incstack = 0
  2718                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2719  01A0  3008               	movlw	8
  2720  01A1  027B               	subwf	_eusartTxBufferRemaining,w	;volatile
  2721  01A2  1803               	skipnc
  2722  01A3  29BA               	goto	i1l143
  2723                           
  2724                           ;eusart.c: 174: {
  2725                           ;eusart.c: 175: TXREG = eusartTxBuffer[eusartTxTail++];
  2726  01A4  0020               	movlb	0	; select bank0
  2727  01A5  0836               	movf	_eusartTxTail,w
  2728  01A6  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2729  01A7  0086               	movwf	6
  2730  01A8  0187               	clrf	7
  2731  01A9  0801               	movf	1,w
  2732  01AA  0023               	movlb	3	; select bank3
  2733  01AB  009A               	movwf	26	;volatile
  2734  01AC  3001               	movlw	1
  2735  01AD  00F0               	movwf	??_EUSART_Transmit_ISR
  2736  01AE  0870               	movf	??_EUSART_Transmit_ISR,w
  2737  01AF  0020               	movlb	0	; select bank0
  2738  01B0  07B6               	addwf	_eusartTxTail,f
  2739                           
  2740                           ;eusart.c: 176: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  2741  01B1  3008               	movlw	8
  2742  01B2  0236               	subwf	_eusartTxTail,w
  2743  01B3  1803               	btfsc	3,0
  2744                           
  2745                           ;eusart.c: 177: {
  2746                           ;eusart.c: 178: eusartTxTail = 0;
  2747  01B4  01B6               	clrf	_eusartTxTail
  2748                           
  2749                           ;eusart.c: 179: }
  2750                           ;eusart.c: 180: eusartTxBufferRemaining++;
  2751  01B5  3001               	movlw	1
  2752  01B6  00F0               	movwf	??_EUSART_Transmit_ISR
  2753  01B7  0870               	movf	??_EUSART_Transmit_ISR,w
  2754  01B8  07FB               	addwf	_eusartTxBufferRemaining,f	;volatile
  2755                           
  2756                           ;eusart.c: 181: }
  2757  01B9  0008               	return
  2758  01BA                     i1l143:	
  2759                           
  2760                           ;eusart.c: 182: else
  2761                           ;eusart.c: 183: {
  2762                           ;eusart.c: 184: PIE1bits.TXIE = 0;
  2763  01BA  0021               	movlb	1	; select bank1
  2764  01BB  1211               	bcf	17,4	;volatile
  2765  01BC  0008               	return
  2766  01BD                     __end_of_EUSART_Transmit_ISR:	
  2767                           
  2768                           	psect	text15
  2769  01F3                     __ptext15:	
  2770 ;; *************** function _EUSART_Receive_ISR *****************
  2771 ;; Defined at:
  2772 ;;		line 188 in file "mcc_generated_files/eusart.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;		None
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;		None
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMMON   BANK0   BANK1
  2786 ;;      Params:         0       0       0
  2787 ;;      Locals:         0       0       0
  2788 ;;      Temps:          1       0       0
  2789 ;;      Totals:         1       0       0
  2790 ;;Total ram usage:        1 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_INTERRUPT_InterruptManager
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           
  2800                           ;psect for function _EUSART_Receive_ISR
  2801  01F3                     _EUSART_Receive_ISR:	
  2802                           
  2803                           ;eusart.c: 191: if(1 == RCSTAbits.OERR)
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2807  01F3  0023               	movlb	3	; select bank3
  2808  01F4  1C9D               	btfss	29,1	;volatile
  2809  01F5  29F8               	goto	i1l1330
  2810                           
  2811                           ;eusart.c: 192: {
  2812                           ;eusart.c: 195: RCSTAbits.SPEN = 0;
  2813  01F6  139D               	bcf	29,7	;volatile
  2814                           
  2815                           ;eusart.c: 196: RCSTAbits.SPEN = 1;
  2816  01F7  179D               	bsf	29,7	;volatile
  2817  01F8                     i1l1330:	
  2818                           
  2819                           ;eusart.c: 197: }
  2820                           ;eusart.c: 200: eusartRxBuffer[eusartRxHead++] = RCREG;
  2821  01F8  0819               	movf	25,w	;volatile
  2822  01F9  00F0               	movwf	??_EUSART_Receive_ISR
  2823  01FA  0020               	movlb	0	; select bank0
  2824  01FB  0833               	movf	_eusartRxHead,w
  2825  01FC  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  2826  01FD  0086               	movwf	6
  2827  01FE  0187               	clrf	7
  2828  01FF  0870               	movf	??_EUSART_Receive_ISR,w
  2829  0200  0081               	movwf	1
  2830  0201  3001               	movlw	1
  2831  0202  00F0               	movwf	??_EUSART_Receive_ISR
  2832  0203  0870               	movf	??_EUSART_Receive_ISR,w
  2833  0204  07B3               	addwf	_eusartRxHead,f
  2834                           
  2835                           ;eusart.c: 201: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  2836  0205  3008               	movlw	8
  2837  0206  0233               	subwf	_eusartRxHead,w
  2838  0207  1803               	btfsc	3,0
  2839                           
  2840                           ;eusart.c: 202: {
  2841                           ;eusart.c: 203: eusartRxHead = 0;
  2842  0208  01B3               	clrf	_eusartRxHead
  2843                           
  2844                           ;eusart.c: 204: }
  2845                           ;eusart.c: 205: eusartRxCount++;
  2846  0209  3001               	movlw	1
  2847  020A  00F0               	movwf	??_EUSART_Receive_ISR
  2848  020B  0870               	movf	??_EUSART_Receive_ISR,w
  2849  020C  07FA               	addwf	_eusartRxCount,f	;volatile
  2850  020D  0008               	return
  2851  020E                     __end_of_EUSART_Receive_ISR:	
  2852  007E                     btemp	set	126	;btemp
  2853  007E                     int$flags	set	126
  2854  007E                     wtemp	set	126
  2855  007E                     wtemp0	set	126
  2856  0080                     wtemp1	set	128
  2857  0082                     wtemp2	set	130
  2858  0084                     wtemp3	set	132
  2859  0086                     wtemp4	set	134
  2860  0088                     wtemp5	set	136
  2861  007F                     wtemp6	set	127
  2862  007E                     ttemp	set	126
  2863  007E                     ttemp0	set	126
  2864  0081                     ttemp1	set	129
  2865  0084                     ttemp2	set	132
  2866  0087                     ttemp3	set	135
  2867  007F                     ttemp4	set	127
  2868  007E                     ltemp	set	126
  2869  007E                     ltemp0	set	126
  2870  0082                     ltemp1	set	130
  2871  0086                     ltemp2	set	134
  2872  0080                     ltemp3	set	128


Data Sizes:
    Strings     70
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     15      39
    BANK1            32      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_2(CODE[18]), STR_1(CODE[52]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_EUSART_Initialize
    _GPS_Initialize->_printf
    _printf->_putch
    _putch->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_GPS_Initialize
    _GPS_Initialize->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    1252
                                              6 BANK0      9     9      0
                 _EPWM_LoadDutyValue
                     _GPS_Initialize
                  _SYSTEM_Initialize
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _EPWM_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EPWM_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPS_Initialize                                       4     4      0     383
                                              2 BANK0      4     4      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              19    17      2     315
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      93
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _EPWM_LoadDutyValue                                   4     2      2     492
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (6) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM_LoadDutyValue
   _GPS_Initialize
     _printf
       _putch
         _EUSART_Write
   _SYSTEM_Initialize
     _EPWM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   _TMR2_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      33       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      F      27       6       48.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      33       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Sep 13 08:34:21 2016

                        __CFG_CP$OFF 0000                                  l131 0189  
                                l216 0255                                  l284 0092  
                                _PR2 001B                         __CFG_CPD$OFF 0000  
                                u535 021D                                  u917 0044  
                                u927 0060                                  u937 0076  
                                u947 00B2                                  u957 00CA  
                                u967 00F1                                  u977 014A  
                                u987 0165                                  u997 0177  
                    _TMR2_Initialize 0247                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
                       __CFG_LVP$OFF 0000                                 l1504 01DD  
                               l1512 0144                                 l1600 00CF  
                               l1604 00DB                                 l1518 0159  
                               l1542 003E                                 l1482 017F  
                               l1570 0085                                 l1564 0070  
                               l1548 0053                                 l1590 00AC  
                               l1574 008E                                 l1496 019D  
                               l1578 009B                                 l1596 00C1  
                               STR_1 00F8                                 STR_2 012C  
                               _LATA 010C                                 _LATC 010E  
                               _PLLR 04D6                                 _TMR2 001A  
                               _WPUA 020C                                 _WPUC 020E  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                        main@tmp_481 0043                          main@tmp_482 0044  
                               _main 002C                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                               start 0020                                 ttemp 007E  
                               wtemp 007E                        __CFG_MCLRE$ON 0000  
                      __CFG_PLLEN$ON 0000                        ?_EUSART_Write 0070  
     __size_of_OSCILLATOR_Initialize 0008        __end_of_OSCILLATOR_Initialize 0258  
                              ?_main 0070                        __CFG_WDTE$OFF 0000  
                              _T2CON 001C                                _LATA5 0865  
                              i1l143 01BA                                i1l235 001B  
                              _RCREG 0199                                _RCSTA 019D  
                              _TRISA 008C                                _TRISC 008E  
                              _TXREG 019A                                _TXSTA 019E  
                   ??_GPS_Initialize 003A                                _speed 0030  
                              _putch 0264                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                    _TMR2_StartTimer 0268                      __initialization 0021  
                       __end_of_main 00F8                       ??_EUSART_Write 0072  
            __end_of_TMR2_Initialize 0250          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 003E                               _EEADRH 0192  
                             _EEADRL 0191                               _CCPR1H 0292  
                             _EEDATH 0194                               _CCPR1L 0291  
                             _EEDATL 0193                               _EECON2 0196  
                             _APFCON 011D                               _ANSELA 018C  
                             ?_putch 0070                               _ANSELC 018E  
                             i1l1330 01F8                               i1l1374 0012  
                             _OSCCON 0099                               _SPBRGH 019C  
                             _SPBRGL 019B                       __CFG_PWRTE$OFF 0000  
                     __CFG_STVREN$ON 0000                  _EUSART_Transmit_ISR 01A0  
                             _printf 01D8                               main@up 0041  
           __size_of_EPWM_Initialize 000C              __end_of_TMR2_StartTimer 026B  
               ?_EUSART_Transmit_ISR 0070          __size_of_EPWM_LoadDutyValue 0017  
                  _SYSTEM_Initialize 025E              __end_of__initialization 0029  
                 ?_SYSTEM_Initialize 0070                       __pcstackCOMMON 0070  
                ??_SYSTEM_Initialize 0073                        __end_of_putch 0268  
                   ?_TMR2_Initialize 0070                       _OPTION_REGbits 0095  
          __end_of_SYSTEM_Initialize 0264                ??_EUSART_Transmit_ISR 0070  
                            ??_putch 0074                           __pbssBANK0 0020  
               __end_of_EUSART_Write 01A0          __size_of_EUSART_Receive_ISR 001B  
                         __pmaintext 002C                           __pintentry 0004  
                            _CCP1CON 0293                              _ECCP1AS 0295  
                            _BAUDCON 019F                              ?_printf 0075  
                      _eusartRxCount 007A                              _OSCSTAT 009A  
                            _OSCTUNE 0098                              _PWM1CON 0294  
                   ?_TMR2_StartTimer 0070                    ??_EPWM_Initialize 0072  
                            __ptext1 025E                              __ptext2 0247  
                            __ptext3 0268                              __ptext4 0225  
                            __ptext5 0250                              __ptext6 01BD  
                            __ptext7 023B                              __ptext8 013E  
                            __ptext9 01D8                      __size_of_printf 001B  
              _OSCILLATOR_Initialize 0250                            _T2CONbits 001C  
           ??_PIN_MANAGER_Initialize 0072           __size_of_SYSTEM_Initialize 0006  
                            clrloop0 0259                              main@tmp 0042  
                     main@motor_load 0045                 end_of_initialization 0029  
        EPWM_LoadDutyValue@dutyValue 0072                    _EUSART_Initialize 01BD  
                 ?_EUSART_Initialize 0070                            _RCSTAbits 019D  
                            printf@c 0039                              printf@f 0075  
                       __pstringtext 00F8                  ??_EUSART_Initialize 0072  
                   __CFG_FOSC$INTOSC 0000                __size_of_EUSART_Write 0022  
          __end_of_EUSART_Initialize 01D8              __size_of_GPS_Initialize 0040  
                       _EUSART_Write 017E               ?_OSCILLATOR_Initialize 0070  
                     __end_of_printf 01F3                  start_initialization 0021  
    __size_of_PIN_MANAGER_Initialize 0016           __end_of_EPWM_LoadDutyValue 0225  
                        putch@txData 0074                             ??_printf 0077  
                    _EPWM_Initialize 023B          __end_of_EUSART_Transmit_ISR 01BD  
                        __pbssCOMMON 007A                            ___latbits 0000  
                      __pcstackBANK0 0038             __size_of_TMR2_Initialize 0009  
         __end_of_EUSART_Receive_ISR 020E           __size_of_EUSART_Initialize 001B  
             _PIN_MANAGER_Initialize 0225                         _eusartRxHead 0033  
                       _eusartTxHead 0035                         _eusartRxTail 0034  
                       _eusartTxTail 0036         ??_INTERRUPT_InterruptManager 0071  
            _eusartTxBufferRemaining 007B                       __size_of_putch 0004  
                     _eusartRxBuffer 0020                       _GPS_Initialize 013E  
                     _eusartTxBuffer 0028                            clear_ram0 0258  
                           _PIE1bits 0091             __size_of_TMR2_StartTimer 0003  
__size_of_INTERRUPT_InterruptManager 001C                             _PIR1bits 0011  
                           _PSTR1CON 0296              __end_of_EPWM_Initialize 0247  
             __end_of_GPS_Initialize 017E                    ??_TMR2_Initialize 0072  
                         _EECON1bits 0195                    GPS_Initialize@tmp 003D  
            ??_OSCILLATOR_Initialize 0072                             __ptext10 0264  
                           __ptext11 017E                             __ptext12 020E  
                           __ptext14 01A0                             __ptext15 01F3  
                    ?_GPS_Initialize 0070                        __size_of_main 00CC  
                 _EPWM_LoadDutyValue 020E                             int$flags 007E  
                   ?_EPWM_Initialize 0070                    ??_TMR2_StartTimer 0072  
 __end_of_INTERRUPT_InterruptManager 0020           _INTERRUPT_InterruptManager 0004  
                ?_EPWM_LoadDutyValue 0072                           _INTCONbits 000B  
               ??_EPWM_LoadDutyValue 0074                             intlevel1 0000  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                           printf@ap 0038                   _EUSART_Receive_ISR 01F3  
                ?_EUSART_Receive_ISR 0070                          _speed_units 0037  
                 EUSART_Write@txData 0073         __size_of_EUSART_Transmit_ISR 001D  
     __end_of_PIN_MANAGER_Initialize 023B                 ??_EUSART_Receive_ISR 0070  



Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Sep 16 09:23:06 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     	;# 
    41  0001                     	;# 
    42  0002                     	;# 
    43  0003                     	;# 
    44  0004                     	;# 
    45  0005                     	;# 
    46  0006                     	;# 
    47  0007                     	;# 
    48  0008                     	;# 
    49  0009                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000E                     	;# 
    54  0011                     	;# 
    55  0012                     	;# 
    56  0015                     	;# 
    57  0016                     	;# 
    58  0016                     	;# 
    59  0017                     	;# 
    60  0018                     	;# 
    61  0019                     	;# 
    62  001A                     	;# 
    63  001B                     	;# 
    64  001C                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  008C                     	;# 
    68  008E                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0095                     	;# 
    72  0096                     	;# 
    73  0097                     	;# 
    74  0098                     	;# 
    75  0099                     	;# 
    76  009A                     	;# 
    77  009B                     	;# 
    78  009B                     	;# 
    79  009C                     	;# 
    80  009D                     	;# 
    81  009E                     	;# 
    82  010C                     	;# 
    83  010E                     	;# 
    84  0111                     	;# 
    85  0112                     	;# 
    86  0113                     	;# 
    87  0114                     	;# 
    88  0115                     	;# 
    89  0116                     	;# 
    90  0117                     	;# 
    91  0118                     	;# 
    92  0119                     	;# 
    93  011A                     	;# 
    94  011B                     	;# 
    95  011D                     	;# 
    96  011D                     	;# 
    97  018C                     	;# 
    98  018E                     	;# 
    99  0191                     	;# 
   100  0191                     	;# 
   101  0192                     	;# 
   102  0193                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0194                     	;# 
   106  0195                     	;# 
   107  0196                     	;# 
   108  0199                     	;# 
   109  019A                     	;# 
   110  019B                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019C                     	;# 
   115  019C                     	;# 
   116  019D                     	;# 
   117  019E                     	;# 
   118  019F                     	;# 
   119  020C                     	;# 
   120  020E                     	;# 
   121  0211                     	;# 
   122  0211                     	;# 
   123  0212                     	;# 
   124  0212                     	;# 
   125  0213                     	;# 
   126  0213                     	;# 
   127  0214                     	;# 
   128  0214                     	;# 
   129  0215                     	;# 
   130  0215                     	;# 
   131  0215                     	;# 
   132  0216                     	;# 
   133  0216                     	;# 
   134  0217                     	;# 
   135  0217                     	;# 
   136  0291                     	;# 
   137  0291                     	;# 
   138  0292                     	;# 
   139  0293                     	;# 
   140  0294                     	;# 
   141  0295                     	;# 
   142  0295                     	;# 
   143  0296                     	;# 
   144  0391                     	;# 
   145  0392                     	;# 
   146  0393                     	;# 
   147  039A                     	;# 
   148  039C                     	;# 
   149  039D                     	;# 
   150  039E                     	;# 
   151  039F                     	;# 
   152  0FE4                     	;# 
   153  0FE5                     	;# 
   154  0FE6                     	;# 
   155  0FE7                     	;# 
   156  0FE8                     	;# 
   157  0FE9                     	;# 
   158  0FEA                     	;# 
   159  0FEB                     	;# 
   160  0FED                     	;# 
   161  0FEE                     	;# 
   162  0FEF                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000E                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  008C                     	;# 
   191  008E                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  010C                     	;# 
   206  010E                     	;# 
   207  0111                     	;# 
   208  0112                     	;# 
   209  0113                     	;# 
   210  0114                     	;# 
   211  0115                     	;# 
   212  0116                     	;# 
   213  0117                     	;# 
   214  0118                     	;# 
   215  0119                     	;# 
   216  011A                     	;# 
   217  011B                     	;# 
   218  011D                     	;# 
   219  011D                     	;# 
   220  018C                     	;# 
   221  018E                     	;# 
   222  0191                     	;# 
   223  0191                     	;# 
   224  0192                     	;# 
   225  0193                     	;# 
   226  0193                     	;# 
   227  0193                     	;# 
   228  0194                     	;# 
   229  0195                     	;# 
   230  0196                     	;# 
   231  0199                     	;# 
   232  019A                     	;# 
   233  019B                     	;# 
   234  019B                     	;# 
   235  019B                     	;# 
   236  019B                     	;# 
   237  019C                     	;# 
   238  019C                     	;# 
   239  019D                     	;# 
   240  019E                     	;# 
   241  019F                     	;# 
   242  020C                     	;# 
   243  020E                     	;# 
   244  0211                     	;# 
   245  0211                     	;# 
   246  0212                     	;# 
   247  0212                     	;# 
   248  0213                     	;# 
   249  0213                     	;# 
   250  0214                     	;# 
   251  0214                     	;# 
   252  0215                     	;# 
   253  0215                     	;# 
   254  0215                     	;# 
   255  0216                     	;# 
   256  0216                     	;# 
   257  0217                     	;# 
   258  0217                     	;# 
   259  0291                     	;# 
   260  0291                     	;# 
   261  0292                     	;# 
   262  0293                     	;# 
   263  0294                     	;# 
   264  0295                     	;# 
   265  0295                     	;# 
   266  0296                     	;# 
   267  0391                     	;# 
   268  0392                     	;# 
   269  0393                     	;# 
   270  039A                     	;# 
   271  039C                     	;# 
   272  039D                     	;# 
   273  039E                     	;# 
   274  039F                     	;# 
   275  0FE4                     	;# 
   276  0FE5                     	;# 
   277  0FE6                     	;# 
   278  0FE7                     	;# 
   279  0FE8                     	;# 
   280  0FE9                     	;# 
   281  0FEA                     	;# 
   282  0FEB                     	;# 
   283  0FED                     	;# 
   284  0FEE                     	;# 
   285  0FEF                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000E                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0015                     	;# 
   303  0016                     	;# 
   304  0016                     	;# 
   305  0017                     	;# 
   306  0018                     	;# 
   307  0019                     	;# 
   308  001A                     	;# 
   309  001B                     	;# 
   310  001C                     	;# 
   311  001E                     	;# 
   312  001F                     	;# 
   313  008C                     	;# 
   314  008E                     	;# 
   315  0091                     	;# 
   316  0092                     	;# 
   317  0095                     	;# 
   318  0096                     	;# 
   319  0097                     	;# 
   320  0098                     	;# 
   321  0099                     	;# 
   322  009A                     	;# 
   323  009B                     	;# 
   324  009B                     	;# 
   325  009C                     	;# 
   326  009D                     	;# 
   327  009E                     	;# 
   328  010C                     	;# 
   329  010E                     	;# 
   330  0111                     	;# 
   331  0112                     	;# 
   332  0113                     	;# 
   333  0114                     	;# 
   334  0115                     	;# 
   335  0116                     	;# 
   336  0117                     	;# 
   337  0118                     	;# 
   338  0119                     	;# 
   339  011A                     	;# 
   340  011B                     	;# 
   341  011D                     	;# 
   342  011D                     	;# 
   343  018C                     	;# 
   344  018E                     	;# 
   345  0191                     	;# 
   346  0191                     	;# 
   347  0192                     	;# 
   348  0193                     	;# 
   349  0193                     	;# 
   350  0193                     	;# 
   351  0194                     	;# 
   352  0195                     	;# 
   353  0196                     	;# 
   354  0199                     	;# 
   355  019A                     	;# 
   356  019B                     	;# 
   357  019B                     	;# 
   358  019B                     	;# 
   359  019B                     	;# 
   360  019C                     	;# 
   361  019C                     	;# 
   362  019D                     	;# 
   363  019E                     	;# 
   364  019F                     	;# 
   365  020C                     	;# 
   366  020E                     	;# 
   367  0211                     	;# 
   368  0211                     	;# 
   369  0212                     	;# 
   370  0212                     	;# 
   371  0213                     	;# 
   372  0213                     	;# 
   373  0214                     	;# 
   374  0214                     	;# 
   375  0215                     	;# 
   376  0215                     	;# 
   377  0215                     	;# 
   378  0216                     	;# 
   379  0216                     	;# 
   380  0217                     	;# 
   381  0217                     	;# 
   382  0291                     	;# 
   383  0291                     	;# 
   384  0292                     	;# 
   385  0293                     	;# 
   386  0294                     	;# 
   387  0295                     	;# 
   388  0295                     	;# 
   389  0296                     	;# 
   390  0391                     	;# 
   391  0392                     	;# 
   392  0393                     	;# 
   393  039A                     	;# 
   394  039C                     	;# 
   395  039D                     	;# 
   396  039E                     	;# 
   397  039F                     	;# 
   398  0FE4                     	;# 
   399  0FE5                     	;# 
   400  0FE6                     	;# 
   401  0FE7                     	;# 
   402  0FE8                     	;# 
   403  0FE9                     	;# 
   404  0FEA                     	;# 
   405  0FEB                     	;# 
   406  0FED                     	;# 
   407  0FEE                     	;# 
   408  0FEF                     	;# 
   409  0000                     	;# 
   410  0001                     	;# 
   411  0002                     	;# 
   412  0003                     	;# 
   413  0004                     	;# 
   414  0005                     	;# 
   415  0006                     	;# 
   416  0007                     	;# 
   417  0008                     	;# 
   418  0009                     	;# 
   419  000A                     	;# 
   420  000B                     	;# 
   421  000C                     	;# 
   422  000E                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0015                     	;# 
   426  0016                     	;# 
   427  0016                     	;# 
   428  0017                     	;# 
   429  0018                     	;# 
   430  0019                     	;# 
   431  001A                     	;# 
   432  001B                     	;# 
   433  001C                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  008C                     	;# 
   437  008E                     	;# 
   438  0091                     	;# 
   439  0092                     	;# 
   440  0095                     	;# 
   441  0096                     	;# 
   442  0097                     	;# 
   443  0098                     	;# 
   444  0099                     	;# 
   445  009A                     	;# 
   446  009B                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  010C                     	;# 
   452  010E                     	;# 
   453  0111                     	;# 
   454  0112                     	;# 
   455  0113                     	;# 
   456  0114                     	;# 
   457  0115                     	;# 
   458  0116                     	;# 
   459  0117                     	;# 
   460  0118                     	;# 
   461  0119                     	;# 
   462  011A                     	;# 
   463  011B                     	;# 
   464  011D                     	;# 
   465  011D                     	;# 
   466  018C                     	;# 
   467  018E                     	;# 
   468  0191                     	;# 
   469  0191                     	;# 
   470  0192                     	;# 
   471  0193                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0194                     	;# 
   475  0195                     	;# 
   476  0196                     	;# 
   477  0199                     	;# 
   478  019A                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019C                     	;# 
   484  019C                     	;# 
   485  019D                     	;# 
   486  019E                     	;# 
   487  019F                     	;# 
   488  020C                     	;# 
   489  020E                     	;# 
   490  0211                     	;# 
   491  0211                     	;# 
   492  0212                     	;# 
   493  0212                     	;# 
   494  0213                     	;# 
   495  0213                     	;# 
   496  0214                     	;# 
   497  0214                     	;# 
   498  0215                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0216                     	;# 
   502  0216                     	;# 
   503  0217                     	;# 
   504  0217                     	;# 
   505  0291                     	;# 
   506  0291                     	;# 
   507  0292                     	;# 
   508  0293                     	;# 
   509  0294                     	;# 
   510  0295                     	;# 
   511  0295                     	;# 
   512  0296                     	;# 
   513  0391                     	;# 
   514  0392                     	;# 
   515  0393                     	;# 
   516  039A                     	;# 
   517  039C                     	;# 
   518  039D                     	;# 
   519  039E                     	;# 
   520  039F                     	;# 
   521  0FE4                     	;# 
   522  0FE5                     	;# 
   523  0FE6                     	;# 
   524  0FE7                     	;# 
   525  0FE8                     	;# 
   526  0FE9                     	;# 
   527  0FEA                     	;# 
   528  0FEB                     	;# 
   529  0FED                     	;# 
   530  0FEE                     	;# 
   531  0FEF                     	;# 
   532  0000                     	;# 
   533  0001                     	;# 
   534  0002                     	;# 
   535  0003                     	;# 
   536  0004                     	;# 
   537  0005                     	;# 
   538  0006                     	;# 
   539  0007                     	;# 
   540  0008                     	;# 
   541  0009                     	;# 
   542  000A                     	;# 
   543  000B                     	;# 
   544  000C                     	;# 
   545  000E                     	;# 
   546  0011                     	;# 
   547  0012                     	;# 
   548  0015                     	;# 
   549  0016                     	;# 
   550  0016                     	;# 
   551  0017                     	;# 
   552  0018                     	;# 
   553  0019                     	;# 
   554  001A                     	;# 
   555  001B                     	;# 
   556  001C                     	;# 
   557  001E                     	;# 
   558  001F                     	;# 
   559  008C                     	;# 
   560  008E                     	;# 
   561  0091                     	;# 
   562  0092                     	;# 
   563  0095                     	;# 
   564  0096                     	;# 
   565  0097                     	;# 
   566  0098                     	;# 
   567  0099                     	;# 
   568  009A                     	;# 
   569  009B                     	;# 
   570  009B                     	;# 
   571  009C                     	;# 
   572  009D                     	;# 
   573  009E                     	;# 
   574  010C                     	;# 
   575  010E                     	;# 
   576  0111                     	;# 
   577  0112                     	;# 
   578  0113                     	;# 
   579  0114                     	;# 
   580  0115                     	;# 
   581  0116                     	;# 
   582  0117                     	;# 
   583  0118                     	;# 
   584  0119                     	;# 
   585  011A                     	;# 
   586  011B                     	;# 
   587  011D                     	;# 
   588  011D                     	;# 
   589  018C                     	;# 
   590  018E                     	;# 
   591  0191                     	;# 
   592  0191                     	;# 
   593  0192                     	;# 
   594  0193                     	;# 
   595  0193                     	;# 
   596  0193                     	;# 
   597  0194                     	;# 
   598  0195                     	;# 
   599  0196                     	;# 
   600  0199                     	;# 
   601  019A                     	;# 
   602  019B                     	;# 
   603  019B                     	;# 
   604  019B                     	;# 
   605  019B                     	;# 
   606  019C                     	;# 
   607  019C                     	;# 
   608  019D                     	;# 
   609  019E                     	;# 
   610  019F                     	;# 
   611  020C                     	;# 
   612  020E                     	;# 
   613  0211                     	;# 
   614  0211                     	;# 
   615  0212                     	;# 
   616  0212                     	;# 
   617  0213                     	;# 
   618  0213                     	;# 
   619  0214                     	;# 
   620  0214                     	;# 
   621  0215                     	;# 
   622  0215                     	;# 
   623  0215                     	;# 
   624  0216                     	;# 
   625  0216                     	;# 
   626  0217                     	;# 
   627  0217                     	;# 
   628  0291                     	;# 
   629  0291                     	;# 
   630  0292                     	;# 
   631  0293                     	;# 
   632  0294                     	;# 
   633  0295                     	;# 
   634  0295                     	;# 
   635  0296                     	;# 
   636  0391                     	;# 
   637  0392                     	;# 
   638  0393                     	;# 
   639  039A                     	;# 
   640  039C                     	;# 
   641  039D                     	;# 
   642  039E                     	;# 
   643  039F                     	;# 
   644  0FE4                     	;# 
   645  0FE5                     	;# 
   646  0FE6                     	;# 
   647  0FE7                     	;# 
   648  0FE8                     	;# 
   649  0FE9                     	;# 
   650  0FEA                     	;# 
   651  0FEB                     	;# 
   652  0FED                     	;# 
   653  0FEE                     	;# 
   654  0FEF                     	;# 
   655  0000                     	;# 
   656  0001                     	;# 
   657  0002                     	;# 
   658  0003                     	;# 
   659  0004                     	;# 
   660  0005                     	;# 
   661  0006                     	;# 
   662  0007                     	;# 
   663  0008                     	;# 
   664  0009                     	;# 
   665  000A                     	;# 
   666  000B                     	;# 
   667  000C                     	;# 
   668  000E                     	;# 
   669  0011                     	;# 
   670  0012                     	;# 
   671  0015                     	;# 
   672  0016                     	;# 
   673  0016                     	;# 
   674  0017                     	;# 
   675  0018                     	;# 
   676  0019                     	;# 
   677  001A                     	;# 
   678  001B                     	;# 
   679  001C                     	;# 
   680  001E                     	;# 
   681  001F                     	;# 
   682  008C                     	;# 
   683  008E                     	;# 
   684  0091                     	;# 
   685  0092                     	;# 
   686  0095                     	;# 
   687  0096                     	;# 
   688  0097                     	;# 
   689  0098                     	;# 
   690  0099                     	;# 
   691  009A                     	;# 
   692  009B                     	;# 
   693  009B                     	;# 
   694  009C                     	;# 
   695  009D                     	;# 
   696  009E                     	;# 
   697  010C                     	;# 
   698  010E                     	;# 
   699  0111                     	;# 
   700  0112                     	;# 
   701  0113                     	;# 
   702  0114                     	;# 
   703  0115                     	;# 
   704  0116                     	;# 
   705  0117                     	;# 
   706  0118                     	;# 
   707  0119                     	;# 
   708  011A                     	;# 
   709  011B                     	;# 
   710  011D                     	;# 
   711  011D                     	;# 
   712  018C                     	;# 
   713  018E                     	;# 
   714  0191                     	;# 
   715  0191                     	;# 
   716  0192                     	;# 
   717  0193                     	;# 
   718  0193                     	;# 
   719  0193                     	;# 
   720  0194                     	;# 
   721  0195                     	;# 
   722  0196                     	;# 
   723  0199                     	;# 
   724  019A                     	;# 
   725  019B                     	;# 
   726  019B                     	;# 
   727  019B                     	;# 
   728  019B                     	;# 
   729  019C                     	;# 
   730  019C                     	;# 
   731  019D                     	;# 
   732  019E                     	;# 
   733  019F                     	;# 
   734  020C                     	;# 
   735  020E                     	;# 
   736  0211                     	;# 
   737  0211                     	;# 
   738  0212                     	;# 
   739  0212                     	;# 
   740  0213                     	;# 
   741  0213                     	;# 
   742  0214                     	;# 
   743  0214                     	;# 
   744  0215                     	;# 
   745  0215                     	;# 
   746  0215                     	;# 
   747  0216                     	;# 
   748  0216                     	;# 
   749  0217                     	;# 
   750  0217                     	;# 
   751  0291                     	;# 
   752  0291                     	;# 
   753  0292                     	;# 
   754  0293                     	;# 
   755  0294                     	;# 
   756  0295                     	;# 
   757  0295                     	;# 
   758  0296                     	;# 
   759  0391                     	;# 
   760  0392                     	;# 
   761  0393                     	;# 
   762  039A                     	;# 
   763  039C                     	;# 
   764  039D                     	;# 
   765  039E                     	;# 
   766  039F                     	;# 
   767  0FE4                     	;# 
   768  0FE5                     	;# 
   769  0FE6                     	;# 
   770  0FE7                     	;# 
   771  0FE8                     	;# 
   772  0FE9                     	;# 
   773  0FEA                     	;# 
   774  0FEB                     	;# 
   775  0FED                     	;# 
   776  0FEE                     	;# 
   777  0FEF                     	;# 
   778  0000                     	;# 
   779  0001                     	;# 
   780  0002                     	;# 
   781  0003                     	;# 
   782  0004                     	;# 
   783  0005                     	;# 
   784  0006                     	;# 
   785  0007                     	;# 
   786  0008                     	;# 
   787  0009                     	;# 
   788  000A                     	;# 
   789  000B                     	;# 
   790  000C                     	;# 
   791  000E                     	;# 
   792  0011                     	;# 
   793  0012                     	;# 
   794  0015                     	;# 
   795  0016                     	;# 
   796  0016                     	;# 
   797  0017                     	;# 
   798  0018                     	;# 
   799  0019                     	;# 
   800  001A                     	;# 
   801  001B                     	;# 
   802  001C                     	;# 
   803  001E                     	;# 
   804  001F                     	;# 
   805  008C                     	;# 
   806  008E                     	;# 
   807  0091                     	;# 
   808  0092                     	;# 
   809  0095                     	;# 
   810  0096                     	;# 
   811  0097                     	;# 
   812  0098                     	;# 
   813  0099                     	;# 
   814  009A                     	;# 
   815  009B                     	;# 
   816  009B                     	;# 
   817  009C                     	;# 
   818  009D                     	;# 
   819  009E                     	;# 
   820  010C                     	;# 
   821  010E                     	;# 
   822  0111                     	;# 
   823  0112                     	;# 
   824  0113                     	;# 
   825  0114                     	;# 
   826  0115                     	;# 
   827  0116                     	;# 
   828  0117                     	;# 
   829  0118                     	;# 
   830  0119                     	;# 
   831  011A                     	;# 
   832  011B                     	;# 
   833  011D                     	;# 
   834  011D                     	;# 
   835  018C                     	;# 
   836  018E                     	;# 
   837  0191                     	;# 
   838  0191                     	;# 
   839  0192                     	;# 
   840  0193                     	;# 
   841  0193                     	;# 
   842  0193                     	;# 
   843  0194                     	;# 
   844  0195                     	;# 
   845  0196                     	;# 
   846  0199                     	;# 
   847  019A                     	;# 
   848  019B                     	;# 
   849  019B                     	;# 
   850  019B                     	;# 
   851  019B                     	;# 
   852  019C                     	;# 
   853  019C                     	;# 
   854  019D                     	;# 
   855  019E                     	;# 
   856  019F                     	;# 
   857  020C                     	;# 
   858  020E                     	;# 
   859  0211                     	;# 
   860  0211                     	;# 
   861  0212                     	;# 
   862  0212                     	;# 
   863  0213                     	;# 
   864  0213                     	;# 
   865  0214                     	;# 
   866  0214                     	;# 
   867  0215                     	;# 
   868  0215                     	;# 
   869  0215                     	;# 
   870  0216                     	;# 
   871  0216                     	;# 
   872  0217                     	;# 
   873  0217                     	;# 
   874  0291                     	;# 
   875  0291                     	;# 
   876  0292                     	;# 
   877  0293                     	;# 
   878  0294                     	;# 
   879  0295                     	;# 
   880  0295                     	;# 
   881  0296                     	;# 
   882  0391                     	;# 
   883  0392                     	;# 
   884  0393                     	;# 
   885  039A                     	;# 
   886  039C                     	;# 
   887  039D                     	;# 
   888  039E                     	;# 
   889  039F                     	;# 
   890  0FE4                     	;# 
   891  0FE5                     	;# 
   892  0FE6                     	;# 
   893  0FE7                     	;# 
   894  0FE8                     	;# 
   895  0FE9                     	;# 
   896  0FEA                     	;# 
   897  0FEB                     	;# 
   898  0FED                     	;# 
   899  0FEE                     	;# 
   900  0FEF                     	;# 
   901  0000                     	;# 
   902  0001                     	;# 
   903  0002                     	;# 
   904  0003                     	;# 
   905  0004                     	;# 
   906  0005                     	;# 
   907  0006                     	;# 
   908  0007                     	;# 
   909  0008                     	;# 
   910  0009                     	;# 
   911  000A                     	;# 
   912  000B                     	;# 
   913  000C                     	;# 
   914  000E                     	;# 
   915  0011                     	;# 
   916  0012                     	;# 
   917  0015                     	;# 
   918  0016                     	;# 
   919  0016                     	;# 
   920  0017                     	;# 
   921  0018                     	;# 
   922  0019                     	;# 
   923  001A                     	;# 
   924  001B                     	;# 
   925  001C                     	;# 
   926  001E                     	;# 
   927  001F                     	;# 
   928  008C                     	;# 
   929  008E                     	;# 
   930  0091                     	;# 
   931  0092                     	;# 
   932  0095                     	;# 
   933  0096                     	;# 
   934  0097                     	;# 
   935  0098                     	;# 
   936  0099                     	;# 
   937  009A                     	;# 
   938  009B                     	;# 
   939  009B                     	;# 
   940  009C                     	;# 
   941  009D                     	;# 
   942  009E                     	;# 
   943  010C                     	;# 
   944  010E                     	;# 
   945  0111                     	;# 
   946  0112                     	;# 
   947  0113                     	;# 
   948  0114                     	;# 
   949  0115                     	;# 
   950  0116                     	;# 
   951  0117                     	;# 
   952  0118                     	;# 
   953  0119                     	;# 
   954  011A                     	;# 
   955  011B                     	;# 
   956  011D                     	;# 
   957  011D                     	;# 
   958  018C                     	;# 
   959  018E                     	;# 
   960  0191                     	;# 
   961  0191                     	;# 
   962  0192                     	;# 
   963  0193                     	;# 
   964  0193                     	;# 
   965  0193                     	;# 
   966  0194                     	;# 
   967  0195                     	;# 
   968  0196                     	;# 
   969  0199                     	;# 
   970  019A                     	;# 
   971  019B                     	;# 
   972  019B                     	;# 
   973  019B                     	;# 
   974  019B                     	;# 
   975  019C                     	;# 
   976  019C                     	;# 
   977  019D                     	;# 
   978  019E                     	;# 
   979  019F                     	;# 
   980  020C                     	;# 
   981  020E                     	;# 
   982  0211                     	;# 
   983  0211                     	;# 
   984  0212                     	;# 
   985  0212                     	;# 
   986  0213                     	;# 
   987  0213                     	;# 
   988  0214                     	;# 
   989  0214                     	;# 
   990  0215                     	;# 
   991  0215                     	;# 
   992  0215                     	;# 
   993  0216                     	;# 
   994  0216                     	;# 
   995  0217                     	;# 
   996  0217                     	;# 
   997  0291                     	;# 
   998  0291                     	;# 
   999  0292                     	;# 
  1000  0293                     	;# 
  1001  0294                     	;# 
  1002  0295                     	;# 
  1003  0295                     	;# 
  1004  0296                     	;# 
  1005  0391                     	;# 
  1006  0392                     	;# 
  1007  0393                     	;# 
  1008  039A                     	;# 
  1009  039C                     	;# 
  1010  039D                     	;# 
  1011  039E                     	;# 
  1012  039F                     	;# 
  1013  0FE4                     	;# 
  1014  0FE5                     	;# 
  1015  0FE6                     	;# 
  1016  0FE7                     	;# 
  1017  0FE8                     	;# 
  1018  0FE9                     	;# 
  1019  0FEA                     	;# 
  1020  0FEB                     	;# 
  1021  0FED                     	;# 
  1022  0FEE                     	;# 
  1023  0FEF                     	;# 
  1024  0000                     	;# 
  1025  0001                     	;# 
  1026  0002                     	;# 
  1027  0003                     	;# 
  1028  0004                     	;# 
  1029  0005                     	;# 
  1030  0006                     	;# 
  1031  0007                     	;# 
  1032  0008                     	;# 
  1033  0009                     	;# 
  1034  000A                     	;# 
  1035  000B                     	;# 
  1036  000C                     	;# 
  1037  000E                     	;# 
  1038  0011                     	;# 
  1039  0012                     	;# 
  1040  0015                     	;# 
  1041  0016                     	;# 
  1042  0016                     	;# 
  1043  0017                     	;# 
  1044  0018                     	;# 
  1045  0019                     	;# 
  1046  001A                     	;# 
  1047  001B                     	;# 
  1048  001C                     	;# 
  1049  001E                     	;# 
  1050  001F                     	;# 
  1051  008C                     	;# 
  1052  008E                     	;# 
  1053  0091                     	;# 
  1054  0092                     	;# 
  1055  0095                     	;# 
  1056  0096                     	;# 
  1057  0097                     	;# 
  1058  0098                     	;# 
  1059  0099                     	;# 
  1060  009A                     	;# 
  1061  009B                     	;# 
  1062  009B                     	;# 
  1063  009C                     	;# 
  1064  009D                     	;# 
  1065  009E                     	;# 
  1066  010C                     	;# 
  1067  010E                     	;# 
  1068  0111                     	;# 
  1069  0112                     	;# 
  1070  0113                     	;# 
  1071  0114                     	;# 
  1072  0115                     	;# 
  1073  0116                     	;# 
  1074  0117                     	;# 
  1075  0118                     	;# 
  1076  0119                     	;# 
  1077  011A                     	;# 
  1078  011B                     	;# 
  1079  011D                     	;# 
  1080  011D                     	;# 
  1081  018C                     	;# 
  1082  018E                     	;# 
  1083  0191                     	;# 
  1084  0191                     	;# 
  1085  0192                     	;# 
  1086  0193                     	;# 
  1087  0193                     	;# 
  1088  0193                     	;# 
  1089  0194                     	;# 
  1090  0195                     	;# 
  1091  0196                     	;# 
  1092  0199                     	;# 
  1093  019A                     	;# 
  1094  019B                     	;# 
  1095  019B                     	;# 
  1096  019B                     	;# 
  1097  019B                     	;# 
  1098  019C                     	;# 
  1099  019C                     	;# 
  1100  019D                     	;# 
  1101  019E                     	;# 
  1102  019F                     	;# 
  1103  020C                     	;# 
  1104  020E                     	;# 
  1105  0211                     	;# 
  1106  0211                     	;# 
  1107  0212                     	;# 
  1108  0212                     	;# 
  1109  0213                     	;# 
  1110  0213                     	;# 
  1111  0214                     	;# 
  1112  0214                     	;# 
  1113  0215                     	;# 
  1114  0215                     	;# 
  1115  0215                     	;# 
  1116  0216                     	;# 
  1117  0216                     	;# 
  1118  0217                     	;# 
  1119  0217                     	;# 
  1120  0291                     	;# 
  1121  0291                     	;# 
  1122  0292                     	;# 
  1123  0293                     	;# 
  1124  0294                     	;# 
  1125  0295                     	;# 
  1126  0295                     	;# 
  1127  0296                     	;# 
  1128  0391                     	;# 
  1129  0392                     	;# 
  1130  0393                     	;# 
  1131  039A                     	;# 
  1132  039C                     	;# 
  1133  039D                     	;# 
  1134  039E                     	;# 
  1135  039F                     	;# 
  1136  0FE4                     	;# 
  1137  0FE5                     	;# 
  1138  0FE6                     	;# 
  1139  0FE7                     	;# 
  1140  0FE8                     	;# 
  1141  0FE9                     	;# 
  1142  0FEA                     	;# 
  1143  0FEB                     	;# 
  1144  0FED                     	;# 
  1145  0FEE                     	;# 
  1146  0FEF                     	;# 
  1147  0000                     	;# 
  1148  0001                     	;# 
  1149  0002                     	;# 
  1150  0003                     	;# 
  1151  0004                     	;# 
  1152  0005                     	;# 
  1153  0006                     	;# 
  1154  0007                     	;# 
  1155  0008                     	;# 
  1156  0009                     	;# 
  1157  000A                     	;# 
  1158  000B                     	;# 
  1159  000C                     	;# 
  1160  000E                     	;# 
  1161  0011                     	;# 
  1162  0012                     	;# 
  1163  0015                     	;# 
  1164  0016                     	;# 
  1165  0016                     	;# 
  1166  0017                     	;# 
  1167  0018                     	;# 
  1168  0019                     	;# 
  1169  001A                     	;# 
  1170  001B                     	;# 
  1171  001C                     	;# 
  1172  001E                     	;# 
  1173  001F                     	;# 
  1174  008C                     	;# 
  1175  008E                     	;# 
  1176  0091                     	;# 
  1177  0092                     	;# 
  1178  0095                     	;# 
  1179  0096                     	;# 
  1180  0097                     	;# 
  1181  0098                     	;# 
  1182  0099                     	;# 
  1183  009A                     	;# 
  1184  009B                     	;# 
  1185  009B                     	;# 
  1186  009C                     	;# 
  1187  009D                     	;# 
  1188  009E                     	;# 
  1189  010C                     	;# 
  1190  010E                     	;# 
  1191  0111                     	;# 
  1192  0112                     	;# 
  1193  0113                     	;# 
  1194  0114                     	;# 
  1195  0115                     	;# 
  1196  0116                     	;# 
  1197  0117                     	;# 
  1198  0118                     	;# 
  1199  0119                     	;# 
  1200  011A                     	;# 
  1201  011B                     	;# 
  1202  011D                     	;# 
  1203  011D                     	;# 
  1204  018C                     	;# 
  1205  018E                     	;# 
  1206  0191                     	;# 
  1207  0191                     	;# 
  1208  0192                     	;# 
  1209  0193                     	;# 
  1210  0193                     	;# 
  1211  0193                     	;# 
  1212  0194                     	;# 
  1213  0195                     	;# 
  1214  0196                     	;# 
  1215  0199                     	;# 
  1216  019A                     	;# 
  1217  019B                     	;# 
  1218  019B                     	;# 
  1219  019B                     	;# 
  1220  019B                     	;# 
  1221  019C                     	;# 
  1222  019C                     	;# 
  1223  019D                     	;# 
  1224  019E                     	;# 
  1225  019F                     	;# 
  1226  020C                     	;# 
  1227  020E                     	;# 
  1228  0211                     	;# 
  1229  0211                     	;# 
  1230  0212                     	;# 
  1231  0212                     	;# 
  1232  0213                     	;# 
  1233  0213                     	;# 
  1234  0214                     	;# 
  1235  0214                     	;# 
  1236  0215                     	;# 
  1237  0215                     	;# 
  1238  0215                     	;# 
  1239  0216                     	;# 
  1240  0216                     	;# 
  1241  0217                     	;# 
  1242  0217                     	;# 
  1243  0291                     	;# 
  1244  0291                     	;# 
  1245  0292                     	;# 
  1246  0293                     	;# 
  1247  0294                     	;# 
  1248  0295                     	;# 
  1249  0295                     	;# 
  1250  0296                     	;# 
  1251  0391                     	;# 
  1252  0392                     	;# 
  1253  0393                     	;# 
  1254  039A                     	;# 
  1255  039C                     	;# 
  1256  039D                     	;# 
  1257  039E                     	;# 
  1258  039F                     	;# 
  1259  0FE4                     	;# 
  1260  0FE5                     	;# 
  1261  0FE6                     	;# 
  1262  0FE7                     	;# 
  1263  0FE8                     	;# 
  1264  0FE9                     	;# 
  1265  0FEA                     	;# 
  1266  0FEB                     	;# 
  1267  0FED                     	;# 
  1268  0FEE                     	;# 
  1269  0FEF                     	;# 
  1270                           
  1271                           	psect	idataBANK0
  1272  03EE                     __pidataBANK0:	
  1273                           
  1274                           ;initializer for _LED_state
  1275  03EE  3401               	retlw	1
  1276  000B                     _INTCONbits	set	11
  1277  0011                     _PIR1bits	set	17
  1278  000C                     _PORTAbits	set	12
  1279  001B                     _PR2	set	27
  1280  001C                     _T2CON	set	28
  1281  001C                     _T2CONbits	set	28
  1282  0015                     _TMR0	set	21
  1283  001A                     _TMR2	set	26
  1284  0095                     _OPTION_REG	set	149
  1285  0095                     _OPTION_REGbits	set	149
  1286  0099                     _OSCCON	set	153
  1287  009A                     _OSCSTAT	set	154
  1288  0098                     _OSCTUNE	set	152
  1289  0091                     _PIE1bits	set	145
  1290  008C                     _TRISA	set	140
  1291  008E                     _TRISC	set	142
  1292  04D6                     _PLLR	set	1238
  1293  011D                     _APFCON	set	285
  1294  010C                     _LATA	set	268
  1295  010E                     _LATC	set	270
  1296  0865                     _LATA5	set	2149
  1297  018C                     _ANSELA	set	396
  1298  018E                     _ANSELC	set	398
  1299  019F                     _BAUDCON	set	415
  1300  0192                     _EEADRH	set	402
  1301  0191                     _EEADRL	set	401
  1302  0195                     _EECON1bits	set	405
  1303  0196                     _EECON2	set	406
  1304  0194                     _EEDATH	set	404
  1305  0193                     _EEDATL	set	403
  1306  0199                     _RCREG	set	409
  1307  019D                     _RCSTA	set	413
  1308  019D                     _RCSTAbits	set	413
  1309  019C                     _SPBRGH	set	412
  1310  019B                     _SPBRGL	set	411
  1311  019A                     _TXREG	set	410
  1312  019E                     _TXSTA	set	414
  1313  020C                     _WPUA	set	524
  1314  020E                     _WPUC	set	526
  1315  0293                     _CCP1CON	set	659
  1316  0292                     _CCPR1H	set	658
  1317  0291                     _CCPR1L	set	657
  1318  0295                     _ECCP1AS	set	661
  1319  0296                     _PSTR1CON	set	662
  1320  0294                     _PWM1CON	set	660
  1321                           
  1322                           	psect	stringtext
  1323  01E9                     __pstringtext:	
  1324  01E9                     STR_1:	
  1325  01E9  3424               	retlw	36	;'$'
  1326  01EA  3450               	retlw	80	;'P'
  1327  01EB  344D               	retlw	77	;'M'
  1328  01EC  3454               	retlw	84	;'T'
  1329  01ED  344B               	retlw	75	;'K'
  1330  01EE  3433               	retlw	51	;'3'
  1331  01EF  3431               	retlw	49	;'1'
  1332  01F0  3434               	retlw	52	;'4'
  1333  01F1  342C               	retlw	44	;','
  1334  01F2  3430               	retlw	48	;'0'
  1335  01F3  342C               	retlw	44	;','
  1336  01F4  3430               	retlw	48	;'0'
  1337  01F5  342C               	retlw	44	;','
  1338  01F6  3431               	retlw	49	;'1'
  1339  01F7  342C               	retlw	44	;','
  1340  01F8  3430               	retlw	48	;'0'
  1341  01F9  342C               	retlw	44	;','
  1342  01FA  3430               	retlw	48	;'0'
  1343  01FB  342C               	retlw	44	;','
  1344  01FC  3430               	retlw	48	;'0'
  1345  01FD  342C               	retlw	44	;','
  1346  01FE  3430               	retlw	48	;'0'
  1347  01FF  342C               	retlw	44	;','
  1348  0200  3430               	retlw	48	;'0'
  1349  0201  342C               	retlw	44	;','
  1350  0202  3430               	retlw	48	;'0'
  1351  0203  342C               	retlw	44	;','
  1352  0204  3430               	retlw	48	;'0'
  1353  0205  342C               	retlw	44	;','
  1354  0206  3430               	retlw	48	;'0'
  1355  0207  342C               	retlw	44	;','
  1356  0208  3430               	retlw	48	;'0'
  1357  0209  342C               	retlw	44	;','
  1358  020A  3430               	retlw	48	;'0'
  1359  020B  342C               	retlw	44	;','
  1360  020C  3430               	retlw	48	;'0'
  1361  020D  342C               	retlw	44	;','
  1362  020E  3430               	retlw	48	;'0'
  1363  020F  342C               	retlw	44	;','
  1364  0210  3430               	retlw	48	;'0'
  1365  0211  342C               	retlw	44	;','
  1366  0212  3430               	retlw	48	;'0'
  1367  0213  342C               	retlw	44	;','
  1368  0214  3430               	retlw	48	;'0'
  1369  0215  342C               	retlw	44	;','
  1370  0216  3430               	retlw	48	;'0'
  1371  0217  342A               	retlw	42	;'*'
  1372  0218  3432               	retlw	50	;'2'
  1373  0219  3439               	retlw	57	;'9'
  1374  021A  340D               	retlw	13
  1375  021B  340A               	retlw	10
  1376  021C  3400               	retlw	0
  1377  021D                     STR_2:	
  1378  021D  3424               	retlw	36	;'$'
  1379  021E  3450               	retlw	80	;'P'
  1380  021F  344D               	retlw	77	;'M'
  1381  0220  3454               	retlw	84	;'T'
  1382  0221  344B               	retlw	75	;'K'
  1383  0222  3432               	retlw	50	;'2'
  1384  0223  3432               	retlw	50	;'2'
  1385  0224  3430               	retlw	48	;'0'
  1386  0225  342C               	retlw	44	;','
  1387  0226  3431               	retlw	49	;'1'
  1388  0227  3430               	retlw	48	;'0'
  1389  0228  3430               	retlw	48	;'0'
  1390  0229  342A               	retlw	42	;'*'
  1391  022A  3432               	retlw	50	;'2'
  1392  022B  3446               	retlw	70	;'F'
  1393  022C  340D               	retlw	13
  1394  022D  340A               	retlw	10
  1395  022E  3400               	retlw	0
  1396                           
  1397                           ; #config settings
  1398  0000                     
  1399                           	psect	cinit
  1400  0025                     start_initialization:	
  1401  0025                     __initialization:	
  1402                           
  1403                           ; Initialize objects allocated to BANK0
  1404  0025  23EE               	fcall	__pidataBANK0	;fetch initializer
  1405  0026  00DD               	movwf	__pdataBANK0& (0+127)
  1406                           
  1407                           ; Clear objects allocated to COMMON
  1408  0027  01F6               	clrf	__pbssCOMMON& (0+127)
  1409  0028  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1410  0029  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1411  002A  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1412                           
  1413                           ; Clear objects allocated to BANK0
  1414  002B  3020               	movlw	low __pbssBANK0
  1415  002C  0084               	movwf	4
  1416  002D  3000               	movlw	high __pbssBANK0
  1417  002E  0085               	movwf	5
  1418  002F  3024               	movlw	36
  1419  0030  23D7               	fcall	clear_ram0
  1420  0031                     end_of_initialization:	
  1421                           ;End of C runtime variable initialization code
  1422                           
  1423  0031                     __end_of__initialization:	
  1424  0031  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1425  0032  0020               	movlb	0
  1426  0033  2834               	ljmp	_main	;jump to C main() function
  1427                           
  1428                           	psect	bssCOMMON
  1429  0076                     __pbssCOMMON:	
  1430  0076                     _b_last_state:	
  1431  0076                     	ds	2
  1432  0078                     _eusartRxCount:	
  1433  0078                     	ds	1
  1434  0079                     _eusartTxBufferRemaining:	
  1435  0079                     	ds	1
  1436                           
  1437                           	psect	bssBANK0
  1438  0020                     __pbssBANK0:	
  1439  0020                     _eusartRxBuffer:	
  1440  0020                     	ds	8
  1441  0028                     _eusartTxBuffer:	
  1442  0028                     	ds	8
  1443  0030                     _speed:	
  1444  0030                     	ds	3
  1445  0033                     TMR0_ISR@CountCallBack:	
  1446  0033                     	ds	2
  1447  0035                     _TMR0_InterruptHandler:	
  1448  0035                     	ds	2
  1449  0037                     _LED_counter:	
  1450  0037                     	ds	1
  1451  0038                     _b_confirmed_state:	
  1452  0038                     	ds	1
  1453  0039                     _b_count_pressed:	
  1454  0039                     	ds	1
  1455  003A                     _b_count_released:	
  1456  003A                     	ds	1
  1457  003B                     _b_has_once_been_released:	
  1458  003B                     	ds	1
  1459  003C                     _b_push_confirmed:	
  1460  003C                     	ds	1
  1461  003D                     _b_release_confirmed:	
  1462  003D                     	ds	1
  1463  003E                     _eusartRxHead:	
  1464  003E                     	ds	1
  1465  003F                     _eusartRxTail:	
  1466  003F                     	ds	1
  1467  0040                     _eusartTxHead:	
  1468  0040                     	ds	1
  1469  0041                     _eusartTxTail:	
  1470  0041                     	ds	1
  1471  0042                     _speed_units:	
  1472  0042                     	ds	1
  1473  0043                     _timer0ReloadVal:	
  1474  0043                     	ds	1
  1475                           
  1476                           	psect	dataBANK0
  1477  005D                     __pdataBANK0:	
  1478  005D                     _LED_state:	
  1479  005D                     	ds	1
  1480                           
  1481                           	psect	clrtext
  1482  03D7                     clear_ram0:	
  1483                           ;	Called with FSR0 containing the base address, and
  1484                           ;	WREG with the size to clear
  1485                           
  1486  03D7  0064               	clrwdt	;clear the watchdog before getting into this loop
  1487  03D8                     clrloop0:	
  1488  03D8  0180               	clrf	0	;clear RAM location pointed to by FSR
  1489  03D9  3101               	addfsr 0,1
  1490  03DA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1491  03DB  2BD8               	goto	clrloop0	;have we reached the end yet?
  1492  03DC  3400               	retlw	0	;all done for this memory range, return
  1493                           
  1494                           	psect	cstackCOMMON
  1495  0070                     __pcstackCOMMON:	
  1496  0070                     ?_TMR2_StartTimer:	
  1497  0070                     ?_OSCILLATOR_Initialize:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0070                     ?_TMR0_Initialize:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503  0070                     ?_TMR0_ISR:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ?_TMR0_DefaultInterruptHandler:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ??_TMR0_DefaultInterruptHandler:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ?_TMR0_CallBack:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ?_my10msTimerISR:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ?_LED_set_state:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_button_init:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ?_LED_update_loop:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ??_LED_update_loop:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_button_update_loop:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ??_button_update_loop:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_TMR2_Initialize:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ?_EUSART_Initialize:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_EUSART_Write:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_putch:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_EUSART_Transmit_ISR:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ??_EUSART_Transmit_ISR:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_EUSART_Receive_ISR:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ??_EUSART_Receive_ISR:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?_EPWM_Initialize:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ?_PIN_MANAGER_Initialize:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ?_SYSTEM_Initialize:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ?_INTERRUPT_InterruptManager:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ?_GPS_Initialize:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ?_main:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578                           
  1579                           ; 1 bytes @ 0x0
  1580  0070                     	ds	2
  1581  0072                     button_update_loop@current_state:	
  1582                           
  1583                           ; 1 bytes @ 0x2
  1584  0072                     	ds	1
  1585  0073                     ??_TMR0_ISR:	
  1586  0073                     ??_TMR0_CallBack:	
  1587                           ; 1 bytes @ 0x3
  1588                           
  1589  0073                     ??_my10msTimerISR:	
  1590                           ; 1 bytes @ 0x3
  1591                           
  1592  0073                     ??_INTERRUPT_InterruptManager:	
  1593                           ; 1 bytes @ 0x3
  1594                           
  1595                           
  1596                           ; 1 bytes @ 0x3
  1597  0073                     	ds	1
  1598  0074                     ??_TMR2_StartTimer:	
  1599  0074                     ??_OSCILLATOR_Initialize:	
  1600                           ; 1 bytes @ 0x4
  1601                           
  1602  0074                     ?_TMR0_SetInterruptHandler:	
  1603                           ; 1 bytes @ 0x4
  1604                           
  1605  0074                     ??_LED_set_state:	
  1606                           ; 1 bytes @ 0x4
  1607                           
  1608  0074                     ??_button_init:	
  1609                           ; 1 bytes @ 0x4
  1610                           
  1611  0074                     ??_TMR2_Initialize:	
  1612                           ; 1 bytes @ 0x4
  1613                           
  1614  0074                     ??_EUSART_Initialize:	
  1615                           ; 1 bytes @ 0x4
  1616                           
  1617  0074                     ??_EUSART_Write:	
  1618                           ; 1 bytes @ 0x4
  1619                           
  1620  0074                     ??_EPWM_Initialize:	
  1621                           ; 1 bytes @ 0x4
  1622                           
  1623  0074                     ?_EPWM_LoadDutyValue:	
  1624                           ; 1 bytes @ 0x4
  1625                           
  1626  0074                     ??_PIN_MANAGER_Initialize:	
  1627                           ; 1 bytes @ 0x4
  1628                           
  1629  0074                     LED_set_state@new_state:	
  1630                           ; 1 bytes @ 0x4
  1631                           
  1632  0074                     EPWM_LoadDutyValue@dutyValue:	
  1633                           ; 1 bytes @ 0x4
  1634                           
  1635  0074                     TMR0_SetInterruptHandler@InterruptHandler:	
  1636                           ; 2 bytes @ 0x4
  1637                           
  1638                           
  1639                           ; 2 bytes @ 0x4
  1640  0074                     	ds	1
  1641  0075                     EUSART_Write@txData:	
  1642                           
  1643                           ; 1 bytes @ 0x5
  1644  0075                     	ds	1
  1645  0076                     ??_TMR0_SetInterruptHandler:	
  1646  0076                     ??_putch:	
  1647                           ; 1 bytes @ 0x6
  1648                           
  1649  0076                     ??_SYSTEM_Initialize:	
  1650                           ; 1 bytes @ 0x6
  1651                           
  1652                           
  1653                           	psect	cstackBANK0
  1654  0044                     __pcstackBANK0:	
  1655                           ; 1 bytes @ 0x6
  1656                           
  1657  0044                     ??_TMR0_Initialize:	
  1658  0044                     ??_EPWM_LoadDutyValue:	
  1659                           ; 1 bytes @ 0x0
  1660                           
  1661  0044                     putch@txData:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664                           
  1665                           ; 1 bytes @ 0x0
  1666  0044                     	ds	1
  1667  0045                     ?_printf:	
  1668  0045                     printf@f:	
  1669                           ; 2 bytes @ 0x1
  1670                           
  1671                           
  1672                           ; 2 bytes @ 0x1
  1673  0045                     	ds	2
  1674  0047                     ??_printf:	
  1675                           
  1676                           ; 1 bytes @ 0x3
  1677  0047                     	ds	3
  1678  004A                     printf@ap:	
  1679                           
  1680                           ; 1 bytes @ 0x6
  1681  004A                     	ds	1
  1682  004B                     printf@c:	
  1683                           
  1684                           ; 1 bytes @ 0x7
  1685  004B                     	ds	1
  1686  004C                     ??_GPS_Initialize:	
  1687                           
  1688                           ; 1 bytes @ 0x8
  1689  004C                     	ds	3
  1690  004F                     GPS_Initialize@tmp:	
  1691                           
  1692                           ; 1 bytes @ 0xB
  1693  004F                     	ds	1
  1694  0050                     ??_main:	
  1695                           
  1696                           ; 1 bytes @ 0xC
  1697  0050                     	ds	3
  1698  0053                     main@up:	
  1699                           
  1700                           ; 1 bytes @ 0xF
  1701  0053                     	ds	1
  1702  0054                     main@tmp:	
  1703                           
  1704                           ; 1 bytes @ 0x10
  1705  0054                     	ds	1
  1706  0055                     main@tmp_584:	
  1707                           
  1708                           ; 1 bytes @ 0x11
  1709  0055                     	ds	1
  1710  0056                     main@tmp_585:	
  1711                           
  1712                           ; 1 bytes @ 0x12
  1713  0056                     	ds	1
  1714  0057                     main@tmp_586:	
  1715                           
  1716                           ; 1 bytes @ 0x13
  1717  0057                     	ds	1
  1718  0058                     main@tmp_589:	
  1719                           
  1720                           ; 1 bytes @ 0x14
  1721  0058                     	ds	1
  1722  0059                     main@tmp_592:	
  1723                           
  1724                           ; 1 bytes @ 0x15
  1725  0059                     	ds	1
  1726  005A                     main@tmp_593:	
  1727                           
  1728                           ; 1 bytes @ 0x16
  1729  005A                     	ds	1
  1730  005B                     main@motor_load:	
  1731                           
  1732                           ; 2 bytes @ 0x17
  1733  005B                     	ds	2
  1734                           
  1735                           	psect	maintext
  1736  0034                     __pmaintext:	
  1737 ;;
  1738 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1739 ;;
  1740 ;; *************** function _main *****************
  1741 ;; Defined at:
  1742 ;;		line 103 in file "main.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  tmp             1   22[BANK0 ] unsigned char 
  1747 ;;  tmp             1   21[BANK0 ] unsigned char 
  1748 ;;  tmp             1   20[BANK0 ] unsigned char 
  1749 ;;  tmp             1   19[BANK0 ] unsigned char 
  1750 ;;  tmp             1   18[BANK0 ] unsigned char 
  1751 ;;  tmp             1   17[BANK0 ] unsigned char 
  1752 ;;  tmp             1   16[BANK0 ] unsigned char 
  1753 ;;  motor_load      2   23[BANK0 ] unsigned int 
  1754 ;;  up              1   15[BANK0 ] unsigned char 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : B1F/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1
  1764 ;;      Params:         0       0       0
  1765 ;;      Locals:         0      10       0
  1766 ;;      Temps:          0       3       0
  1767 ;;      Totals:         0      13       0
  1768 ;;Total ram usage:       13 bytes
  1769 ;; Hardware stack levels required when called:    9
  1770 ;; This function calls:
  1771 ;;		_EPWM_LoadDutyValue
  1772 ;;		_GPS_Initialize
  1773 ;;		_LED_set_state
  1774 ;;		_SYSTEM_Initialize
  1775 ;;		_TMR0_SetInterruptHandler
  1776 ;;		_TMR2_StartTimer
  1777 ;;		_button_init
  1778 ;; This function is called by:
  1779 ;;		Startup code after reset
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           
  1784                           ;psect for function _main
  1785  0034                     _main:	
  1786                           
  1787                           ;main.c: 106: SYSTEM_Initialize();
  1788                           
  1789                           ;incstack = 0
  1790                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1791  0034  23D0               	fcall	_SYSTEM_Initialize
  1792                           
  1793                           ;main.c: 107: TMR0_SetInterruptHandler(my10msTimerISR);
  1794  0035  30EB               	movlw	low _my10msTimerISR
  1795  0036  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1796  0037  3003               	movlw	high _my10msTimerISR
  1797  0038  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1798  0039  23DD               	fcall	_TMR0_SetInterruptHandler
  1799                           
  1800                           ;main.c: 113: (INTCONbits.GIE = 1);
  1801  003A  178B               	bsf	11,7	;volatile
  1802                           
  1803                           ;main.c: 116: (INTCONbits.PEIE = 1);
  1804  003B  170B               	bsf	11,6	;volatile
  1805                           
  1806                           ;main.c: 167: LED_set_state(slow_blinking);
  1807  003C  3002               	movlw	2
  1808  003D  2340               	fcall	_LED_set_state
  1809                           
  1810                           ;main.c: 168: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  1811  003E  0020               	movlb	0	; select bank0
  1812  003F  01D4               	clrf	main@tmp
  1813  0040  3032               	movlw	50
  1814  0041  0254               	subwf	main@tmp,w
  1815  0042  1803               	btfsc	3,0
  1816  0043  2859               	goto	l2117
  1817  0044                     l2111:	
  1818  0044  3005               	movlw	5
  1819  0045  00D2               	movwf	??_main+2
  1820  0046  300F               	movlw	15
  1821  0047  00D1               	movwf	??_main+1
  1822  0048  30F4               	movlw	244
  1823  0049  00D0               	movwf	??_main
  1824  004A                     u1697:	
  1825  004A  0BD0               	decfsz	??_main,f
  1826  004B  284A               	goto	u1697
  1827  004C  0BD1               	decfsz	??_main+1,f
  1828  004D  284A               	goto	u1697
  1829  004E  0BD2               	decfsz	??_main+2,f
  1830  004F  284A               	goto	u1697
  1831  0050  3001               	movlw	1
  1832  0051  0020               	movlb	0	; select bank0
  1833  0052  00D0               	movwf	??_main
  1834  0053  0850               	movf	??_main,w
  1835  0054  07D4               	addwf	main@tmp,f
  1836  0055  3032               	movlw	50
  1837  0056  0254               	subwf	main@tmp,w
  1838  0057  1C03               	skipc
  1839  0058  2844               	goto	l2111
  1840  0059                     l2117:	
  1841                           
  1842                           ;main.c: 169: LED_set_state(fast_blinking);
  1843  0059  3003               	movlw	3
  1844  005A  2340               	fcall	_LED_set_state
  1845                           
  1846                           ;main.c: 170: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  1847  005B  0020               	movlb	0	; select bank0
  1848  005C  01D5               	clrf	main@tmp_584
  1849  005D  3032               	movlw	50
  1850  005E  0255               	subwf	main@tmp_584,w
  1851  005F  1803               	btfsc	3,0
  1852  0060  2876               	goto	l2131
  1853  0061                     l2125:	
  1854  0061  3005               	movlw	5
  1855  0062  00D2               	movwf	??_main+2
  1856  0063  300F               	movlw	15
  1857  0064  00D1               	movwf	??_main+1
  1858  0065  30F4               	movlw	244
  1859  0066  00D0               	movwf	??_main
  1860  0067                     u1707:	
  1861  0067  0BD0               	decfsz	??_main,f
  1862  0068  2867               	goto	u1707
  1863  0069  0BD1               	decfsz	??_main+1,f
  1864  006A  2867               	goto	u1707
  1865  006B  0BD2               	decfsz	??_main+2,f
  1866  006C  2867               	goto	u1707
  1867  006D  3001               	movlw	1
  1868  006E  0020               	movlb	0	; select bank0
  1869  006F  00D0               	movwf	??_main
  1870  0070  0850               	movf	??_main,w
  1871  0071  07D5               	addwf	main@tmp_584,f
  1872  0072  3032               	movlw	50
  1873  0073  0255               	subwf	main@tmp_584,w
  1874  0074  1C03               	skipc
  1875  0075  2861               	goto	l2125
  1876  0076                     l2131:	
  1877                           
  1878                           ;main.c: 171: LED_set_state(always_on);
  1879  0076  3000               	movlw	0
  1880  0077  2340               	fcall	_LED_set_state
  1881                           
  1882                           ;main.c: 172: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  1883  0078  0020               	movlb	0	; select bank0
  1884  0079  01D6               	clrf	main@tmp_585
  1885  007A  3032               	movlw	50
  1886  007B  0256               	subwf	main@tmp_585,w
  1887  007C  1803               	btfsc	3,0
  1888  007D  2893               	goto	l2145
  1889  007E                     l2139:	
  1890  007E  3005               	movlw	5
  1891  007F  00D2               	movwf	??_main+2
  1892  0080  300F               	movlw	15
  1893  0081  00D1               	movwf	??_main+1
  1894  0082  30F4               	movlw	244
  1895  0083  00D0               	movwf	??_main
  1896  0084                     u1717:	
  1897  0084  0BD0               	decfsz	??_main,f
  1898  0085  2884               	goto	u1717
  1899  0086  0BD1               	decfsz	??_main+1,f
  1900  0087  2884               	goto	u1717
  1901  0088  0BD2               	decfsz	??_main+2,f
  1902  0089  2884               	goto	u1717
  1903  008A  3001               	movlw	1
  1904  008B  0020               	movlb	0	; select bank0
  1905  008C  00D0               	movwf	??_main
  1906  008D  0850               	movf	??_main,w
  1907  008E  07D6               	addwf	main@tmp_585,f
  1908  008F  3032               	movlw	50
  1909  0090  0256               	subwf	main@tmp_585,w
  1910  0091  1C03               	skipc
  1911  0092  287E               	goto	l2139
  1912  0093                     l2145:	
  1913                           
  1914                           ;main.c: 173: LED_set_state(always_off);
  1915  0093  3001               	movlw	1
  1916  0094  2340               	fcall	_LED_set_state
  1917                           
  1918                           ;main.c: 174: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  1919  0095  0020               	movlb	0	; select bank0
  1920  0096  01D7               	clrf	main@tmp_586
  1921  0097  3032               	movlw	50
  1922  0098  0257               	subwf	main@tmp_586,w
  1923  0099  1803               	btfsc	3,0
  1924  009A  28B0               	goto	l2159
  1925  009B                     l2153:	
  1926  009B  3005               	movlw	5
  1927  009C  00D2               	movwf	??_main+2
  1928  009D  300F               	movlw	15
  1929  009E  00D1               	movwf	??_main+1
  1930  009F  30F4               	movlw	244
  1931  00A0  00D0               	movwf	??_main
  1932  00A1                     u1727:	
  1933  00A1  0BD0               	decfsz	??_main,f
  1934  00A2  28A1               	goto	u1727
  1935  00A3  0BD1               	decfsz	??_main+1,f
  1936  00A4  28A1               	goto	u1727
  1937  00A5  0BD2               	decfsz	??_main+2,f
  1938  00A6  28A1               	goto	u1727
  1939  00A7  3001               	movlw	1
  1940  00A8  0020               	movlb	0	; select bank0
  1941  00A9  00D0               	movwf	??_main
  1942  00AA  0850               	movf	??_main,w
  1943  00AB  07D7               	addwf	main@tmp_586,f
  1944  00AC  3032               	movlw	50
  1945  00AD  0257               	subwf	main@tmp_586,w
  1946  00AE  1C03               	skipc
  1947  00AF  289B               	goto	l2153
  1948  00B0                     l2159:	
  1949                           
  1950                           ;main.c: 177: LED_set_state(always_on);
  1951  00B0  3000               	movlw	0
  1952  00B1  2340               	fcall	_LED_set_state
  1953                           
  1954                           ;main.c: 178: button_init();
  1955  00B2  2398               	fcall	_button_init
  1956  00B3                     l2161:	
  1957                           ;main.c: 180: {}
  1958                           
  1959                           ;main.c: 179: while (b_confirmed_state == nothing)
  1960                           
  1961  00B3  0020               	movlb	0	; select bank0
  1962  00B4  0838               	movf	_b_confirmed_state,w	;volatile
  1963  00B5  1903               	btfsc	3,2
  1964  00B6  28B3               	goto	l2161
  1965                           
  1966                           ;main.c: 182: if (b_confirmed_state == short_push)
  1967  00B7  0338               	decf	_b_confirmed_state,w	;volatile
  1968  00B8  1D03               	btfss	3,2
  1969  00B9  28BC               	goto	l2167
  1970                           
  1971                           ;main.c: 183: LED_set_state(fast_blinking);
  1972  00BA  3003               	movlw	3
  1973  00BB  28C2               	goto	L2
  1974  00BC                     l2167:	
  1975                           
  1976                           ;main.c: 184: else if (b_confirmed_state == long_push)
  1977  00BC  3002               	movlw	2
  1978  00BD  0020               	movlb	0	; select bank0
  1979  00BE  0638               	xorwf	_b_confirmed_state,w	;volatile
  1980  00BF  1D03               	btfss	3,2
  1981  00C0  28C3               	goto	l378
  1982                           
  1983                           ;main.c: 185: LED_set_state(slow_blinking);
  1984  00C1  3002               	movlw	2
  1985  00C2                     L2:	
  1986  00C2  2340               	fcall	_LED_set_state
  1987  00C3                     l378:	
  1988                           ;main.c: 188: {}
  1989                           
  1990                           ;main.c: 187: while(1)
  1991                           
  1992  00C3  28C3               	goto	l378
  1993  00C4                     l2181:	
  1994                           ;main.c: 196: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  1995                           
  1996                           ;main.c: 195: TMR2_StartTimer();
  1997                           
  1998                           ;main.c: 194: EPWM_LoadDutyValue(1023-motor_load);
  1999                           
  2000                           ;main.c: 193: uint16_t motor_load = 0;
  2001                           
  2002  00C4  3005               	movlw	5
  2003  00C5  00D2               	movwf	??_main+2
  2004  00C6  300F               	movlw	15
  2005  00C7  00D1               	movwf	??_main+1
  2006  00C8  30F4               	movlw	244
  2007  00C9  00D0               	movwf	??_main
  2008  00CA                     u1737:	
  2009  00CA  0BD0               	decfsz	??_main,f
  2010  00CB  28CA               	goto	u1737
  2011  00CC  0BD1               	decfsz	??_main+1,f
  2012  00CD  28CA               	goto	u1737
  2013  00CE  0BD2               	decfsz	??_main+2,f
  2014  00CF  28CA               	goto	u1737
  2015  00D0  3001               	movlw	1
  2016  00D1  0020               	movlb	0	; select bank0
  2017  00D2  00D0               	movwf	??_main
  2018  00D3  0850               	movf	??_main,w
  2019  00D4  07D8               	addwf	main@tmp_589,f
  2020  00D5  3032               	movlw	50
  2021  00D6  0258               	subwf	main@tmp_589,w
  2022  00D7  1C03               	skipc
  2023  00D8  28C4               	goto	l2181
  2024                           
  2025                           ;main.c: 198: GPS_Initialize();
  2026  00D9  222F               	fcall	_GPS_Initialize
  2027                           
  2028                           ;main.c: 199: bool up = 1;
  2029  00DA  0020               	movlb	0	; select bank0
  2030  00DB  01D3               	clrf	main@up
  2031  00DC  0AD3               	incf	main@up,f
  2032                           
  2033                           ;main.c: 222: EPWM_LoadDutyValue(0);
  2034  00DD  3000               	movlw	0
  2035  00DE  00F4               	movwf	EPWM_LoadDutyValue@dutyValue
  2036  00DF  00F5               	movwf	EPWM_LoadDutyValue@dutyValue+1
  2037  00E0  22D3               	fcall	_EPWM_LoadDutyValue
  2038                           
  2039                           ;main.c: 223: _delay((unsigned long)((10)*(32000000/4000.0)));
  2040  00E1  3068               	movlw	104
  2041  00E2  0020               	movlb	0	; select bank0
  2042  00E3  00D1               	movwf	??_main+1
  2043  00E4  30E4               	movlw	228
  2044  00E5  00D0               	movwf	??_main
  2045  00E6                     u1747:	
  2046  00E6  0BD0               	decfsz	??_main,f
  2047  00E7  28E6               	goto	u1747
  2048  00E8  0BD1               	decfsz	??_main+1,f
  2049  00E9  28E6               	goto	u1747
  2050  00EA  0000               	nop
  2051                           
  2052                           ;main.c: 224: EPWM_LoadDutyValue(1023-148);
  2053  00EB  306B               	movlw	107
  2054  00EC  00F4               	movwf	EPWM_LoadDutyValue@dutyValue
  2055  00ED  3003               	movlw	3
  2056  00EE  00F5               	movwf	EPWM_LoadDutyValue@dutyValue+1
  2057  00EF  22D3               	fcall	_EPWM_LoadDutyValue
  2058                           
  2059                           ;main.c: 225: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  2060  00F0  0020               	movlb	0	; select bank0
  2061  00F1  01D9               	clrf	main@tmp_592
  2062  00F2  3032               	movlw	50
  2063  00F3  0259               	subwf	main@tmp_592,w
  2064  00F4  1803               	btfsc	3,0
  2065  00F5  290B               	goto	l2209
  2066  00F6                     l2203:	
  2067  00F6  3005               	movlw	5
  2068  00F7  00D2               	movwf	??_main+2
  2069  00F8  300F               	movlw	15
  2070  00F9  00D1               	movwf	??_main+1
  2071  00FA  30F4               	movlw	244
  2072  00FB  00D0               	movwf	??_main
  2073  00FC                     u1757:	
  2074  00FC  0BD0               	decfsz	??_main,f
  2075  00FD  28FC               	goto	u1757
  2076  00FE  0BD1               	decfsz	??_main+1,f
  2077  00FF  28FC               	goto	u1757
  2078  0100  0BD2               	decfsz	??_main+2,f
  2079  0101  28FC               	goto	u1757
  2080  0102  3001               	movlw	1
  2081  0103  0020               	movlb	0	; select bank0
  2082  0104  00D0               	movwf	??_main
  2083  0105  0850               	movf	??_main,w
  2084  0106  07D9               	addwf	main@tmp_592,f
  2085  0107  3032               	movlw	50
  2086  0108  0259               	subwf	main@tmp_592,w
  2087  0109  1C03               	skipc
  2088  010A  28F6               	goto	l2203
  2089  010B                     l2209:	
  2090                           ;main.c: 226: while (1)
  2091                           
  2092                           
  2093                           ;main.c: 227: {
  2094                           ;main.c: 228: if (up == 1)
  2095  010B  0020               	movlb	0	; select bank0
  2096  010C  0353               	decf	main@up,w
  2097  010D  1D03               	btfss	3,2
  2098  010E  2914               	goto	l2213
  2099                           
  2100                           ;main.c: 229: motor_load += 1;
  2101  010F  3001               	movlw	1
  2102  0110  07DB               	addwf	main@motor_load,f
  2103  0111  3000               	movlw	0
  2104  0112  3DDC               	addwfc	main@motor_load+1,f
  2105  0113  2918               	goto	l386
  2106  0114                     l2213:	
  2107                           
  2108                           ;main.c: 230: else
  2109                           ;main.c: 231: motor_load -= 1;
  2110  0114  3001               	movlw	1
  2111  0115  02DB               	subwf	main@motor_load,f
  2112  0116  3000               	movlw	0
  2113  0117  3BDC               	subwfb	main@motor_load+1,f
  2114  0118                     l386:	
  2115                           
  2116                           ;main.c: 232: if (motor_load > 300)
  2117  0118  3001               	movlw	1
  2118  0119  025C               	subwf	main@motor_load+1,w
  2119  011A  302D               	movlw	45
  2120  011B  1903               	skipnz
  2121  011C  025B               	subwf	main@motor_load,w
  2122  011D  1C03               	skipc
  2123  011E  2921               	goto	l2217
  2124                           
  2125                           ;main.c: 233: up = 0;
  2126  011F  01D3               	clrf	main@up
  2127  0120  2955               	goto	l2239
  2128  0121                     l2217:	
  2129                           
  2130                           ;main.c: 234: else if (motor_load == 0)
  2131  0121  085B               	movf	main@motor_load,w
  2132  0122  045C               	iorwf	main@motor_load+1,w
  2133  0123  1D03               	btfss	3,2
  2134  0124  2955               	goto	l2239
  2135                           
  2136                           ;main.c: 235: {
  2137                           ;main.c: 236: up = 1;
  2138  0125  01D3               	clrf	main@up
  2139  0126  0AD3               	incf	main@up,f
  2140                           
  2141                           ;main.c: 237: EPWM_LoadDutyValue(1023);
  2142  0127  30FF               	movlw	255
  2143  0128  00F4               	movwf	EPWM_LoadDutyValue@dutyValue
  2144  0129  3003               	movlw	3
  2145  012A  00F5               	movwf	EPWM_LoadDutyValue@dutyValue+1
  2146  012B  22D3               	fcall	_EPWM_LoadDutyValue
  2147                           
  2148                           ;main.c: 238: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  2149  012C  0020               	movlb	0	; select bank0
  2150  012D  01DA               	clrf	main@tmp_593
  2151  012E  3032               	movlw	50
  2152  012F  025A               	subwf	main@tmp_593,w
  2153  0130  1803               	btfsc	3,0
  2154  0131  2947               	goto	l2235
  2155  0132                     l2229:	
  2156  0132  3005               	movlw	5
  2157  0133  00D2               	movwf	??_main+2
  2158  0134  300F               	movlw	15
  2159  0135  00D1               	movwf	??_main+1
  2160  0136  30F4               	movlw	244
  2161  0137  00D0               	movwf	??_main
  2162  0138                     u1767:	
  2163  0138  0BD0               	decfsz	??_main,f
  2164  0139  2938               	goto	u1767
  2165  013A  0BD1               	decfsz	??_main+1,f
  2166  013B  2938               	goto	u1767
  2167  013C  0BD2               	decfsz	??_main+2,f
  2168  013D  2938               	goto	u1767
  2169  013E  3001               	movlw	1
  2170  013F  0020               	movlb	0	; select bank0
  2171  0140  00D0               	movwf	??_main
  2172  0141  0850               	movf	??_main,w
  2173  0142  07DA               	addwf	main@tmp_593,f
  2174  0143  3032               	movlw	50
  2175  0144  025A               	subwf	main@tmp_593,w
  2176  0145  1C03               	skipc
  2177  0146  2932               	goto	l2229
  2178  0147                     l2235:	
  2179                           
  2180                           ;main.c: 240: EPWM_LoadDutyValue(0);
  2181  0147  3000               	movlw	0
  2182  0148  00F4               	movwf	EPWM_LoadDutyValue@dutyValue
  2183  0149  00F5               	movwf	EPWM_LoadDutyValue@dutyValue+1
  2184  014A  22D3               	fcall	_EPWM_LoadDutyValue
  2185                           
  2186                           ;main.c: 241: _delay((unsigned long)((10)*(32000000/4000.0)));
  2187  014B  3068               	movlw	104
  2188  014C  0020               	movlb	0	; select bank0
  2189  014D  00D1               	movwf	??_main+1
  2190  014E  30E4               	movlw	228
  2191  014F  00D0               	movwf	??_main
  2192  0150                     u1777:	
  2193  0150  0BD0               	decfsz	??_main,f
  2194  0151  2950               	goto	u1777
  2195  0152  0BD1               	decfsz	??_main+1,f
  2196  0153  2950               	goto	u1777
  2197  0154  0000               	nop
  2198  0155                     l2239:	
  2199                           
  2200                           ;main.c: 242: }
  2201                           ;main.c: 243: if (motor_load < 148)
  2202  0155  3000               	movlw	0
  2203  0156  0020               	movlb	0	; select bank0
  2204  0157  025C               	subwf	main@motor_load+1,w
  2205  0158  3094               	movlw	148
  2206  0159  1903               	skipnz
  2207  015A  025B               	subwf	main@motor_load,w
  2208  015B  1803               	skipnc
  2209  015C  2961               	goto	l2243
  2210                           
  2211                           ;main.c: 244: EPWM_LoadDutyValue(1023-135);
  2212  015D  3078               	movlw	120
  2213  015E  00F4               	movwf	EPWM_LoadDutyValue@dutyValue
  2214  015F  3003               	movlw	3
  2215  0160  296E               	goto	L1
  2216  0161                     l2243:	
  2217                           
  2218                           ;main.c: 245: else
  2219                           ;main.c: 246: EPWM_LoadDutyValue(1023-motor_load);
  2220  0161  0020               	movlb	0	; select bank0
  2221  0162  095B               	comf	main@motor_load,w
  2222  0163  00D0               	movwf	??_main
  2223  0164  095C               	comf	main@motor_load+1,w
  2224  0165  00D1               	movwf	??_main+1
  2225  0166  0AD0               	incf	??_main,f
  2226  0167  1903               	skipnz
  2227  0168  0AD1               	incf	??_main+1,f
  2228  0169  0850               	movf	??_main,w
  2229  016A  3EFF               	addlw	255
  2230  016B  00F4               	movwf	EPWM_LoadDutyValue@dutyValue
  2231  016C  3003               	movlw	3
  2232  016D  3D51               	addwfc	??_main+1,w
  2233  016E                     L1:	
  2234  016E  00F5               	movwf	EPWM_LoadDutyValue@dutyValue+1
  2235  016F  22D3               	fcall	_EPWM_LoadDutyValue
  2236                           
  2237                           ;main.c: 247: _delay((unsigned long)((50)*(32000000/4000.0)));
  2238  0170  3003               	movlw	3
  2239  0171  0020               	movlb	0	; select bank0
  2240  0172  00D2               	movwf	??_main+2
  2241  0173  3008               	movlw	8
  2242  0174  00D1               	movwf	??_main+1
  2243  0175  3078               	movlw	120
  2244  0176  00D0               	movwf	??_main
  2245  0177                     u1787:	
  2246  0177  0BD0               	decfsz	??_main,f
  2247  0178  2977               	goto	u1787
  2248  0179  0BD1               	decfsz	??_main+1,f
  2249  017A  2977               	goto	u1787
  2250  017B  0BD2               	decfsz	??_main+2,f
  2251  017C  2977               	goto	u1787
  2252  017D  290B               	goto	l2209
  2253  017E                     __end_of_main:	
  2254                           
  2255                           	psect	text1
  2256  0398                     __ptext1:	
  2257 ;; *************** function _button_init *****************
  2258 ;; Defined at:
  2259 ;;		line 46 in file "interact.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1
  2273 ;;      Params:         0       0       0
  2274 ;;      Locals:         0       0       0
  2275 ;;      Temps:          2       0       0
  2276 ;;      Totals:         2       0       0
  2277 ;;Total ram usage:        2 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    5
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_main
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           
  2288                           ;psect for function _button_init
  2289  0398                     _button_init:	
  2290                           
  2291                           ;interact.c: 48: b_last_state = PORTAbits.RA4;
  2292                           
  2293                           ;incstack = 0
  2294                           ; Regs used in _button_init: [wreg+status,2+status,0]
  2295  0398  0020               	movlb	0	; select bank0
  2296  0399  0E0C               	swapf	12,w	;volatile
  2297  039A  3901               	andlw	1
  2298  039B  00F4               	movwf	??_button_init
  2299  039C  01F5               	clrf	??_button_init+1
  2300  039D  0874               	movf	??_button_init,w
  2301  039E  00F6               	movwf	_b_last_state	;volatile
  2302  039F  0875               	movf	??_button_init+1,w
  2303  03A0  00F7               	movwf	_b_last_state+1	;volatile
  2304                           
  2305                           ;interact.c: 49: b_count_pressed = 0;
  2306  03A1  01B9               	clrf	_b_count_pressed	;volatile
  2307                           
  2308                           ;interact.c: 50: b_count_released = 0;
  2309  03A2  01BA               	clrf	_b_count_released	;volatile
  2310                           
  2311                           ;interact.c: 51: b_confirmed_state = nothing;
  2312  03A3  01B8               	clrf	_b_confirmed_state	;volatile
  2313                           
  2314                           ;interact.c: 52: b_push_confirmed = 0;
  2315  03A4  01BC               	clrf	_b_push_confirmed	;volatile
  2316                           
  2317                           ;interact.c: 53: b_release_confirmed = 0;
  2318  03A5  01BD               	clrf	_b_release_confirmed	;volatile
  2319                           
  2320                           ;interact.c: 54: b_has_once_been_released = 0;
  2321  03A6  01BB               	clrf	_b_has_once_been_released	;volatile
  2322  03A7  0008               	return
  2323  03A8                     __end_of_button_init:	
  2324                           
  2325                           	psect	text2
  2326  03D0                     __ptext2:	
  2327 ;; *************** function _SYSTEM_Initialize *****************
  2328 ;; Defined at:
  2329 ;;		line 69 in file "mcc_generated_files/mcc.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0, pclath, cstack
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1
  2343 ;;      Params:         0       0       0
  2344 ;;      Locals:         0       0       0
  2345 ;;      Temps:          0       0       0
  2346 ;;      Totals:         0       0       0
  2347 ;;Total ram usage:        0 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:    7
  2350 ;; This function calls:
  2351 ;;		_EPWM_Initialize
  2352 ;;		_EUSART_Initialize
  2353 ;;		_OSCILLATOR_Initialize
  2354 ;;		_PIN_MANAGER_Initialize
  2355 ;;		_TMR0_Initialize
  2356 ;;		_TMR2_Initialize
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           
  2363                           ;psect for function _SYSTEM_Initialize
  2364  03D0                     _SYSTEM_Initialize:	
  2365                           
  2366                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  2367                           
  2368                           ;incstack = 0
  2369                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2370  03D0  235A               	fcall	_PIN_MANAGER_Initialize
  2371                           
  2372                           ;mcc.c: 73: OSCILLATOR_Initialize();
  2373  03D1  23C8               	fcall	_OSCILLATOR_Initialize
  2374                           
  2375                           ;mcc.c: 74: EPWM_Initialize();
  2376  03D2  23A8               	fcall	_EPWM_Initialize
  2377                           
  2378                           ;mcc.c: 75: TMR2_Initialize();
  2379  03D3  23BF               	fcall	_TMR2_Initialize
  2380                           
  2381                           ;mcc.c: 76: TMR0_Initialize();
  2382  03D4  2370               	fcall	_TMR0_Initialize
  2383                           
  2384                           ;mcc.c: 77: EUSART_Initialize();
  2385  03D5  22EF               	fcall	_EUSART_Initialize
  2386  03D6  0008               	return
  2387  03D7                     __end_of_SYSTEM_Initialize:	
  2388                           
  2389                           	psect	text3
  2390  03BF                     __ptext3:	
  2391 ;; *************** function _TMR2_Initialize *****************
  2392 ;; Defined at:
  2393 ;;		line 57 in file "mcc_generated_files/tmr2.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;		None
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;		None
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, status,2, status,0, pclath, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMMON   BANK0   BANK1
  2407 ;;      Params:         0       0       0
  2408 ;;      Locals:         0       0       0
  2409 ;;      Temps:          0       0       0
  2410 ;;      Totals:         0       0       0
  2411 ;;Total ram usage:        0 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; Hardware stack levels required when called:    6
  2414 ;; This function calls:
  2415 ;;		_TMR2_StartTimer
  2416 ;; This function is called by:
  2417 ;;		_SYSTEM_Initialize
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           
  2422                           ;psect for function _TMR2_Initialize
  2423  03BF                     _TMR2_Initialize:	
  2424                           
  2425                           ;tmr2.c: 62: T2CON = 0x02;
  2426                           
  2427                           ;incstack = 0
  2428                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2429  03BF  3002               	movlw	2
  2430  03C0  0020               	movlb	0	; select bank0
  2431  03C1  009C               	movwf	28	;volatile
  2432                           
  2433                           ;tmr2.c: 65: PR2 = 0xFF;
  2434  03C2  30FF               	movlw	255
  2435  03C3  009B               	movwf	27	;volatile
  2436                           
  2437                           ;tmr2.c: 68: TMR2 = 0x00;
  2438  03C4  019A               	clrf	26	;volatile
  2439                           
  2440                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
  2441  03C5  1091               	bcf	17,1	;volatile
  2442                           
  2443                           ;tmr2.c: 74: TMR2_StartTimer();
  2444  03C6  23E8               	fcall	_TMR2_StartTimer
  2445  03C7  0008               	return
  2446  03C8                     __end_of_TMR2_Initialize:	
  2447                           
  2448                           	psect	text4
  2449  03E8                     __ptext4:	
  2450 ;; *************** function _TMR2_StartTimer *****************
  2451 ;; Defined at:
  2452 ;;		line 77 in file "mcc_generated_files/tmr2.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;		None
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;		None
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		None
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1
  2466 ;;      Params:         0       0       0
  2467 ;;      Locals:         0       0       0
  2468 ;;      Temps:          0       0       0
  2469 ;;      Totals:         0       0       0
  2470 ;;Total ram usage:        0 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    5
  2473 ;; This function calls:
  2474 ;;		Nothing
  2475 ;; This function is called by:
  2476 ;;		_TMR2_Initialize
  2477 ;;		_main
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           
  2482                           ;psect for function _TMR2_StartTimer
  2483  03E8                     _TMR2_StartTimer:	
  2484                           
  2485                           ;tmr2.c: 80: T2CONbits.TMR2ON = 1;
  2486                           
  2487                           ;incstack = 0
  2488                           ; Regs used in _TMR2_StartTimer: []
  2489  03E8  0020               	movlb	0	; select bank0
  2490  03E9  151C               	bsf	28,2	;volatile
  2491  03EA  0008               	return
  2492  03EB                     __end_of_TMR2_StartTimer:	
  2493                           
  2494                           	psect	text5
  2495  0370                     __ptext5:	
  2496 ;; *************** function _TMR0_Initialize *****************
  2497 ;; Defined at:
  2498 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      void 
  2505 ;; Registers used:
  2506 ;;		wreg, status,2, status,0, pclath, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMMON   BANK0   BANK1
  2512 ;;      Params:         0       0       0
  2513 ;;      Locals:         0       0       0
  2514 ;;      Temps:          0       1       0
  2515 ;;      Totals:         0       1       0
  2516 ;;Total ram usage:        1 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; Hardware stack levels required when called:    6
  2519 ;; This function calls:
  2520 ;;		_TMR0_SetInterruptHandler
  2521 ;; This function is called by:
  2522 ;;		_SYSTEM_Initialize
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _TMR0_Initialize
  2528  0370                     _TMR0_Initialize:	
  2529                           
  2530                           ;tmr0.c: 68: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2534  0370  0021               	movlb	1	; select bank1
  2535  0371  0815               	movf	21,w	;volatile
  2536  0372  39C0               	andlw	192
  2537  0373  3817               	iorlw	23
  2538  0374  0095               	movwf	21	;volatile
  2539                           
  2540                           ;tmr0.c: 71: TMR0 = 0x64;
  2541  0375  3064               	movlw	100
  2542  0376  0020               	movlb	0	; select bank0
  2543  0377  0095               	movwf	21	;volatile
  2544                           
  2545                           ;tmr0.c: 74: timer0ReloadVal= 100;
  2546  0378  3064               	movlw	100
  2547  0379  00C4               	movwf	??_TMR0_Initialize
  2548  037A  0844               	movf	??_TMR0_Initialize,w
  2549  037B  00C3               	movwf	_timer0ReloadVal	;volatile
  2550                           
  2551                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  2552  037C  110B               	bcf	11,2	;volatile
  2553                           
  2554                           ;tmr0.c: 80: INTCONbits.TMR0IE = 1;
  2555  037D  168B               	bsf	11,5	;volatile
  2556                           
  2557                           ;tmr0.c: 83: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  2558  037E  30EF               	movlw	low _TMR0_DefaultInterruptHandler
  2559  037F  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2560  0380  3003               	movlw	high _TMR0_DefaultInterruptHandler
  2561  0381  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2562  0382  23DD               	fcall	_TMR0_SetInterruptHandler
  2563  0383  0008               	return
  2564  0384                     __end_of_TMR0_Initialize:	
  2565                           
  2566                           	psect	text6
  2567  03DD                     __ptext6:	
  2568 ;; *************** function _TMR0_SetInterruptHandler *****************
  2569 ;; Defined at:
  2570 ;;		line 140 in file "mcc_generated_files/tmr0.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  InterruptHan    2    4[COMMON] PTR void 
  2573 ;;		 -> my10msTimerISR(1), TMR0_DefaultInterruptHandler(1), 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;		None
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1
  2585 ;;      Params:         2       0       0
  2586 ;;      Locals:         0       0       0
  2587 ;;      Temps:          0       0       0
  2588 ;;      Totals:         2       0       0
  2589 ;;Total ram usage:        2 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    5
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_TMR0_Initialize
  2596 ;;		_main
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           
  2601                           ;psect for function _TMR0_SetInterruptHandler
  2602  03DD                     _TMR0_SetInterruptHandler:	
  2603                           
  2604                           ;tmr0.c: 141: TMR0_InterruptHandler = InterruptHandler;
  2605                           
  2606                           ;incstack = 0
  2607                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2608  03DD  0875               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2609  03DE  0020               	movlb	0	; select bank0
  2610  03DF  00B6               	movwf	_TMR0_InterruptHandler+1
  2611  03E0  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2612  03E1  00B5               	movwf	_TMR0_InterruptHandler
  2613  03E2  0008               	return
  2614  03E3                     __end_of_TMR0_SetInterruptHandler:	
  2615                           
  2616                           	psect	text7
  2617  035A                     __ptext7:	
  2618 ;; *************** function _PIN_MANAGER_Initialize *****************
  2619 ;; Defined at:
  2620 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, status,2
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1
  2634 ;;      Params:         0       0       0
  2635 ;;      Locals:         0       0       0
  2636 ;;      Temps:          0       0       0
  2637 ;;      Totals:         0       0       0
  2638 ;;Total ram usage:        0 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    5
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_SYSTEM_Initialize
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           
  2649                           ;psect for function _PIN_MANAGER_Initialize
  2650  035A                     _PIN_MANAGER_Initialize:	
  2651                           
  2652                           ;pin_manager.c: 51: LATA = 0x0;
  2653                           
  2654                           ;incstack = 0
  2655                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2656  035A  0022               	movlb	2	; select bank2
  2657  035B  018C               	clrf	12	;volatile
  2658                           
  2659                           ;pin_manager.c: 52: LATC = 0x0;
  2660  035C  018E               	clrf	14	;volatile
  2661                           
  2662                           ;pin_manager.c: 53: ANSELA = 0x7;
  2663  035D  3007               	movlw	7
  2664  035E  0023               	movlb	3	; select bank3
  2665  035F  008C               	movwf	12	;volatile
  2666                           
  2667                           ;pin_manager.c: 54: ANSELC = 0xF;
  2668  0360  300F               	movlw	15
  2669  0361  008E               	movwf	14	;volatile
  2670                           
  2671                           ;pin_manager.c: 55: WPUA = 0x3F;
  2672  0362  303F               	movlw	63
  2673  0363  0024               	movlb	4	; select bank4
  2674  0364  008C               	movwf	12	;volatile
  2675                           
  2676                           ;pin_manager.c: 56: WPUC = 0x3F;
  2677  0365  303F               	movlw	63
  2678  0366  008E               	movwf	14	;volatile
  2679                           
  2680                           ;pin_manager.c: 57: TRISC = 0x37;
  2681  0367  3037               	movlw	55
  2682  0368  0021               	movlb	1	; select bank1
  2683  0369  008E               	movwf	14	;volatile
  2684                           
  2685                           ;pin_manager.c: 58: TRISA = 0x1F;
  2686  036A  301F               	movlw	31
  2687  036B  008C               	movwf	12	;volatile
  2688                           
  2689                           ;pin_manager.c: 60: OPTION_REGbits.nWPUEN = 0x0;
  2690  036C  1395               	bcf	21,7	;volatile
  2691                           
  2692                           ;pin_manager.c: 61: APFCON = 0x00;
  2693  036D  0022               	movlb	2	; select bank2
  2694  036E  019D               	clrf	29	;volatile
  2695  036F  0008               	return
  2696  0370                     __end_of_PIN_MANAGER_Initialize:	
  2697                           
  2698                           	psect	text8
  2699  03C8                     __ptext8:	
  2700 ;; *************** function _OSCILLATOR_Initialize *****************
  2701 ;; Defined at:
  2702 ;;		line 80 in file "mcc_generated_files/mcc.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;		None
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;		None
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      void 
  2709 ;; Registers used:
  2710 ;;		wreg, status,2
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMMON   BANK0   BANK1
  2716 ;;      Params:         0       0       0
  2717 ;;      Locals:         0       0       0
  2718 ;;      Temps:          0       0       0
  2719 ;;      Totals:         0       0       0
  2720 ;;Total ram usage:        0 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:    5
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_SYSTEM_Initialize
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           
  2731                           ;psect for function _OSCILLATOR_Initialize
  2732  03C8                     _OSCILLATOR_Initialize:	
  2733                           
  2734                           ;mcc.c: 83: OSCCON = 0x70;
  2735                           
  2736                           ;incstack = 0
  2737                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2738  03C8  3070               	movlw	112
  2739  03C9  0021               	movlb	1	; select bank1
  2740  03CA  0099               	movwf	25	;volatile
  2741                           
  2742                           ;mcc.c: 85: OSCSTAT = 0x00;
  2743  03CB  019A               	clrf	26	;volatile
  2744                           
  2745                           ;mcc.c: 87: OSCTUNE = 0x00;
  2746  03CC  0198               	clrf	24	;volatile
  2747  03CD                     l220:	
  2748                           ;mcc.c: 92: {
  2749                           
  2750                           ;mcc.c: 91: while(PLLR == 0)
  2751                           
  2752  03CD  1B1A               	btfsc	26,6	;volatile
  2753  03CE  0008               	return
  2754  03CF  2BCD               	goto	l220
  2755  03D0                     __end_of_OSCILLATOR_Initialize:	
  2756                           
  2757                           	psect	text9
  2758  02EF                     __ptext9:	
  2759 ;; *************** function _EUSART_Initialize *****************
  2760 ;; Defined at:
  2761 ;;		line 75 in file "mcc_generated_files/eusart.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;		None
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;		None
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMMON   BANK0   BANK1
  2775 ;;      Params:         0       0       0
  2776 ;;      Locals:         0       0       0
  2777 ;;      Temps:          1       0       0
  2778 ;;      Totals:         1       0       0
  2779 ;;Total ram usage:        1 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; Hardware stack levels required when called:    5
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		_SYSTEM_Initialize
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function _EUSART_Initialize
  2791  02EF                     _EUSART_Initialize:	
  2792                           
  2793                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  2794                           
  2795                           ;incstack = 0
  2796                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  2797  02EF  0021               	movlb	1	; select bank1
  2798  02F0  1291               	bcf	17,5	;volatile
  2799                           
  2800                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  2801  02F1  1211               	bcf	17,4	;volatile
  2802                           
  2803                           ;eusart.c: 84: BAUDCON = 0x08;
  2804  02F2  3008               	movlw	8
  2805  02F3  0023               	movlb	3	; select bank3
  2806  02F4  009F               	movwf	31	;volatile
  2807                           
  2808                           ;eusart.c: 87: RCSTA = 0x90;
  2809  02F5  3090               	movlw	144
  2810  02F6  009D               	movwf	29	;volatile
  2811                           
  2812                           ;eusart.c: 90: TXSTA = 0x24;
  2813  02F7  3024               	movlw	36
  2814  02F8  009E               	movwf	30	;volatile
  2815                           
  2816                           ;eusart.c: 93: SPBRGL = 0x40;
  2817  02F9  3040               	movlw	64
  2818  02FA  009B               	movwf	27	;volatile
  2819                           
  2820                           ;eusart.c: 96: SPBRGH = 0x03;
  2821  02FB  3003               	movlw	3
  2822  02FC  009C               	movwf	28	;volatile
  2823                           
  2824                           ;eusart.c: 100: eusartTxHead = 0;
  2825  02FD  0020               	movlb	0	; select bank0
  2826  02FE  01C0               	clrf	_eusartTxHead
  2827                           
  2828                           ;eusart.c: 101: eusartTxTail = 0;
  2829  02FF  01C1               	clrf	_eusartTxTail
  2830                           
  2831                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  2832  0300  3008               	movlw	8
  2833  0301  00F4               	movwf	??_EUSART_Initialize
  2834  0302  0874               	movf	??_EUSART_Initialize,w
  2835  0303  00F9               	movwf	_eusartTxBufferRemaining	;volatile
  2836                           
  2837                           ;eusart.c: 104: eusartRxHead = 0;
  2838  0304  01BE               	clrf	_eusartRxHead
  2839                           
  2840                           ;eusart.c: 105: eusartRxTail = 0;
  2841  0305  01BF               	clrf	_eusartRxTail
  2842                           
  2843                           ;eusart.c: 106: eusartRxCount = 0;
  2844  0306  01F8               	clrf	_eusartRxCount	;volatile
  2845                           
  2846                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  2847  0307  0021               	movlb	1	; select bank1
  2848  0308  1691               	bsf	17,5	;volatile
  2849  0309  0008               	return
  2850  030A                     __end_of_EUSART_Initialize:	
  2851                           
  2852                           	psect	text10
  2853  03A8                     __ptext10:	
  2854 ;; *************** function _EPWM_Initialize *****************
  2855 ;; Defined at:
  2856 ;;		line 63 in file "mcc_generated_files/epwm.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;		None
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;		None
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		wreg, status,2
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMMON   BANK0   BANK1
  2870 ;;      Params:         0       0       0
  2871 ;;      Locals:         0       0       0
  2872 ;;      Temps:          0       0       0
  2873 ;;      Totals:         0       0       0
  2874 ;;Total ram usage:        0 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    5
  2877 ;; This function calls:
  2878 ;;		Nothing
  2879 ;; This function is called by:
  2880 ;;		_SYSTEM_Initialize
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           
  2885                           ;psect for function _EPWM_Initialize
  2886  03A8                     _EPWM_Initialize:	
  2887                           
  2888                           ;epwm.c: 68: CCP1CON = 0x3C;
  2889                           
  2890                           ;incstack = 0
  2891                           ; Regs used in _EPWM_Initialize: [wreg+status,2]
  2892  03A8  303C               	movlw	60
  2893  03A9  0025               	movlb	5	; select bank5
  2894  03AA  0093               	movwf	19	;volatile
  2895                           
  2896                           ;epwm.c: 71: ECCP1AS = 0x00;
  2897  03AB  0195               	clrf	21	;volatile
  2898                           
  2899                           ;epwm.c: 74: PWM1CON = 0x80;
  2900  03AC  3080               	movlw	128
  2901  03AD  0094               	movwf	20	;volatile
  2902                           
  2903                           ;epwm.c: 77: PSTR1CON = 0x04;
  2904  03AE  3004               	movlw	4
  2905  03AF  0096               	movwf	22	;volatile
  2906                           
  2907                           ;epwm.c: 80: CCPR1L = 0x7F;
  2908  03B0  307F               	movlw	127
  2909  03B1  0091               	movwf	17	;volatile
  2910                           
  2911                           ;epwm.c: 83: CCPR1H = 0x00;
  2912  03B2  0192               	clrf	18	;volatile
  2913  03B3  0008               	return
  2914  03B4                     __end_of_EPWM_Initialize:	
  2915                           
  2916                           	psect	text11
  2917  0340                     __ptext11:	
  2918 ;; *************** function _LED_set_state *****************
  2919 ;; Defined at:
  2920 ;;		line 7 in file "interact.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  new_state       1    wreg     enum E2607
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;  new_state       1    4[COMMON] enum E2607
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1
  2934 ;;      Params:         0       0       0
  2935 ;;      Locals:         1       0       0
  2936 ;;      Temps:          0       0       0
  2937 ;;      Totals:         1       0       0
  2938 ;;Total ram usage:        1 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    5
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_main
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           
  2949                           ;psect for function _LED_set_state
  2950  0340                     _LED_set_state:	
  2951                           
  2952                           ;incstack = 0
  2953                           ; Regs used in _LED_set_state: [wreg+status,2+status,0]
  2954                           ;LED_set_state@new_state stored from wreg
  2955  0340  00F4               	movwf	LED_set_state@new_state
  2956                           
  2957                           ;interact.c: 9: if (new_state == always_off)
  2958  0341  0374               	decf	LED_set_state@new_state,w
  2959  0342  1D03               	btfss	3,2
  2960  0343  2B47               	goto	l1827
  2961                           
  2962                           ;interact.c: 10: do { LATA5 = 0; } while(0);
  2963  0344  0022               	movlb	2	; select bank2
  2964  0345  128C               	bcf	12,5	;volatile
  2965  0346  0008               	return
  2966  0347                     l1827:	
  2967                           
  2968                           ;interact.c: 11: else if (new_state == always_on)
  2969  0347  0874               	movf	LED_set_state@new_state,w
  2970  0348  1D03               	btfss	3,2
  2971  0349  2B4D               	goto	l1829
  2972                           
  2973                           ;interact.c: 12: do { LATA5 = 1; } while(0);
  2974  034A  0022               	movlb	2	; select bank2
  2975  034B  168C               	bsf	12,5	;volatile
  2976  034C  0008               	return
  2977  034D                     l1829:	
  2978                           
  2979                           ;interact.c: 13: else if ((new_state == slow_blinking)||(new_state == fast_blinking))
  2980  034D  3002               	movlw	2
  2981  034E  0674               	xorwf	LED_set_state@new_state,w
  2982  034F  1903               	btfsc	3,2
  2983  0350  2B55               	goto	l437
  2984  0351  3003               	movlw	3
  2985  0352  0674               	xorwf	LED_set_state@new_state,w
  2986  0353  1D03               	btfss	3,2
  2987  0354  0008               	return
  2988  0355                     l437:	
  2989                           ;interact.c: 14: {
  2990                           ;interact.c: 15: do { LATA5 = 1; } while(0);
  2991                           
  2992  0355  0022               	movlb	2	; select bank2
  2993  0356  168C               	bsf	12,5	;volatile
  2994                           
  2995                           ;interact.c: 16: LED_counter = 0;
  2996  0357  0020               	movlb	0	; select bank0
  2997  0358  01B7               	clrf	_LED_counter	;volatile
  2998  0359  0008               	return
  2999  035A                     __end_of_LED_set_state:	
  3000                           
  3001                           	psect	text12
  3002  022F                     __ptext12:	
  3003 ;; *************** function _GPS_Initialize *****************
  3004 ;; Defined at:
  3005 ;;		line 67 in file "main.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;		None
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  tmp             1   11[BANK0 ] unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMMON   BANK0   BANK1
  3019 ;;      Params:         0       0       0
  3020 ;;      Locals:         0       1       0
  3021 ;;      Temps:          0       3       0
  3022 ;;      Totals:         0       4       0
  3023 ;;Total ram usage:        4 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    8
  3026 ;; This function calls:
  3027 ;;		_printf
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           
  3034                           ;psect for function _GPS_Initialize
  3035  022F                     _GPS_Initialize:	
  3036                           
  3037                           ;main.c: 69: for(unsigned char tmp=0;tmp<(10*1);tmp++){_delay((unsigned long)((100)*(320
      +                          00000/4000.0)));};
  3038                           
  3039                           ;incstack = 0
  3040                           ; Regs used in _GPS_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3041  022F  0020               	movlb	0	; select bank0
  3042  0230  01CF               	clrf	GPS_Initialize@tmp
  3043  0231  300A               	movlw	10
  3044  0232  024F               	subwf	GPS_Initialize@tmp,w
  3045  0233  1803               	btfsc	3,0
  3046  0234  2A4A               	goto	l2093
  3047  0235                     l2087:	
  3048  0235  3005               	movlw	5
  3049  0236  00CE               	movwf	??_GPS_Initialize+2
  3050  0237  300F               	movlw	15
  3051  0238  00CD               	movwf	??_GPS_Initialize+1
  3052  0239  30F4               	movlw	244
  3053  023A  00CC               	movwf	??_GPS_Initialize
  3054  023B                     u1797:	
  3055  023B  0BCC               	decfsz	??_GPS_Initialize,f
  3056  023C  2A3B               	goto	u1797
  3057  023D  0BCD               	decfsz	??_GPS_Initialize+1,f
  3058  023E  2A3B               	goto	u1797
  3059  023F  0BCE               	decfsz	??_GPS_Initialize+2,f
  3060  0240  2A3B               	goto	u1797
  3061  0241  3001               	movlw	1
  3062  0242  0020               	movlb	0	; select bank0
  3063  0243  00CC               	movwf	??_GPS_Initialize
  3064  0244  084C               	movf	??_GPS_Initialize,w
  3065  0245  07CF               	addwf	GPS_Initialize@tmp,f
  3066  0246  300A               	movlw	10
  3067  0247  024F               	subwf	GPS_Initialize@tmp,w
  3068  0248  1C03               	skipc
  3069  0249  2A35               	goto	l2087
  3070  024A                     l2093:	
  3071                           
  3072                           ;main.c: 71: printf("$PMTK314,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0*29\r\n");
  3073  024A  30E9               	movlw	low (STR_1| (0+32768))
  3074  024B  00C5               	movwf	printf@f
  3075  024C  3081               	movlw	high (STR_1| (0+32768))
  3076  024D  00C6               	movwf	printf@f+1
  3077  024E  230A               	fcall	_printf
  3078                           
  3079                           ;main.c: 72: _delay((unsigned long)((100)*(32000000/4000.0)));
  3080  024F  3005               	movlw	5
  3081  0250  0020               	movlb	0	; select bank0
  3082  0251  00CE               	movwf	??_GPS_Initialize+2
  3083  0252  300F               	movlw	15
  3084  0253  00CD               	movwf	??_GPS_Initialize+1
  3085  0254  30F4               	movlw	244
  3086  0255  00CC               	movwf	??_GPS_Initialize
  3087  0256                     u1807:	
  3088  0256  0BCC               	decfsz	??_GPS_Initialize,f
  3089  0257  2A56               	goto	u1807
  3090  0258  0BCD               	decfsz	??_GPS_Initialize+1,f
  3091  0259  2A56               	goto	u1807
  3092  025A  0BCE               	decfsz	??_GPS_Initialize+2,f
  3093  025B  2A56               	goto	u1807
  3094                           
  3095                           ;main.c: 73: printf("$PMTK220,100*2F\r\n");
  3096  025C  301D               	movlw	low (STR_2| (0+32768))
  3097  025D  0020               	movlb	0	; select bank0
  3098  025E  00C5               	movwf	printf@f
  3099  025F  3082               	movlw	high (STR_2| (0+32768))
  3100  0260  00C6               	movwf	printf@f+1
  3101  0261  230A               	fcall	_printf
  3102                           
  3103                           ;main.c: 74: _delay((unsigned long)((100)*(32000000/4000.0)));
  3104  0262  3005               	movlw	5
  3105  0263  0020               	movlb	0	; select bank0
  3106  0264  00CE               	movwf	??_GPS_Initialize+2
  3107  0265  300F               	movlw	15
  3108  0266  00CD               	movwf	??_GPS_Initialize+1
  3109  0267  30F4               	movlw	244
  3110  0268  00CC               	movwf	??_GPS_Initialize
  3111  0269                     u1817:	
  3112  0269  0BCC               	decfsz	??_GPS_Initialize,f
  3113  026A  2A69               	goto	u1817
  3114  026B  0BCD               	decfsz	??_GPS_Initialize+1,f
  3115  026C  2A69               	goto	u1817
  3116  026D  0BCE               	decfsz	??_GPS_Initialize+2,f
  3117  026E  2A69               	goto	u1817
  3118  026F  0008               	return
  3119  0270                     __end_of_GPS_Initialize:	
  3120                           
  3121                           	psect	text13
  3122  030A                     __ptext13:	
  3123 ;; *************** function _printf *****************
  3124 ;; Defined at:
  3125 ;;		line 464 in file "/opt/microchip/xc8/v1.38/sources/common/doprnt.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  f               2    1[BANK0 ] PTR const unsigned char 
  3128 ;;		 -> STR_2(18), STR_1(52), 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  tmpval          4    0        struct .
  3131 ;;  cp              2    0        PTR const unsigned char 
  3132 ;;  len             2    0        unsigned int 
  3133 ;;  val             2    0        unsigned int 
  3134 ;;  c               1    7[BANK0 ] char 
  3135 ;;  ap              1    6[BANK0 ] PTR void [1]
  3136 ;;		 -> ?_printf(2), 
  3137 ;;  flag            1    0        unsigned char 
  3138 ;;  prec            1    0        char 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  2    1[BANK0 ] int 
  3141 ;; Registers used:
  3142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMMON   BANK0   BANK1
  3148 ;;      Params:         0       2       0
  3149 ;;      Locals:         0       2       0
  3150 ;;      Temps:          0       3       0
  3151 ;;      Totals:         0       7       0
  3152 ;;Total ram usage:        7 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    7
  3155 ;; This function calls:
  3156 ;;		_putch
  3157 ;; This function is called by:
  3158 ;;		_GPS_Initialize
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           
  3163                           ;psect for function _printf
  3164  030A                     _printf:	
  3165                           
  3166                           ;doprnt.c: 466: va_list ap;
  3167                           ;doprnt.c: 499: signed char c;
  3168                           ;doprnt.c: 506: signed char prec;
  3169                           ;doprnt.c: 508: unsigned char flag;
  3170                           ;doprnt.c: 523: union {
  3171                           ;doprnt.c: 524: unsigned long vd;
  3172                           ;doprnt.c: 525: double integ;
  3173                           ;doprnt.c: 526: } tmpval;
  3174                           ;doprnt.c: 528: unsigned int val;
  3175                           ;doprnt.c: 529: unsigned len;
  3176                           ;doprnt.c: 530: const char * cp;
  3177                           ;doprnt.c: 533: *ap = __va_start();
  3178                           
  3179                           ;incstack = 0
  3180                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3181  030A  3047               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3182  030B  0020               	movlb	0	; select bank0
  3183  030C  00C7               	movwf	??_printf
  3184  030D  0847               	movf	??_printf,w
  3185  030E  00CA               	movwf	printf@ap
  3186  030F                     l2075:	
  3187                           ;doprnt.c: 543: }
  3188                           ;doprnt.c: 1422: {
  3189                           
  3190                           ;doprnt.c: 542: continue;
  3191                           
  3192                           ;doprnt.c: 536: while(c = *f++) {
  3193                           
  3194  030F  0020               	movlb	0	; select bank0
  3195  0310  0846               	movf	printf@f+1,w
  3196  0311  00C8               	movwf	??_printf+1
  3197  0312  0845               	movf	printf@f,w
  3198  0313  00C7               	movwf	??_printf
  3199  0314  0AC5               	incf	printf@f,f
  3200  0315  1903               	skipnz
  3201  0316  0AC6               	incf	printf@f+1,f
  3202  0317  0847               	movf	??_printf,w
  3203  0318  0084               	movwf	4
  3204  0319  0848               	movf	??_printf+1,w
  3205  031A  0085               	movwf	5
  3206  031B  0800               	movf	0,w	;code access
  3207  031C  00C9               	movwf	??_printf+2
  3208  031D  0849               	movf	??_printf+2,w
  3209  031E  00CB               	movwf	printf@c
  3210  031F  084B               	movf	printf@c,w
  3211  0320  1903               	btfsc	3,2
  3212  0321  0008               	return
  3213                           
  3214                           ;doprnt.c: 540: {
  3215                           ;doprnt.c: 541: (putch(c) );
  3216  0322  084B               	movf	printf@c,w
  3217  0323  23E3               	fcall	_putch
  3218  0324  2B0F               	goto	l2075
  3219  0325                     __end_of_printf:	
  3220                           ;doprnt.c: 1469: }
  3221                           ;doprnt.c: 1533: }
  3222                           ;doprnt.c: 1540: return 0;
  3223                           ;	Return value of _printf is never used
  3224                           
  3225                           
  3226                           	psect	text14
  3227  03E3                     __ptext14:	
  3228 ;; *************** function _putch *****************
  3229 ;; Defined at:
  3230 ;;		line 164 in file "mcc_generated_files/eusart.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  txData          1    wreg     unsigned char 
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;  txData          1    0[BANK0 ] unsigned char 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMMON   BANK0   BANK1
  3244 ;;      Params:         0       0       0
  3245 ;;      Locals:         0       1       0
  3246 ;;      Temps:          0       0       0
  3247 ;;      Totals:         0       1       0
  3248 ;;Total ram usage:        1 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:    6
  3251 ;; This function calls:
  3252 ;;		_EUSART_Write
  3253 ;; This function is called by:
  3254 ;;		_printf
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           
  3259                           ;psect for function _putch
  3260  03E3                     _putch:	
  3261                           
  3262                           ;incstack = 0
  3263                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3264                           ;putch@txData stored from wreg
  3265  03E3  0020               	movlb	0	; select bank0
  3266  03E4  00C4               	movwf	putch@txData
  3267                           
  3268                           ;eusart.c: 166: EUSART_Write(txData);
  3269  03E5  0844               	movf	putch@txData,w
  3270  03E6  2294               	fcall	_EUSART_Write
  3271  03E7  0008               	return
  3272  03E8                     __end_of_putch:	
  3273                           
  3274                           	psect	text15
  3275  0294                     __ptext15:	
  3276 ;; *************** function _EUSART_Write *****************
  3277 ;; Defined at:
  3278 ;;		line 136 in file "mcc_generated_files/eusart.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  txData          1    wreg     unsigned char 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  txData          1    5[COMMON] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      void 
  3285 ;; Registers used:
  3286 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMMON   BANK0   BANK1
  3292 ;;      Params:         0       0       0
  3293 ;;      Locals:         1       0       0
  3294 ;;      Temps:          1       0       0
  3295 ;;      Totals:         2       0       0
  3296 ;;Total ram usage:        2 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    5
  3299 ;; This function calls:
  3300 ;;		Nothing
  3301 ;; This function is called by:
  3302 ;;		_putch
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           
  3307                           ;psect for function _EUSART_Write
  3308  0294                     _EUSART_Write:	
  3309                           
  3310                           ;incstack = 0
  3311                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  3312                           ;EUSART_Write@txData stored from wreg
  3313  0294  00F5               	movwf	EUSART_Write@txData
  3314  0295                     l2041:	
  3315                           ;eusart.c: 139: {
  3316                           
  3317                           ;eusart.c: 138: while(0 == eusartTxBufferRemaining)
  3318                           
  3319  0295  0879               	movf	_eusartTxBufferRemaining,w	;volatile
  3320  0296  1903               	btfsc	3,2
  3321  0297  2A95               	goto	l2041
  3322                           
  3323                           ;eusart.c: 140: }
  3324                           ;eusart.c: 142: if(0 == PIE1bits.TXIE)
  3325  0298  0021               	movlb	1	; select bank1
  3326  0299  1A11               	btfsc	17,4	;volatile
  3327  029A  2A9F               	goto	l131
  3328                           
  3329                           ;eusart.c: 143: {
  3330                           ;eusart.c: 144: TXREG = txData;
  3331  029B  0875               	movf	EUSART_Write@txData,w
  3332  029C  0023               	movlb	3	; select bank3
  3333  029D  009A               	movwf	26	;volatile
  3334                           
  3335                           ;eusart.c: 145: }
  3336  029E  2AB3               	goto	l2055
  3337  029F                     l131:	
  3338                           
  3339                           ;eusart.c: 146: else
  3340                           ;eusart.c: 147: {
  3341                           ;eusart.c: 148: PIE1bits.TXIE = 0;
  3342  029F  1211               	bcf	17,4	;volatile
  3343                           
  3344                           ;eusart.c: 149: eusartTxBuffer[eusartTxHead++] = txData;
  3345  02A0  0875               	movf	EUSART_Write@txData,w
  3346  02A1  00F4               	movwf	??_EUSART_Write
  3347  02A2  0020               	movlb	0	; select bank0
  3348  02A3  0840               	movf	_eusartTxHead,w
  3349  02A4  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  3350  02A5  0086               	movwf	6
  3351  02A6  0187               	clrf	7
  3352  02A7  0874               	movf	??_EUSART_Write,w
  3353  02A8  0081               	movwf	1
  3354  02A9  3001               	movlw	1
  3355  02AA  00F4               	movwf	??_EUSART_Write
  3356  02AB  0874               	movf	??_EUSART_Write,w
  3357  02AC  07C0               	addwf	_eusartTxHead,f
  3358                           
  3359                           ;eusart.c: 150: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  3360  02AD  3008               	movlw	8
  3361  02AE  0240               	subwf	_eusartTxHead,w
  3362  02AF  1803               	btfsc	3,0
  3363                           
  3364                           ;eusart.c: 151: {
  3365                           ;eusart.c: 152: eusartTxHead = 0;
  3366  02B0  01C0               	clrf	_eusartTxHead
  3367                           
  3368                           ;eusart.c: 153: }
  3369                           ;eusart.c: 154: eusartTxBufferRemaining--;
  3370  02B1  3001               	movlw	1
  3371  02B2  02F9               	subwf	_eusartTxBufferRemaining,f	;volatile
  3372  02B3                     l2055:	
  3373                           
  3374                           ;eusart.c: 155: }
  3375                           ;eusart.c: 156: PIE1bits.TXIE = 1;
  3376  02B3  0021               	movlb	1	; select bank1
  3377  02B4  1611               	bsf	17,4	;volatile
  3378  02B5  0008               	return
  3379  02B6                     __end_of_EUSART_Write:	
  3380                           
  3381                           	psect	text16
  3382  02D3                     __ptext16:	
  3383 ;; *************** function _EPWM_LoadDutyValue *****************
  3384 ;; Defined at:
  3385 ;;		line 87 in file "mcc_generated_files/epwm.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  dutyValue       2    4[COMMON] unsigned int 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMMON   BANK0   BANK1
  3399 ;;      Params:         2       0       0
  3400 ;;      Locals:         0       0       0
  3401 ;;      Temps:          0       2       0
  3402 ;;      Totals:         2       2       0
  3403 ;;Total ram usage:        4 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    5
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_main
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           
  3414                           ;psect for function _EPWM_LoadDutyValue
  3415  02D3                     _EPWM_LoadDutyValue:	
  3416                           
  3417                           ;epwm.c: 90: CCPR1L = ((dutyValue & 0x03FC)>>2);
  3418                           
  3419                           ;incstack = 0
  3420                           ; Regs used in _EPWM_LoadDutyValue: [wreg+status,2+status,0]
  3421  02D3  0875               	movf	EPWM_LoadDutyValue@dutyValue+1,w
  3422  02D4  0020               	movlb	0	; select bank0
  3423  02D5  00C5               	movwf	??_EPWM_LoadDutyValue+1
  3424  02D6  0874               	movf	EPWM_LoadDutyValue@dutyValue,w
  3425  02D7  00C4               	movwf	??_EPWM_LoadDutyValue
  3426  02D8  36C5               	lsrf	??_EPWM_LoadDutyValue+1,f
  3427  02D9  0CC4               	rrf	??_EPWM_LoadDutyValue,f
  3428  02DA  36C5               	lsrf	??_EPWM_LoadDutyValue+1,f
  3429  02DB  0CC4               	rrf	??_EPWM_LoadDutyValue,f
  3430  02DC  0844               	movf	??_EPWM_LoadDutyValue,w
  3431  02DD  0025               	movlb	5	; select bank5
  3432  02DE  0091               	movwf	17	;volatile
  3433                           
  3434                           ;epwm.c: 93: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3435  02DF  0874               	movf	EPWM_LoadDutyValue@dutyValue,w
  3436  02E0  3903               	andlw	3
  3437  02E1  0020               	movlb	0	; select bank0
  3438  02E2  00C4               	movwf	??_EPWM_LoadDutyValue
  3439  02E3  3004               	movlw	4
  3440  02E4                     u1455:	
  3441  02E4  35C4               	lslf	??_EPWM_LoadDutyValue,f
  3442  02E5  0B89               	decfsz	9,f
  3443  02E6  2AE4               	goto	u1455
  3444  02E7  0025               	movlb	5	; select bank5
  3445  02E8  0813               	movf	19,w	;volatile
  3446  02E9  39CF               	andlw	207
  3447  02EA  0020               	movlb	0	; select bank0
  3448  02EB  0444               	iorwf	??_EPWM_LoadDutyValue,w
  3449  02EC  0025               	movlb	5	; select bank5
  3450  02ED  0093               	movwf	19	;volatile
  3451  02EE  0008               	return
  3452  02EF                     __end_of_EPWM_LoadDutyValue:	
  3453                           
  3454                           	psect	intentry
  3455  0004                     __pintentry:	
  3456 ;; *************** function _INTERRUPT_InterruptManager *****************
  3457 ;; Defined at:
  3458 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;		None
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;		None
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      void 
  3465 ;; Registers used:
  3466 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMMON   BANK0   BANK1
  3472 ;;      Params:         0       0       0
  3473 ;;      Locals:         0       0       0
  3474 ;;      Temps:          1       0       0
  3475 ;;      Totals:         1       0       0
  3476 ;;Total ram usage:        1 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:    4
  3479 ;; This function calls:
  3480 ;;		_EUSART_Receive_ISR
  3481 ;;		_EUSART_Transmit_ISR
  3482 ;;		_TMR0_ISR
  3483 ;; This function is called by:
  3484 ;;		Interrupt level 1
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488  0004                     _INTERRUPT_InterruptManager:	
  3489                           
  3490                           ;incstack = 0
  3491  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3492                           
  3493                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  3494  0005  3180               	pagesel	$
  3495  0006  0020               	movlb	0	; select bank0
  3496  0007  087F               	movf	127,w
  3497  0008  00F3               	movwf	??_INTERRUPT_InterruptManager
  3498                           
  3499                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  3500  0009  1A8B               	btfsc	11,5	;volatile
  3501  000A  1D0B               	btfss	11,2	;volatile
  3502  000B  280D               	goto	i1l1859
  3503                           
  3504                           ;interrupt_manager.c: 55: {
  3505                           ;interrupt_manager.c: 56: TMR0_ISR();
  3506  000C  2384               	fcall	_TMR0_ISR
  3507  000D                     i1l1859:	
  3508                           
  3509                           ;interrupt_manager.c: 57: }
  3510                           ;interrupt_manager.c: 58: if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits.TXIF
      +                           == 1)
  3511  000D  1F0B               	btfss	11,6	;volatile
  3512  000E  2816               	goto	i1l1867
  3513  000F  0021               	movlb	1	; select bank1
  3514  0010  1E11               	btfss	17,4	;volatile
  3515  0011  2816               	goto	i1l1867
  3516  0012  0020               	movlb	0	; select bank0
  3517  0013  1E11               	btfss	17,4	;volatile
  3518  0014  2816               	goto	i1l1867
  3519                           
  3520                           ;interrupt_manager.c: 59: {
  3521                           ;interrupt_manager.c: 60: EUSART_Transmit_ISR();
  3522  0015  22B6               	fcall	_EUSART_Transmit_ISR
  3523  0016                     i1l1867:	
  3524                           
  3525                           ;interrupt_manager.c: 61: }
  3526                           ;interrupt_manager.c: 62: if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits.RCIF
      +                           == 1)
  3527  0016  1F0B               	btfss	11,6	;volatile
  3528  0017  281F               	goto	i1l244
  3529  0018  0021               	movlb	1	; select bank1
  3530  0019  1E91               	btfss	17,5	;volatile
  3531  001A  281F               	goto	i1l244
  3532  001B  0020               	movlb	0	; select bank0
  3533  001C  1E91               	btfss	17,5	;volatile
  3534  001D  281F               	goto	i1l244
  3535                           
  3536                           ;interrupt_manager.c: 63: {
  3537                           ;interrupt_manager.c: 64: EUSART_Receive_ISR();
  3538  001E  2325               	fcall	_EUSART_Receive_ISR
  3539  001F                     i1l244:	
  3540                           ;interrupt_manager.c: 66: else
  3541                           ;interrupt_manager.c: 67: {
  3542                           
  3543                           ;interrupt_manager.c: 65: }
  3544                           
  3545  001F  0873               	movf	??_INTERRUPT_InterruptManager,w
  3546  0020  0020               	movlb	0	; select bank0
  3547  0021  00FF               	movwf	127
  3548  0022  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3549  0023  0009               	retfie
  3550  0024                     __end_of_INTERRUPT_InterruptManager:	
  3551                           
  3552                           	psect	text18
  3553  0384                     __ptext18:	
  3554 ;; *************** function _TMR0_ISR *****************
  3555 ;; Defined at:
  3556 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;		None
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;		None
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  1    wreg      void 
  3563 ;; Registers used:
  3564 ;;		wreg, status,2, status,0, pclath, cstack
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMMON   BANK0   BANK1
  3570 ;;      Params:         0       0       0
  3571 ;;      Locals:         0       0       0
  3572 ;;      Temps:          0       0       0
  3573 ;;      Totals:         0       0       0
  3574 ;;Total ram usage:        0 bytes
  3575 ;; Hardware stack levels used:    1
  3576 ;; Hardware stack levels required when called:    3
  3577 ;; This function calls:
  3578 ;;		_TMR0_CallBack
  3579 ;; This function is called by:
  3580 ;;		_INTERRUPT_InterruptManager
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           
  3585                           ;psect for function _TMR0_ISR
  3586  0384                     _TMR0_ISR:	
  3587                           
  3588                           ;tmr0.c: 110: static volatile uint16_t CountCallBack = 0;
  3589                           ;tmr0.c: 113: INTCONbits.TMR0IF = 0;
  3590                           
  3591                           ;incstack = 0
  3592                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3593  0384  110B               	bcf	11,2	;volatile
  3594                           
  3595                           ;tmr0.c: 115: TMR0 = timer0ReloadVal;
  3596  0385  0020               	movlb	0	; select bank0
  3597  0386  0843               	movf	_timer0ReloadVal,w	;volatile
  3598  0387  0095               	movwf	21	;volatile
  3599                           
  3600                           ;tmr0.c: 118: if (++CountCallBack >= 2)
  3601  0388  3001               	movlw	1
  3602  0389  07B3               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  3603  038A  3000               	movlw	0
  3604  038B  3DB4               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  3605  038C  3000               	movlw	0
  3606  038D  0234               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  3607  038E  3002               	movlw	2
  3608  038F  1903               	skipnz
  3609  0390  0233               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  3610  0391  1C03               	skipc
  3611  0392  0008               	return
  3612                           
  3613                           ;tmr0.c: 119: {
  3614                           ;tmr0.c: 121: TMR0_CallBack();
  3615  0393  23B4               	fcall	_TMR0_CallBack
  3616                           
  3617                           ;tmr0.c: 124: CountCallBack = 0;
  3618  0394  0020               	movlb	0	; select bank0
  3619  0395  01B3               	clrf	TMR0_ISR@CountCallBack	;volatile
  3620  0396  01B4               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  3621  0397  0008               	return
  3622  0398                     __end_of_TMR0_ISR:	
  3623                           
  3624                           	psect	text19
  3625  03B4                     __ptext19:	
  3626 ;; *************** function _TMR0_CallBack *****************
  3627 ;; Defined at:
  3628 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0, pclath, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMMON   BANK0   BANK1
  3642 ;;      Params:         0       0       0
  3643 ;;      Locals:         0       0       0
  3644 ;;      Temps:          0       0       0
  3645 ;;      Totals:         0       0       0
  3646 ;;Total ram usage:        0 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    2
  3649 ;; This function calls:
  3650 ;;		Absolute function
  3651 ;;		_TMR0_DefaultInterruptHandler
  3652 ;;		_my10msTimerISR
  3653 ;; This function is called by:
  3654 ;;		_TMR0_ISR
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           
  3659                           ;psect for function _TMR0_CallBack
  3660  03B4                     _TMR0_CallBack:	
  3661                           
  3662                           ;tmr0.c: 134: if(TMR0_InterruptHandler)
  3663                           
  3664                           ;incstack = 0
  3665                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3666  03B4  0020               	movlb	0	; select bank0
  3667  03B5  0835               	movf	_TMR0_InterruptHandler,w
  3668  03B6  0436               	iorwf	_TMR0_InterruptHandler+1,w
  3669  03B7  1903               	btfsc	3,2
  3670  03B8  0008               	return
  3671                           
  3672                           ;tmr0.c: 135: {
  3673                           ;tmr0.c: 136: TMR0_InterruptHandler();
  3674  03B9  0836               	movf	_TMR0_InterruptHandler+1,w
  3675  03BA  008A               	movwf	10
  3676  03BB  0835               	movf	_TMR0_InterruptHandler,w
  3677  03BC  000A               	callw
  3678  03BD  3183               	pagesel	$
  3679  03BE  0008               	return
  3680  03BF                     __end_of_TMR0_CallBack:	
  3681                           
  3682                           	psect	text20
  3683  03EF                     __ptext20:	
  3684 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3685 ;; Defined at:
  3686 ;;		line 144 in file "mcc_generated_files/tmr0.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;		None
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		None
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMMON   BANK0   BANK1
  3700 ;;      Params:         0       0       0
  3701 ;;      Locals:         0       0       0
  3702 ;;      Temps:          0       0       0
  3703 ;;      Totals:         0       0       0
  3704 ;;Total ram usage:        0 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_TMR0_Initialize
  3710 ;;		_TMR0_CallBack
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           
  3715                           ;psect for function _TMR0_DefaultInterruptHandler
  3716  03EF                     _TMR0_DefaultInterruptHandler:	
  3717                           
  3718                           ;incstack = 0
  3719                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  3720  03EF  0008               	return
  3721  03F0                     __end_of_TMR0_DefaultInterruptHandler:	
  3722                           
  3723                           	psect	text21
  3724  03EB                     __ptext21:	
  3725 ;; *************** function _my10msTimerISR *****************
  3726 ;; Defined at:
  3727 ;;		line 267 in file "main.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;		None
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;		None
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      void 
  3734 ;; Registers used:
  3735 ;;		wreg, status,2, status,0, pclath, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMMON   BANK0   BANK1
  3741 ;;      Params:         0       0       0
  3742 ;;      Locals:         0       0       0
  3743 ;;      Temps:          0       0       0
  3744 ;;      Totals:         0       0       0
  3745 ;;Total ram usage:        0 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:    1
  3748 ;; This function calls:
  3749 ;;		_LED_update_loop
  3750 ;;		_button_update_loop
  3751 ;; This function is called by:
  3752 ;;		_main
  3753 ;;		_TMR0_CallBack
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           
  3758                           ;psect for function _my10msTimerISR
  3759  03EB                     _my10msTimerISR:	
  3760                           
  3761                           ;main.c: 269: LED_update_loop();
  3762                           
  3763                           ;incstack = 0
  3764                           ; Regs used in _my10msTimerISR: [wreg+status,2+status,0+pclath+cstack]
  3765  03EB  2270               	fcall	_LED_update_loop
  3766                           
  3767                           ;main.c: 270: button_update_loop();
  3768  03EC  217E               	fcall	_button_update_loop
  3769  03ED  0008               	return
  3770  03EE                     __end_of_my10msTimerISR:	
  3771                           
  3772                           	psect	text22
  3773  017E                     __ptext22:	
  3774 ;; *************** function _button_update_loop *****************
  3775 ;; Defined at:
  3776 ;;		line 57 in file "interact.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;		None
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;  current_stat    1    2[COMMON] unsigned char 
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  1    wreg      void 
  3783 ;; Registers used:
  3784 ;;		wreg, status,2, status,0
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMMON   BANK0   BANK1
  3790 ;;      Params:         0       0       0
  3791 ;;      Locals:         1       0       0
  3792 ;;      Temps:          2       0       0
  3793 ;;      Totals:         3       0       0
  3794 ;;Total ram usage:        3 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_my10msTimerISR
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           
  3804                           ;psect for function _button_update_loop
  3805  017E                     _button_update_loop:	
  3806                           
  3807                           ;interact.c: 59: unsigned char current_state = PORTAbits.RA4;
  3808                           
  3809                           ;incstack = 0
  3810                           ; Regs used in _button_update_loop: [wreg+status,2+status,0]
  3811  017E  3000               	movlw	0
  3812  017F  0020               	movlb	0	; select bank0
  3813  0180  1A0C               	btfsc	12,4	;volatile
  3814  0181  3001               	movlw	1
  3815  0182  00F2               	movwf	button_update_loop@current_state
  3816                           
  3817                           ;interact.c: 60: if (!b_push_confirmed)
  3818  0183  083C               	movf	_b_push_confirmed,w	;volatile
  3819  0184  1D03               	btfss	3,2
  3820  0185  29AB               	goto	i1l1635
  3821                           
  3822                           ;interact.c: 61: {
  3823                           ;interact.c: 63: if (current_state != b_last_state)
  3824  0186  0872               	movf	button_update_loop@current_state,w
  3825  0187  00F0               	movwf	??_button_update_loop
  3826  0188  01F1               	clrf	??_button_update_loop+1
  3827  0189  0877               	movf	_b_last_state+1,w	;volatile
  3828  018A  0671               	xorwf	??_button_update_loop+1,w
  3829  018B  1D03               	skipz
  3830  018C  298F               	goto	u83_25
  3831  018D  0876               	movf	_b_last_state,w	;volatile
  3832  018E  0670               	xorwf	??_button_update_loop,w
  3833  018F                     u83_25:	
  3834  018F  1903               	skipnz
  3835  0190  299A               	goto	i1l1627
  3836                           
  3837                           ;interact.c: 64: {
  3838                           ;interact.c: 65: b_count_pressed = 0;
  3839  0191  01B9               	clrf	_b_count_pressed	;volatile
  3840                           
  3841                           ;interact.c: 66: b_last_state = current_state;
  3842  0192  0872               	movf	button_update_loop@current_state,w
  3843  0193  00F0               	movwf	??_button_update_loop
  3844  0194  01F1               	clrf	??_button_update_loop+1
  3845  0195  0870               	movf	??_button_update_loop,w
  3846  0196  00F6               	movwf	_b_last_state	;volatile
  3847  0197  0871               	movf	??_button_update_loop+1,w
  3848  0198  00F7               	movwf	_b_last_state+1	;volatile
  3849                           
  3850                           ;interact.c: 67: }
  3851  0199  0008               	return
  3852  019A                     i1l1627:	
  3853                           
  3854                           ;interact.c: 68: else if (b_last_state == 1)
  3855  019A  0376               	decf	_b_last_state,w	;volatile
  3856  019B  0477               	iorwf	_b_last_state+1,w	;volatile
  3857  019C  1D03               	btfss	3,2
  3858  019D  0008               	return
  3859                           
  3860                           ;interact.c: 69: {
  3861                           ;interact.c: 70: b_count_pressed++;
  3862  019E  3001               	movlw	1
  3863  019F  00F0               	movwf	??_button_update_loop
  3864  01A0  0870               	movf	??_button_update_loop,w
  3865  01A1  07B9               	addwf	_b_count_pressed,f	;volatile
  3866                           
  3867                           ;interact.c: 71: if (b_count_pressed > 10)
  3868  01A2  300B               	movlw	11
  3869  01A3  0239               	subwf	_b_count_pressed,w	;volatile
  3870  01A4  1C03               	skipc
  3871  01A5  0008               	return
  3872                           
  3873                           ;interact.c: 72: b_push_confirmed = 1;
  3874  01A6  3001               	movlw	1
  3875  01A7  00F0               	movwf	??_button_update_loop
  3876  01A8  0870               	movf	??_button_update_loop,w
  3877  01A9  00BC               	movwf	_b_push_confirmed	;volatile
  3878                           
  3879                           ;interact.c: 73: }
  3880                           ;interact.c: 74: }
  3881  01AA  0008               	return
  3882  01AB                     i1l1635:	
  3883                           
  3884                           ;interact.c: 75: else
  3885                           ;interact.c: 76: {
  3886                           ;interact.c: 77: if (current_state != b_last_state)
  3887  01AB  0872               	movf	button_update_loop@current_state,w
  3888  01AC  00F0               	movwf	??_button_update_loop
  3889  01AD  01F1               	clrf	??_button_update_loop+1
  3890  01AE  0877               	movf	_b_last_state+1,w	;volatile
  3891  01AF  0671               	xorwf	??_button_update_loop+1,w
  3892  01B0  1D03               	skipz
  3893  01B1  29B4               	goto	u86_25
  3894  01B2  0876               	movf	_b_last_state,w	;volatile
  3895  01B3  0670               	xorwf	??_button_update_loop,w
  3896  01B4                     u86_25:	
  3897  01B4  1903               	skipnz
  3898  01B5  29C3               	goto	i1l1643
  3899                           
  3900                           ;interact.c: 78: {
  3901                           ;interact.c: 79: b_count_released = 0;
  3902  01B6  01BA               	clrf	_b_count_released	;volatile
  3903                           
  3904                           ;interact.c: 80: b_last_state = current_state;
  3905  01B7  0872               	movf	button_update_loop@current_state,w
  3906  01B8  00F0               	movwf	??_button_update_loop
  3907  01B9  01F1               	clrf	??_button_update_loop+1
  3908  01BA  0870               	movf	??_button_update_loop,w
  3909  01BB  00F6               	movwf	_b_last_state	;volatile
  3910  01BC  0871               	movf	??_button_update_loop+1,w
  3911  01BD  00F7               	movwf	_b_last_state+1	;volatile
  3912                           
  3913                           ;interact.c: 81: b_has_once_been_released = 1;
  3914  01BE  3001               	movlw	1
  3915  01BF  00F0               	movwf	??_button_update_loop
  3916  01C0  0870               	movf	??_button_update_loop,w
  3917  01C1  00BB               	movwf	_b_has_once_been_released	;volatile
  3918                           
  3919                           ;interact.c: 82: }
  3920  01C2  0008               	return
  3921  01C3                     i1l1643:	
  3922                           
  3923                           ;interact.c: 83: else if ((b_last_state == 1)&&(!b_has_once_been_released))
  3924  01C3  0376               	decf	_b_last_state,w	;volatile
  3925  01C4  0477               	iorwf	_b_last_state+1,w	;volatile
  3926  01C5  1D03               	btfss	3,2
  3927  01C6  29CF               	goto	i1l1649
  3928  01C7  083B               	movf	_b_has_once_been_released,w	;volatile
  3929  01C8  1D03               	btfss	3,2
  3930  01C9  29CF               	goto	i1l1649
  3931                           
  3932                           ;interact.c: 84: b_count_pressed++;
  3933  01CA  3001               	movlw	1
  3934  01CB  00F0               	movwf	??_button_update_loop
  3935  01CC  0870               	movf	??_button_update_loop,w
  3936  01CD  07B9               	addwf	_b_count_pressed,f	;volatile
  3937  01CE  0008               	return
  3938  01CF                     i1l1649:	
  3939                           
  3940                           ;interact.c: 85: else if (b_last_state == 0)
  3941  01CF  0876               	movf	_b_last_state,w	;volatile
  3942  01D0  0477               	iorwf	_b_last_state+1,w	;volatile
  3943  01D1  1D03               	btfss	3,2
  3944  01D2  0008               	return
  3945                           
  3946                           ;interact.c: 86: {
  3947                           ;interact.c: 87: b_count_released++;
  3948  01D3  3001               	movlw	1
  3949  01D4  00F0               	movwf	??_button_update_loop
  3950  01D5  0870               	movf	??_button_update_loop,w
  3951  01D6  07BA               	addwf	_b_count_released,f	;volatile
  3952                           
  3953                           ;interact.c: 88: if (b_count_released > 10)
  3954  01D7  300B               	movlw	11
  3955  01D8  023A               	subwf	_b_count_released,w	;volatile
  3956  01D9  1C03               	skipc
  3957  01DA  0008               	return
  3958                           
  3959                           ;interact.c: 89: if (b_count_pressed >= 100)
  3960  01DB  3064               	movlw	100
  3961  01DC  0239               	subwf	_b_count_pressed,w	;volatile
  3962  01DD  1C03               	skipc
  3963  01DE  29E4               	goto	i1l1659
  3964                           
  3965                           ;interact.c: 90: b_confirmed_state = long_push;
  3966  01DF  3002               	movlw	2
  3967  01E0  00F0               	movwf	??_button_update_loop
  3968  01E1  0870               	movf	??_button_update_loop,w
  3969  01E2  00B8               	movwf	_b_confirmed_state	;volatile
  3970  01E3  0008               	return
  3971  01E4                     i1l1659:	
  3972                           
  3973                           ;interact.c: 91: else
  3974                           ;interact.c: 92: b_confirmed_state = short_push;
  3975  01E4  3001               	movlw	1
  3976  01E5  00F0               	movwf	??_button_update_loop
  3977  01E6  0870               	movf	??_button_update_loop,w
  3978  01E7  00B8               	movwf	_b_confirmed_state	;volatile
  3979  01E8  0008               	return
  3980  01E9                     __end_of_button_update_loop:	
  3981                           
  3982                           	psect	text23
  3983  0270                     __ptext23:	
  3984 ;; *************** function _LED_update_loop *****************
  3985 ;; Defined at:
  3986 ;;		line 20 in file "interact.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;		None
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;		None
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg, status,2, status,0
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMMON   BANK0   BANK1
  4000 ;;      Params:         0       0       0
  4001 ;;      Locals:         0       0       0
  4002 ;;      Temps:          1       0       0
  4003 ;;      Totals:         1       0       0
  4004 ;;Total ram usage:        1 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_my10msTimerISR
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           
  4014                           ;psect for function _LED_update_loop
  4015  0270                     _LED_update_loop:	
  4016                           
  4017                           ;interact.c: 22: if (LED_state == slow_blinking)
  4018                           
  4019                           ;incstack = 0
  4020                           ; Regs used in _LED_update_loop: [wreg+status,2+status,0]
  4021  0270  3002               	movlw	2
  4022  0271  0020               	movlb	0	; select bank0
  4023  0272  065D               	xorwf	_LED_state,w
  4024  0273  1D03               	btfss	3,2
  4025  0274  2A82               	goto	i1l1607
  4026                           
  4027                           ;interact.c: 23: {
  4028                           ;interact.c: 24: LED_counter++;
  4029  0275  3001               	movlw	1
  4030  0276  00F0               	movwf	??_LED_update_loop
  4031  0277  0870               	movf	??_LED_update_loop,w
  4032  0278  07B7               	addwf	_LED_counter,f	;volatile
  4033                           
  4034                           ;interact.c: 25: if (LED_counter >= 100)
  4035  0279  3064               	movlw	100
  4036  027A  0237               	subwf	_LED_counter,w	;volatile
  4037  027B  1C03               	skipc
  4038  027C  0008               	return
  4039                           
  4040                           ;interact.c: 26: {
  4041                           ;interact.c: 27: LED_counter = 0;
  4042  027D  01B7               	clrf	_LED_counter	;volatile
  4043                           
  4044                           ;interact.c: 28: do { LATA5 = ~LATA5; } while(0);
  4045  027E  3020               	movlw	32
  4046  027F  0022               	movlb	2	; select bank2
  4047  0280  068C               	xorwf	12,f
  4048                           
  4049                           ;interact.c: 29: }
  4050                           ;interact.c: 30: }
  4051  0281  0008               	return
  4052  0282                     i1l1607:	
  4053                           
  4054                           ;interact.c: 31: else if (LED_state == fast_blinking)
  4055  0282  3003               	movlw	3
  4056  0283  0020               	movlb	0	; select bank0
  4057  0284  065D               	xorwf	_LED_state,w
  4058  0285  1D03               	btfss	3,2
  4059  0286  0008               	return
  4060                           
  4061                           ;interact.c: 32: {
  4062                           ;interact.c: 33: LED_counter++;
  4063  0287  3001               	movlw	1
  4064  0288  00F0               	movwf	??_LED_update_loop
  4065  0289  0870               	movf	??_LED_update_loop,w
  4066  028A  07B7               	addwf	_LED_counter,f	;volatile
  4067                           
  4068                           ;interact.c: 34: if (LED_counter >= 50)
  4069  028B  3032               	movlw	50
  4070  028C  0237               	subwf	_LED_counter,w	;volatile
  4071  028D  1C03               	skipc
  4072  028E  0008               	return
  4073                           
  4074                           ;interact.c: 35: {
  4075                           ;interact.c: 36: LED_counter = 0;
  4076  028F  01B7               	clrf	_LED_counter	;volatile
  4077                           
  4078                           ;interact.c: 37: do { LATA5 = ~LATA5; } while(0);
  4079  0290  3020               	movlw	32
  4080  0291  0022               	movlb	2	; select bank2
  4081  0292  068C               	xorwf	12,f
  4082  0293  0008               	return
  4083  0294                     __end_of_LED_update_loop:	
  4084                           
  4085                           	psect	text24
  4086  02B6                     __ptext24:	
  4087 ;; *************** function _EUSART_Transmit_ISR *****************
  4088 ;; Defined at:
  4089 ;;		line 169 in file "mcc_generated_files/eusart.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;		None
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;		None
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMMON   BANK0   BANK1
  4103 ;;      Params:         0       0       0
  4104 ;;      Locals:         0       0       0
  4105 ;;      Temps:          1       0       0
  4106 ;;      Totals:         1       0       0
  4107 ;;Total ram usage:        1 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		_INTERRUPT_InterruptManager
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           
  4117                           ;psect for function _EUSART_Transmit_ISR
  4118  02B6                     _EUSART_Transmit_ISR:	
  4119                           
  4120                           ;eusart.c: 173: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  4121                           
  4122                           ;incstack = 0
  4123                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4124  02B6  3008               	movlw	8
  4125  02B7  0279               	subwf	_eusartTxBufferRemaining,w	;volatile
  4126  02B8  1803               	skipnc
  4127  02B9  2AD0               	goto	i1l143
  4128                           
  4129                           ;eusart.c: 174: {
  4130                           ;eusart.c: 175: TXREG = eusartTxBuffer[eusartTxTail++];
  4131  02BA  0020               	movlb	0	; select bank0
  4132  02BB  0841               	movf	_eusartTxTail,w
  4133  02BC  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4134  02BD  0086               	movwf	6
  4135  02BE  0187               	clrf	7
  4136  02BF  0801               	movf	1,w
  4137  02C0  0023               	movlb	3	; select bank3
  4138  02C1  009A               	movwf	26	;volatile
  4139  02C2  3001               	movlw	1
  4140  02C3  00F0               	movwf	??_EUSART_Transmit_ISR
  4141  02C4  0870               	movf	??_EUSART_Transmit_ISR,w
  4142  02C5  0020               	movlb	0	; select bank0
  4143  02C6  07C1               	addwf	_eusartTxTail,f
  4144                           
  4145                           ;eusart.c: 176: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  4146  02C7  3008               	movlw	8
  4147  02C8  0241               	subwf	_eusartTxTail,w
  4148  02C9  1803               	btfsc	3,0
  4149                           
  4150                           ;eusart.c: 177: {
  4151                           ;eusart.c: 178: eusartTxTail = 0;
  4152  02CA  01C1               	clrf	_eusartTxTail
  4153                           
  4154                           ;eusart.c: 179: }
  4155                           ;eusart.c: 180: eusartTxBufferRemaining++;
  4156  02CB  3001               	movlw	1
  4157  02CC  00F0               	movwf	??_EUSART_Transmit_ISR
  4158  02CD  0870               	movf	??_EUSART_Transmit_ISR,w
  4159  02CE  07F9               	addwf	_eusartTxBufferRemaining,f	;volatile
  4160                           
  4161                           ;eusart.c: 181: }
  4162  02CF  0008               	return
  4163  02D0                     i1l143:	
  4164                           
  4165                           ;eusart.c: 182: else
  4166                           ;eusart.c: 183: {
  4167                           ;eusart.c: 184: PIE1bits.TXIE = 0;
  4168  02D0  0021               	movlb	1	; select bank1
  4169  02D1  1211               	bcf	17,4	;volatile
  4170  02D2  0008               	return
  4171  02D3                     __end_of_EUSART_Transmit_ISR:	
  4172                           
  4173                           	psect	text25
  4174  0325                     __ptext25:	
  4175 ;; *************** function _EUSART_Receive_ISR *****************
  4176 ;; Defined at:
  4177 ;;		line 188 in file "mcc_generated_files/eusart.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;		None
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;		None
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1
  4191 ;;      Params:         0       0       0
  4192 ;;      Locals:         0       0       0
  4193 ;;      Temps:          1       0       0
  4194 ;;      Totals:         1       0       0
  4195 ;;Total ram usage:        1 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_INTERRUPT_InterruptManager
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           
  4205                           ;psect for function _EUSART_Receive_ISR
  4206  0325                     _EUSART_Receive_ISR:	
  4207                           
  4208                           ;eusart.c: 191: if(1 == RCSTAbits.OERR)
  4209                           
  4210                           ;incstack = 0
  4211                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4212  0325  0023               	movlb	3	; select bank3
  4213  0326  1C9D               	btfss	29,1	;volatile
  4214  0327  2B2A               	goto	i1l1785
  4215                           
  4216                           ;eusart.c: 192: {
  4217                           ;eusart.c: 195: RCSTAbits.SPEN = 0;
  4218  0328  139D               	bcf	29,7	;volatile
  4219                           
  4220                           ;eusart.c: 196: RCSTAbits.SPEN = 1;
  4221  0329  179D               	bsf	29,7	;volatile
  4222  032A                     i1l1785:	
  4223                           
  4224                           ;eusart.c: 197: }
  4225                           ;eusart.c: 200: eusartRxBuffer[eusartRxHead++] = RCREG;
  4226  032A  0819               	movf	25,w	;volatile
  4227  032B  00F0               	movwf	??_EUSART_Receive_ISR
  4228  032C  0020               	movlb	0	; select bank0
  4229  032D  083E               	movf	_eusartRxHead,w
  4230  032E  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4231  032F  0086               	movwf	6
  4232  0330  0187               	clrf	7
  4233  0331  0870               	movf	??_EUSART_Receive_ISR,w
  4234  0332  0081               	movwf	1
  4235  0333  3001               	movlw	1
  4236  0334  00F0               	movwf	??_EUSART_Receive_ISR
  4237  0335  0870               	movf	??_EUSART_Receive_ISR,w
  4238  0336  07BE               	addwf	_eusartRxHead,f
  4239                           
  4240                           ;eusart.c: 201: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  4241  0337  3008               	movlw	8
  4242  0338  023E               	subwf	_eusartRxHead,w
  4243  0339  1803               	btfsc	3,0
  4244                           
  4245                           ;eusart.c: 202: {
  4246                           ;eusart.c: 203: eusartRxHead = 0;
  4247  033A  01BE               	clrf	_eusartRxHead
  4248                           
  4249                           ;eusart.c: 204: }
  4250                           ;eusart.c: 205: eusartRxCount++;
  4251  033B  3001               	movlw	1
  4252  033C  00F0               	movwf	??_EUSART_Receive_ISR
  4253  033D  0870               	movf	??_EUSART_Receive_ISR,w
  4254  033E  07F8               	addwf	_eusartRxCount,f	;volatile
  4255  033F  0008               	return
  4256  0340                     __end_of_EUSART_Receive_ISR:	
  4257  007E                     btemp	set	126	;btemp
  4258  007E                     int$flags	set	126
  4259  007E                     wtemp	set	126
  4260  007E                     wtemp0	set	126
  4261  0080                     wtemp1	set	128
  4262  0082                     wtemp2	set	130
  4263  0084                     wtemp3	set	132
  4264  0086                     wtemp4	set	134
  4265  0088                     wtemp5	set	136
  4266  007F                     wtemp6	set	127
  4267  007E                     ttemp	set	126
  4268  007E                     ttemp0	set	126
  4269  0081                     ttemp1	set	129
  4270  0084                     ttemp2	set	132
  4271  0087                     ttemp3	set	135
  4272  007F                     ttemp4	set	127
  4273  007E                     ltemp	set	126
  4274  007E                     ltemp0	set	126
  4275  0082                     ltemp1	set	130
  4276  0086                     ltemp2	set	134
  4277  0080                     ltemp3	set	128


Data Sizes:
    Strings     70
    Constant    0
    Data        1
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     25      62
    BANK1            32      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_2(CODE[18]), STR_1(CODE[52]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> my10msTimerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my10msTimerISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_EPWM_LoadDutyValue
    _main->_TMR0_SetInterruptHandler
    _main->_button_init
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _putch->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _my10msTimerISR->_button_update_loop

Critical Paths under _main in BANK0

    _main->_GPS_Initialize
    _SYSTEM_Initialize->_TMR0_Initialize
    _GPS_Initialize->_printf
    _printf->_putch

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    2052
                                             12 BANK0     13    13      0
                 _EPWM_LoadDutyValue
                     _GPS_Initialize
                      _LED_set_state
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR2_StartTimer
                        _button_init
 ---------------------------------------------------------------------------------
 (1) _button_init                                          2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     150
                    _EPWM_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     150
                                              0 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     150
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EPWM_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_set_state                                        1     1      0      88
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _GPS_Initialize                                       4     4      0     383
                                              8 BANK0      4     4      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              19    17      2     315
                                              1 BANK0      7     5      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      93
                                              0 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         2     2      0      62
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _EPWM_LoadDutyValue                                   4     2      2     601
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0      89
                                              3 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0      89
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0      89
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                     _my10msTimerISR *
 ---------------------------------------------------------------------------------
 (8) _my10msTimerISR                                       0     0      0      89
                    _LED_update_loop
                 _button_update_loop
 ---------------------------------------------------------------------------------
 (9) _button_update_loop                                   3     3      0      89
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _LED_update_loop                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM_LoadDutyValue
   _GPS_Initialize
     _printf
       _putch
         _EUSART_Write
   _LED_set_state
   _SYSTEM_Initialize
     _EPWM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_StartTimer
   _TMR0_SetInterruptHandler
   _TMR2_StartTimer
   _button_init

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _my10msTimerISR *
         _LED_update_loop
         _button_update_loop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      48       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     19      3E       6       77.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      48       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Sep 16 09:23:06 2016

                             __CFG_CP$OFF 0000                           _timer0ReloadVal 0043  
                                     l131 029F                                       l220 03CD  
                  __end_of_my10msTimerISR 03EE                                       l437 0355  
                                     l386 0118                                       l378 00C3  
                                     _PR2 001B                              __CFG_CPD$OFF 0000  
                         _TMR2_Initialize 03BF                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_IESO$ON 0000  
                            __CFG_LVP$OFF 0000                                      l2111 0044  
                                    l2041 0295                                      l2203 00F6  
                                    l2131 0076                                      l2213 0114  
                                    l2125 0061                                      l2117 0059  
                                    l2055 02B3                                      l2217 0121  
                                    l2209 010B                                      l2161 00B3  
                                    l2153 009B                                      l2145 0093  
                                    l2075 030F                                      l2243 0161  
                                    l2235 0147                                      l2139 007E  
                                    l2093 024A                                      l2229 0132  
                                    l2181 00C4                                      l2087 0235  
                                    l2239 0155                                      l2167 00BC  
                                    l2159 00B0                                      l1827 0347  
                                    l1829 034D                                      STR_1 01E9  
                                    STR_2 021D                                      _LATA 010C  
                                    _LATC 010E                                      u1455 02E4  
                                    u1707 0067                                      u1717 0084  
                                    u1807 0256                                      u1727 00A1  
                                    u1817 0269                                      u1737 00CA  
                                    u1747 00E6                                      u1757 00FC  
                                    u1767 0138                                      u1777 0150  
                                    u1697 004A                                      u1787 0177  
                                    u1797 023B                                      _PLLR 04D6  
                                    _TMR0 0015                                      _TMR2 001A  
                                    _WPUA 020C                                      _WPUC 020E  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
                             main@tmp_592 0059                               main@tmp_584 0055  
                             main@tmp_593 005A                               main@tmp_585 0056  
                             main@tmp_586 0057                               main@tmp_589 0058  
                                    _main 0034                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf0 0000                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000                                      ltemp 007E  
                                    start 0024                                      ttemp 007E  
                                    wtemp 007E                             __CFG_MCLRE$ON 0000  
                 __end_of_TMR0_Initialize 0384                             __CFG_PLLEN$ON 0000  
          ??_TMR0_DefaultInterruptHandler 0070                             ?_EUSART_Write 0070  
          __size_of_OSCILLATOR_Initialize 0008             __end_of_OSCILLATOR_Initialize 03D0  
                                   ?_main 0070                             __CFG_WDTE$OFF 0000  
                                   _T2CON 001C                                     _LATA5 0865  
                         ?_my10msTimerISR 0070                                     i1l143 02D0  
                                   i1l244 001F                                     _RCREG 0199  
                                   _RCSTA 019D                                     _TRISA 008C  
                                   _TRISC 008E                                     u83_25 018F  
                                   u86_25 01B4                                     _TXREG 019A  
                                   _TXSTA 019E                          ??_GPS_Initialize 004C  
       __size_of_TMR0_SetInterruptHandler 0006                              ?_button_init 0070  
               ?_TMR0_SetInterruptHandler 0074                          __end_of_TMR0_ISR 0398  
                                   _speed 0030                                     _putch 03E3  
                 __end_of_LED_update_loop 0294                                     pclath 000A  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                           _TMR2_StartTimer 03E8  
                         __initialization 0025                    __size_of_LED_set_state 001A  
                            __end_of_main 017E                            ??_EUSART_Write 0074  
                 __end_of_TMR2_Initialize 03C8               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 0050                              _b_last_state 0076  
                        _b_push_confirmed 003C                           _b_count_pressed 0039  
                                  _EEADRH 0192                                    _EEADRL 0191  
                                  _CCPR1H 0292                                    _EEDATH 0194  
                                  _CCPR1L 0291                                    _EEDATL 0193  
                                  _EECON2 0196                                    _APFCON 011D  
                                  _ANSELA 018C                                    ?_putch 0070  
                                  _ANSELC 018E                                    i1l1607 0282  
                                  i1l1643 01C3                                    i1l1627 019A  
                                  i1l1635 01AB                                    i1l1649 01CF  
                                  i1l1659 01E4                                    i1l1785 032A  
                                  i1l1867 0016                                    i1l1859 000D  
                                  _OSCCON 0099                                    _SPBRGH 019C  
                                  _SPBRGL 019B                            __CFG_PWRTE$OFF 0000  
                          __CFG_STVREN$ON 0000                       _EUSART_Transmit_ISR 02B6  
                        ?_TMR0_Initialize 0070                __end_of_button_update_loop 01E9  
                                  _printf 030A                                    main@up 0053  
                __size_of_EPWM_Initialize 000C                             _LED_set_state 0340  
                   __end_of_TMR0_CallBack 03BF                   __end_of_TMR2_StartTimer 03EB  
TMR0_SetInterruptHandler@InterruptHandler 0074                      ?_EUSART_Transmit_ISR 0070  
             __size_of_EPWM_LoadDutyValue 001C                          ?_LED_update_loop 0070  
                       _SYSTEM_Initialize 03D0                   __end_of__initialization 0031  
                      ?_SYSTEM_Initialize 0070                            __pcstackCOMMON 0070  
                            __pidataBANK0 03EE                       ??_SYSTEM_Initialize 0076  
                               ?_TMR0_ISR 0070                             __end_of_putch 03E8  
                        ?_TMR2_Initialize 0070                            _OPTION_REGbits 0095  
                   TMR0_ISR@CountCallBack 0033                            ?_LED_set_state 0070  
                _b_has_once_been_released 003B                      __size_of_button_init 0010  
               __end_of_SYSTEM_Initialize 03D7                     ??_EUSART_Transmit_ISR 0070  
                                 ??_putch 0076                                __pbssBANK0 0020  
                    __end_of_EUSART_Write 02B6                          _b_count_released 003A  
             __size_of_EUSART_Receive_ISR 001B                                __pmaintext 0034  
        __end_of_TMR0_SetInterruptHandler 03E3                                ??_TMR0_ISR 0073  
                        ??_my10msTimerISR 0073                                __pintentry 0004  
                                 _CCP1CON 0293                                   _ECCP1AS 0295  
                                 _BAUDCON 019F                                   ?_printf 0045  
                           _eusartRxCount 0078                                   _OSCSTAT 009A  
                                 _OSCTUNE 0098                                   _PWM1CON 0294  
                        ?_TMR2_StartTimer 0070                         ??_EPWM_Initialize 0074  
                                 __ptext1 0398                                   __ptext2 03D0  
                                 __ptext3 03BF                                   __ptext4 03E8  
                                 __ptext5 0370                                   __ptext6 03DD  
                                 __ptext7 035A                                   __ptext8 03C8  
                                 __ptext9 02EF                           __size_of_printf 001B  
                         ??_LED_set_state 0074                     _OSCILLATOR_Initialize 03C8  
                               _T2CONbits 001C                  ??_PIN_MANAGER_Initialize 0074  
              __size_of_SYSTEM_Initialize 0007                                   clrloop0 03D8  
                                 main@tmp 0054                            main@motor_load 005B  
                    end_of_initialization 0031                    LED_set_state@new_state 0074  
                               _LED_state 005D               EPWM_LoadDutyValue@dutyValue 0074  
                       _EUSART_Initialize 02EF                        ?_EUSART_Initialize 0070  
                               _RCSTAbits 019D                                   printf@c 004B  
                                 printf@f 0045                              __pstringtext 01E9  
                     ??_EUSART_Initialize 0074                  _TMR0_SetInterruptHandler 03DD  
                               _PORTAbits 000C                          __CFG_FOSC$INTOSC 0000  
                   __size_of_EUSART_Write 0022                        _button_update_loop 017E  
               __end_of_EUSART_Initialize 030A                   __size_of_GPS_Initialize 0041  
                     ?_button_update_loop 0070                              _EUSART_Write 0294  
                       __size_of_TMR0_ISR 0014                    ?_OSCILLATOR_Initialize 0070  
                    ??_button_update_loop 0070                            __end_of_printf 0325  
                     start_initialization 0025                  __size_of_TMR0_Initialize 0014  
         __size_of_PIN_MANAGER_Initialize 0016                __end_of_EPWM_LoadDutyValue 02EF  
                             putch@txData 0044                  __size_of_LED_update_loop 0024  
                  __size_of_TMR0_CallBack 000B                               __pdataBANK0 005D  
                                ??_printf 0047                           _EPWM_Initialize 03A8  
             __end_of_EUSART_Transmit_ISR 02D3                             ??_button_init 0074  
                             __pbssCOMMON 0076                                 ___latbits 0000  
                           __pcstackBANK0 0044                  __size_of_TMR2_Initialize 0009  
              __end_of_EUSART_Receive_ISR 0340                __size_of_EUSART_Initialize 001B  
                   _TMR0_InterruptHandler 0035                    _PIN_MANAGER_Initialize 035A  
                            _eusartRxHead 003E                              _eusartTxHead 0040  
                            _eusartRxTail 003F                              _eusartTxTail 0041  
            ??_INTERRUPT_InterruptManager 0073                   _eusartTxBufferRemaining 0079  
                           _TMR0_CallBack 03B4                            __size_of_putch 0005  
                     __end_of_button_init 03A8                            _eusartRxBuffer 0020  
                       ??_TMR0_Initialize 0044                            _GPS_Initialize 022F  
                          _eusartTxBuffer 0028                                 clear_ram0 03D7  
                                _PIE1bits 0091                  __size_of_TMR2_StartTimer 0003  
     __size_of_INTERRUPT_InterruptManager 0020                ??_TMR0_SetInterruptHandler 0076  
                                _PIR1bits 0011                                  _TMR0_ISR 0384  
                                _PSTR1CON 0296                   __end_of_EPWM_Initialize 03B4  
                       ??_LED_update_loop 0070                     __end_of_LED_set_state 035A  
                 __size_of_my10msTimerISR 0003                            ?_TMR0_CallBack 0070  
                  __end_of_GPS_Initialize 0270                         ??_TMR2_Initialize 0074  
                              _EECON1bits 0195                               _LED_counter 0037  
                       GPS_Initialize@tmp 004F                   ??_OSCILLATOR_Initialize 0074  
         button_update_loop@current_state 0072                               _button_init 0398  
                                __ptext10 03A8                                  __ptext11 0340  
                                __ptext20 03EF                                  __ptext12 022F  
                                __ptext21 03EB                                  __ptext13 030A  
                                __ptext22 017E                                  __ptext14 03E3  
                                __ptext23 0270                                  __ptext15 0294  
                                __ptext24 02B6                                  __ptext16 02D3  
                                __ptext25 0325                                  __ptext18 0384  
                                __ptext19 03B4                           ?_GPS_Initialize 0070  
                       _b_confirmed_state 0038                             __size_of_main 014A  
    __end_of_TMR0_DefaultInterruptHandler 03F0     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 03EF                        _EPWM_LoadDutyValue 02D3  
                                int$flags 007E                       _b_release_confirmed 003D  
                        ?_EPWM_Initialize 0070                         ??_TMR2_StartTimer 0074  
      __end_of_INTERRUPT_InterruptManager 0024                _INTERRUPT_InterruptManager 0004  
                     ?_EPWM_LoadDutyValue 0074               __size_of_button_update_loop 006B  
                              _INTCONbits 000B                           ??_TMR0_CallBack 0073  
                    ??_EPWM_LoadDutyValue 0044                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0070                         __CFG_CLKOUTEN$OFF 0000  
           ?_TMR0_DefaultInterruptHandler 0070                                  printf@ap 004A  
                      _EUSART_Receive_ISR 0325                                _OPTION_REG 0095  
                     ?_EUSART_Receive_ISR 0070                           _TMR0_Initialize 0370  
                          _my10msTimerISR 03EB                               _speed_units 0042  
                      EUSART_Write@txData 0075              __size_of_EUSART_Transmit_ISR 001D  
          __end_of_PIN_MANAGER_Initialize 0370                      ??_EUSART_Receive_ISR 0070  
                         _LED_update_loop 0270  



Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Sep 09 19:22:42 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  0008                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000E                     	;# 
    43  0011                     	;# 
    44  0012                     	;# 
    45  0015                     	;# 
    46  0016                     	;# 
    47  0016                     	;# 
    48  0017                     	;# 
    49  0018                     	;# 
    50  0019                     	;# 
    51  001A                     	;# 
    52  001B                     	;# 
    53  001C                     	;# 
    54  001E                     	;# 
    55  001F                     	;# 
    56  008C                     	;# 
    57  008E                     	;# 
    58  0091                     	;# 
    59  0092                     	;# 
    60  0095                     	;# 
    61  0096                     	;# 
    62  0097                     	;# 
    63  0098                     	;# 
    64  0099                     	;# 
    65  009A                     	;# 
    66  009B                     	;# 
    67  009B                     	;# 
    68  009C                     	;# 
    69  009D                     	;# 
    70  009E                     	;# 
    71  010C                     	;# 
    72  010E                     	;# 
    73  0111                     	;# 
    74  0112                     	;# 
    75  0113                     	;# 
    76  0114                     	;# 
    77  0115                     	;# 
    78  0116                     	;# 
    79  0117                     	;# 
    80  0118                     	;# 
    81  0119                     	;# 
    82  011A                     	;# 
    83  011B                     	;# 
    84  011D                     	;# 
    85  011D                     	;# 
    86  018C                     	;# 
    87  018E                     	;# 
    88  0191                     	;# 
    89  0191                     	;# 
    90  0192                     	;# 
    91  0193                     	;# 
    92  0193                     	;# 
    93  0193                     	;# 
    94  0194                     	;# 
    95  0195                     	;# 
    96  0196                     	;# 
    97  0199                     	;# 
    98  019A                     	;# 
    99  019B                     	;# 
   100  019B                     	;# 
   101  019B                     	;# 
   102  019B                     	;# 
   103  019C                     	;# 
   104  019C                     	;# 
   105  019D                     	;# 
   106  019E                     	;# 
   107  019F                     	;# 
   108  020C                     	;# 
   109  020E                     	;# 
   110  0211                     	;# 
   111  0211                     	;# 
   112  0212                     	;# 
   113  0212                     	;# 
   114  0213                     	;# 
   115  0213                     	;# 
   116  0214                     	;# 
   117  0214                     	;# 
   118  0215                     	;# 
   119  0215                     	;# 
   120  0215                     	;# 
   121  0216                     	;# 
   122  0216                     	;# 
   123  0217                     	;# 
   124  0217                     	;# 
   125  0291                     	;# 
   126  0291                     	;# 
   127  0292                     	;# 
   128  0293                     	;# 
   129  0294                     	;# 
   130  0295                     	;# 
   131  0295                     	;# 
   132  0296                     	;# 
   133  0391                     	;# 
   134  0392                     	;# 
   135  0393                     	;# 
   136  039A                     	;# 
   137  039C                     	;# 
   138  039D                     	;# 
   139  039E                     	;# 
   140  039F                     	;# 
   141  0FE4                     	;# 
   142  0FE5                     	;# 
   143  0FE6                     	;# 
   144  0FE7                     	;# 
   145  0FE8                     	;# 
   146  0FE9                     	;# 
   147  0FEA                     	;# 
   148  0FEB                     	;# 
   149  0FED                     	;# 
   150  0FEE                     	;# 
   151  0FEF                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000E                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  008C                     	;# 
   180  008E                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  010C                     	;# 
   195  010E                     	;# 
   196  0111                     	;# 
   197  0112                     	;# 
   198  0113                     	;# 
   199  0114                     	;# 
   200  0115                     	;# 
   201  0116                     	;# 
   202  0117                     	;# 
   203  0118                     	;# 
   204  0119                     	;# 
   205  011A                     	;# 
   206  011B                     	;# 
   207  011D                     	;# 
   208  011D                     	;# 
   209  018C                     	;# 
   210  018E                     	;# 
   211  0191                     	;# 
   212  0191                     	;# 
   213  0192                     	;# 
   214  0193                     	;# 
   215  0193                     	;# 
   216  0193                     	;# 
   217  0194                     	;# 
   218  0195                     	;# 
   219  0196                     	;# 
   220  0199                     	;# 
   221  019A                     	;# 
   222  019B                     	;# 
   223  019B                     	;# 
   224  019B                     	;# 
   225  019B                     	;# 
   226  019C                     	;# 
   227  019C                     	;# 
   228  019D                     	;# 
   229  019E                     	;# 
   230  019F                     	;# 
   231  020C                     	;# 
   232  020E                     	;# 
   233  0211                     	;# 
   234  0211                     	;# 
   235  0212                     	;# 
   236  0212                     	;# 
   237  0213                     	;# 
   238  0213                     	;# 
   239  0214                     	;# 
   240  0214                     	;# 
   241  0215                     	;# 
   242  0215                     	;# 
   243  0215                     	;# 
   244  0216                     	;# 
   245  0216                     	;# 
   246  0217                     	;# 
   247  0217                     	;# 
   248  0291                     	;# 
   249  0291                     	;# 
   250  0292                     	;# 
   251  0293                     	;# 
   252  0294                     	;# 
   253  0295                     	;# 
   254  0295                     	;# 
   255  0296                     	;# 
   256  0391                     	;# 
   257  0392                     	;# 
   258  0393                     	;# 
   259  039A                     	;# 
   260  039C                     	;# 
   261  039D                     	;# 
   262  039E                     	;# 
   263  039F                     	;# 
   264  0FE4                     	;# 
   265  0FE5                     	;# 
   266  0FE6                     	;# 
   267  0FE7                     	;# 
   268  0FE8                     	;# 
   269  0FE9                     	;# 
   270  0FEA                     	;# 
   271  0FEB                     	;# 
   272  0FED                     	;# 
   273  0FEE                     	;# 
   274  0FEF                     	;# 
   275  0000                     	;# 
   276  0001                     	;# 
   277  0002                     	;# 
   278  0003                     	;# 
   279  0004                     	;# 
   280  0005                     	;# 
   281  0006                     	;# 
   282  0007                     	;# 
   283  0008                     	;# 
   284  0009                     	;# 
   285  000A                     	;# 
   286  000B                     	;# 
   287  000C                     	;# 
   288  000E                     	;# 
   289  0011                     	;# 
   290  0012                     	;# 
   291  0015                     	;# 
   292  0016                     	;# 
   293  0016                     	;# 
   294  0017                     	;# 
   295  0018                     	;# 
   296  0019                     	;# 
   297  001A                     	;# 
   298  001B                     	;# 
   299  001C                     	;# 
   300  001E                     	;# 
   301  001F                     	;# 
   302  008C                     	;# 
   303  008E                     	;# 
   304  0091                     	;# 
   305  0092                     	;# 
   306  0095                     	;# 
   307  0096                     	;# 
   308  0097                     	;# 
   309  0098                     	;# 
   310  0099                     	;# 
   311  009A                     	;# 
   312  009B                     	;# 
   313  009B                     	;# 
   314  009C                     	;# 
   315  009D                     	;# 
   316  009E                     	;# 
   317  010C                     	;# 
   318  010E                     	;# 
   319  0111                     	;# 
   320  0112                     	;# 
   321  0113                     	;# 
   322  0114                     	;# 
   323  0115                     	;# 
   324  0116                     	;# 
   325  0117                     	;# 
   326  0118                     	;# 
   327  0119                     	;# 
   328  011A                     	;# 
   329  011B                     	;# 
   330  011D                     	;# 
   331  011D                     	;# 
   332  018C                     	;# 
   333  018E                     	;# 
   334  0191                     	;# 
   335  0191                     	;# 
   336  0192                     	;# 
   337  0193                     	;# 
   338  0193                     	;# 
   339  0193                     	;# 
   340  0194                     	;# 
   341  0195                     	;# 
   342  0196                     	;# 
   343  0199                     	;# 
   344  019A                     	;# 
   345  019B                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019C                     	;# 
   350  019C                     	;# 
   351  019D                     	;# 
   352  019E                     	;# 
   353  019F                     	;# 
   354  020C                     	;# 
   355  020E                     	;# 
   356  0211                     	;# 
   357  0211                     	;# 
   358  0212                     	;# 
   359  0212                     	;# 
   360  0213                     	;# 
   361  0213                     	;# 
   362  0214                     	;# 
   363  0214                     	;# 
   364  0215                     	;# 
   365  0215                     	;# 
   366  0215                     	;# 
   367  0216                     	;# 
   368  0216                     	;# 
   369  0217                     	;# 
   370  0217                     	;# 
   371  0291                     	;# 
   372  0291                     	;# 
   373  0292                     	;# 
   374  0293                     	;# 
   375  0294                     	;# 
   376  0295                     	;# 
   377  0295                     	;# 
   378  0296                     	;# 
   379  0391                     	;# 
   380  0392                     	;# 
   381  0393                     	;# 
   382  039A                     	;# 
   383  039C                     	;# 
   384  039D                     	;# 
   385  039E                     	;# 
   386  039F                     	;# 
   387  0FE4                     	;# 
   388  0FE5                     	;# 
   389  0FE6                     	;# 
   390  0FE7                     	;# 
   391  0FE8                     	;# 
   392  0FE9                     	;# 
   393  0FEA                     	;# 
   394  0FEB                     	;# 
   395  0FED                     	;# 
   396  0FEE                     	;# 
   397  0FEF                     	;# 
   398  0000                     	;# 
   399  0001                     	;# 
   400  0002                     	;# 
   401  0003                     	;# 
   402  0004                     	;# 
   403  0005                     	;# 
   404  0006                     	;# 
   405  0007                     	;# 
   406  0008                     	;# 
   407  0009                     	;# 
   408  000A                     	;# 
   409  000B                     	;# 
   410  000C                     	;# 
   411  000E                     	;# 
   412  0011                     	;# 
   413  0012                     	;# 
   414  0015                     	;# 
   415  0016                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  001A                     	;# 
   421  001B                     	;# 
   422  001C                     	;# 
   423  001E                     	;# 
   424  001F                     	;# 
   425  008C                     	;# 
   426  008E                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  010C                     	;# 
   441  010E                     	;# 
   442  0111                     	;# 
   443  0112                     	;# 
   444  0113                     	;# 
   445  0114                     	;# 
   446  0115                     	;# 
   447  0116                     	;# 
   448  0117                     	;# 
   449  0118                     	;# 
   450  0119                     	;# 
   451  011A                     	;# 
   452  011B                     	;# 
   453  011D                     	;# 
   454  011D                     	;# 
   455  018C                     	;# 
   456  018E                     	;# 
   457  0191                     	;# 
   458  0191                     	;# 
   459  0192                     	;# 
   460  0193                     	;# 
   461  0193                     	;# 
   462  0193                     	;# 
   463  0194                     	;# 
   464  0195                     	;# 
   465  0196                     	;# 
   466  0199                     	;# 
   467  019A                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019C                     	;# 
   473  019C                     	;# 
   474  019D                     	;# 
   475  019E                     	;# 
   476  019F                     	;# 
   477  020C                     	;# 
   478  020E                     	;# 
   479  0211                     	;# 
   480  0211                     	;# 
   481  0212                     	;# 
   482  0212                     	;# 
   483  0213                     	;# 
   484  0213                     	;# 
   485  0214                     	;# 
   486  0214                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0215                     	;# 
   490  0216                     	;# 
   491  0216                     	;# 
   492  0217                     	;# 
   493  0217                     	;# 
   494  0291                     	;# 
   495  0291                     	;# 
   496  0292                     	;# 
   497  0293                     	;# 
   498  0294                     	;# 
   499  0295                     	;# 
   500  0295                     	;# 
   501  0296                     	;# 
   502  0391                     	;# 
   503  0392                     	;# 
   504  0393                     	;# 
   505  039A                     	;# 
   506  039C                     	;# 
   507  039D                     	;# 
   508  039E                     	;# 
   509  039F                     	;# 
   510  0FE4                     	;# 
   511  0FE5                     	;# 
   512  0FE6                     	;# 
   513  0FE7                     	;# 
   514  0FE8                     	;# 
   515  0FE9                     	;# 
   516  0FEA                     	;# 
   517  0FEB                     	;# 
   518  0FED                     	;# 
   519  0FEE                     	;# 
   520  0FEF                     	;# 
   521  0000                     	;# 
   522  0001                     	;# 
   523  0002                     	;# 
   524  0003                     	;# 
   525  0004                     	;# 
   526  0005                     	;# 
   527  0006                     	;# 
   528  0007                     	;# 
   529  0008                     	;# 
   530  0009                     	;# 
   531  000A                     	;# 
   532  000B                     	;# 
   533  000C                     	;# 
   534  000E                     	;# 
   535  0011                     	;# 
   536  0012                     	;# 
   537  0015                     	;# 
   538  0016                     	;# 
   539  0016                     	;# 
   540  0017                     	;# 
   541  0018                     	;# 
   542  0019                     	;# 
   543  001A                     	;# 
   544  001B                     	;# 
   545  001C                     	;# 
   546  001E                     	;# 
   547  001F                     	;# 
   548  008C                     	;# 
   549  008E                     	;# 
   550  0091                     	;# 
   551  0092                     	;# 
   552  0095                     	;# 
   553  0096                     	;# 
   554  0097                     	;# 
   555  0098                     	;# 
   556  0099                     	;# 
   557  009A                     	;# 
   558  009B                     	;# 
   559  009B                     	;# 
   560  009C                     	;# 
   561  009D                     	;# 
   562  009E                     	;# 
   563  010C                     	;# 
   564  010E                     	;# 
   565  0111                     	;# 
   566  0112                     	;# 
   567  0113                     	;# 
   568  0114                     	;# 
   569  0115                     	;# 
   570  0116                     	;# 
   571  0117                     	;# 
   572  0118                     	;# 
   573  0119                     	;# 
   574  011A                     	;# 
   575  011B                     	;# 
   576  011D                     	;# 
   577  011D                     	;# 
   578  018C                     	;# 
   579  018E                     	;# 
   580  0191                     	;# 
   581  0191                     	;# 
   582  0192                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0193                     	;# 
   586  0194                     	;# 
   587  0195                     	;# 
   588  0196                     	;# 
   589  0199                     	;# 
   590  019A                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019B                     	;# 
   595  019C                     	;# 
   596  019C                     	;# 
   597  019D                     	;# 
   598  019E                     	;# 
   599  019F                     	;# 
   600  020C                     	;# 
   601  020E                     	;# 
   602  0211                     	;# 
   603  0211                     	;# 
   604  0212                     	;# 
   605  0212                     	;# 
   606  0213                     	;# 
   607  0213                     	;# 
   608  0214                     	;# 
   609  0214                     	;# 
   610  0215                     	;# 
   611  0215                     	;# 
   612  0215                     	;# 
   613  0216                     	;# 
   614  0216                     	;# 
   615  0217                     	;# 
   616  0217                     	;# 
   617  0291                     	;# 
   618  0291                     	;# 
   619  0292                     	;# 
   620  0293                     	;# 
   621  0294                     	;# 
   622  0295                     	;# 
   623  0295                     	;# 
   624  0296                     	;# 
   625  0391                     	;# 
   626  0392                     	;# 
   627  0393                     	;# 
   628  039A                     	;# 
   629  039C                     	;# 
   630  039D                     	;# 
   631  039E                     	;# 
   632  039F                     	;# 
   633  0FE4                     	;# 
   634  0FE5                     	;# 
   635  0FE6                     	;# 
   636  0FE7                     	;# 
   637  0FE8                     	;# 
   638  0FE9                     	;# 
   639  0FEA                     	;# 
   640  0FEB                     	;# 
   641  0FED                     	;# 
   642  0FEE                     	;# 
   643  0FEF                     	;# 
   644  0000                     	;# 
   645  0001                     	;# 
   646  0002                     	;# 
   647  0003                     	;# 
   648  0004                     	;# 
   649  0005                     	;# 
   650  0006                     	;# 
   651  0007                     	;# 
   652  0008                     	;# 
   653  0009                     	;# 
   654  000A                     	;# 
   655  000B                     	;# 
   656  000C                     	;# 
   657  000E                     	;# 
   658  0011                     	;# 
   659  0012                     	;# 
   660  0015                     	;# 
   661  0016                     	;# 
   662  0016                     	;# 
   663  0017                     	;# 
   664  0018                     	;# 
   665  0019                     	;# 
   666  001A                     	;# 
   667  001B                     	;# 
   668  001C                     	;# 
   669  001E                     	;# 
   670  001F                     	;# 
   671  008C                     	;# 
   672  008E                     	;# 
   673  0091                     	;# 
   674  0092                     	;# 
   675  0095                     	;# 
   676  0096                     	;# 
   677  0097                     	;# 
   678  0098                     	;# 
   679  0099                     	;# 
   680  009A                     	;# 
   681  009B                     	;# 
   682  009B                     	;# 
   683  009C                     	;# 
   684  009D                     	;# 
   685  009E                     	;# 
   686  010C                     	;# 
   687  010E                     	;# 
   688  0111                     	;# 
   689  0112                     	;# 
   690  0113                     	;# 
   691  0114                     	;# 
   692  0115                     	;# 
   693  0116                     	;# 
   694  0117                     	;# 
   695  0118                     	;# 
   696  0119                     	;# 
   697  011A                     	;# 
   698  011B                     	;# 
   699  011D                     	;# 
   700  011D                     	;# 
   701  018C                     	;# 
   702  018E                     	;# 
   703  0191                     	;# 
   704  0191                     	;# 
   705  0192                     	;# 
   706  0193                     	;# 
   707  0193                     	;# 
   708  0193                     	;# 
   709  0194                     	;# 
   710  0195                     	;# 
   711  0196                     	;# 
   712  0199                     	;# 
   713  019A                     	;# 
   714  019B                     	;# 
   715  019B                     	;# 
   716  019B                     	;# 
   717  019B                     	;# 
   718  019C                     	;# 
   719  019C                     	;# 
   720  019D                     	;# 
   721  019E                     	;# 
   722  019F                     	;# 
   723  020C                     	;# 
   724  020E                     	;# 
   725  0211                     	;# 
   726  0211                     	;# 
   727  0212                     	;# 
   728  0212                     	;# 
   729  0213                     	;# 
   730  0213                     	;# 
   731  0214                     	;# 
   732  0214                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0215                     	;# 
   736  0216                     	;# 
   737  0216                     	;# 
   738  0217                     	;# 
   739  0217                     	;# 
   740  0291                     	;# 
   741  0291                     	;# 
   742  0292                     	;# 
   743  0293                     	;# 
   744  0294                     	;# 
   745  0295                     	;# 
   746  0295                     	;# 
   747  0296                     	;# 
   748  0391                     	;# 
   749  0392                     	;# 
   750  0393                     	;# 
   751  039A                     	;# 
   752  039C                     	;# 
   753  039D                     	;# 
   754  039E                     	;# 
   755  039F                     	;# 
   756  0FE4                     	;# 
   757  0FE5                     	;# 
   758  0FE6                     	;# 
   759  0FE7                     	;# 
   760  0FE8                     	;# 
   761  0FE9                     	;# 
   762  0FEA                     	;# 
   763  0FEB                     	;# 
   764  0FED                     	;# 
   765  0FEE                     	;# 
   766  0FEF                     	;# 
   767  0000                     	;# 
   768  0001                     	;# 
   769  0002                     	;# 
   770  0003                     	;# 
   771  0004                     	;# 
   772  0005                     	;# 
   773  0006                     	;# 
   774  0007                     	;# 
   775  0008                     	;# 
   776  0009                     	;# 
   777  000A                     	;# 
   778  000B                     	;# 
   779  000C                     	;# 
   780  000E                     	;# 
   781  0011                     	;# 
   782  0012                     	;# 
   783  0015                     	;# 
   784  0016                     	;# 
   785  0016                     	;# 
   786  0017                     	;# 
   787  0018                     	;# 
   788  0019                     	;# 
   789  001A                     	;# 
   790  001B                     	;# 
   791  001C                     	;# 
   792  001E                     	;# 
   793  001F                     	;# 
   794  008C                     	;# 
   795  008E                     	;# 
   796  0091                     	;# 
   797  0092                     	;# 
   798  0095                     	;# 
   799  0096                     	;# 
   800  0097                     	;# 
   801  0098                     	;# 
   802  0099                     	;# 
   803  009A                     	;# 
   804  009B                     	;# 
   805  009B                     	;# 
   806  009C                     	;# 
   807  009D                     	;# 
   808  009E                     	;# 
   809  010C                     	;# 
   810  010E                     	;# 
   811  0111                     	;# 
   812  0112                     	;# 
   813  0113                     	;# 
   814  0114                     	;# 
   815  0115                     	;# 
   816  0116                     	;# 
   817  0117                     	;# 
   818  0118                     	;# 
   819  0119                     	;# 
   820  011A                     	;# 
   821  011B                     	;# 
   822  011D                     	;# 
   823  011D                     	;# 
   824  018C                     	;# 
   825  018E                     	;# 
   826  0191                     	;# 
   827  0191                     	;# 
   828  0192                     	;# 
   829  0193                     	;# 
   830  0193                     	;# 
   831  0193                     	;# 
   832  0194                     	;# 
   833  0195                     	;# 
   834  0196                     	;# 
   835  0199                     	;# 
   836  019A                     	;# 
   837  019B                     	;# 
   838  019B                     	;# 
   839  019B                     	;# 
   840  019B                     	;# 
   841  019C                     	;# 
   842  019C                     	;# 
   843  019D                     	;# 
   844  019E                     	;# 
   845  019F                     	;# 
   846  020C                     	;# 
   847  020E                     	;# 
   848  0211                     	;# 
   849  0211                     	;# 
   850  0212                     	;# 
   851  0212                     	;# 
   852  0213                     	;# 
   853  0213                     	;# 
   854  0214                     	;# 
   855  0214                     	;# 
   856  0215                     	;# 
   857  0215                     	;# 
   858  0215                     	;# 
   859  0216                     	;# 
   860  0216                     	;# 
   861  0217                     	;# 
   862  0217                     	;# 
   863  0291                     	;# 
   864  0291                     	;# 
   865  0292                     	;# 
   866  0293                     	;# 
   867  0294                     	;# 
   868  0295                     	;# 
   869  0295                     	;# 
   870  0296                     	;# 
   871  0391                     	;# 
   872  0392                     	;# 
   873  0393                     	;# 
   874  039A                     	;# 
   875  039C                     	;# 
   876  039D                     	;# 
   877  039E                     	;# 
   878  039F                     	;# 
   879  0FE4                     	;# 
   880  0FE5                     	;# 
   881  0FE6                     	;# 
   882  0FE7                     	;# 
   883  0FE8                     	;# 
   884  0FE9                     	;# 
   885  0FEA                     	;# 
   886  0FEB                     	;# 
   887  0FED                     	;# 
   888  0FEE                     	;# 
   889  0FEF                     	;# 
   890  0000                     	;# 
   891  0001                     	;# 
   892  0002                     	;# 
   893  0003                     	;# 
   894  0004                     	;# 
   895  0005                     	;# 
   896  0006                     	;# 
   897  0007                     	;# 
   898  0008                     	;# 
   899  0009                     	;# 
   900  000A                     	;# 
   901  000B                     	;# 
   902  000C                     	;# 
   903  000E                     	;# 
   904  0011                     	;# 
   905  0012                     	;# 
   906  0015                     	;# 
   907  0016                     	;# 
   908  0016                     	;# 
   909  0017                     	;# 
   910  0018                     	;# 
   911  0019                     	;# 
   912  001A                     	;# 
   913  001B                     	;# 
   914  001C                     	;# 
   915  001E                     	;# 
   916  001F                     	;# 
   917  008C                     	;# 
   918  008E                     	;# 
   919  0091                     	;# 
   920  0092                     	;# 
   921  0095                     	;# 
   922  0096                     	;# 
   923  0097                     	;# 
   924  0098                     	;# 
   925  0099                     	;# 
   926  009A                     	;# 
   927  009B                     	;# 
   928  009B                     	;# 
   929  009C                     	;# 
   930  009D                     	;# 
   931  009E                     	;# 
   932  010C                     	;# 
   933  010E                     	;# 
   934  0111                     	;# 
   935  0112                     	;# 
   936  0113                     	;# 
   937  0114                     	;# 
   938  0115                     	;# 
   939  0116                     	;# 
   940  0117                     	;# 
   941  0118                     	;# 
   942  0119                     	;# 
   943  011A                     	;# 
   944  011B                     	;# 
   945  011D                     	;# 
   946  011D                     	;# 
   947  018C                     	;# 
   948  018E                     	;# 
   949  0191                     	;# 
   950  0191                     	;# 
   951  0192                     	;# 
   952  0193                     	;# 
   953  0193                     	;# 
   954  0193                     	;# 
   955  0194                     	;# 
   956  0195                     	;# 
   957  0196                     	;# 
   958  0199                     	;# 
   959  019A                     	;# 
   960  019B                     	;# 
   961  019B                     	;# 
   962  019B                     	;# 
   963  019B                     	;# 
   964  019C                     	;# 
   965  019C                     	;# 
   966  019D                     	;# 
   967  019E                     	;# 
   968  019F                     	;# 
   969  020C                     	;# 
   970  020E                     	;# 
   971  0211                     	;# 
   972  0211                     	;# 
   973  0212                     	;# 
   974  0212                     	;# 
   975  0213                     	;# 
   976  0213                     	;# 
   977  0214                     	;# 
   978  0214                     	;# 
   979  0215                     	;# 
   980  0215                     	;# 
   981  0215                     	;# 
   982  0216                     	;# 
   983  0216                     	;# 
   984  0217                     	;# 
   985  0217                     	;# 
   986  0291                     	;# 
   987  0291                     	;# 
   988  0292                     	;# 
   989  0293                     	;# 
   990  0294                     	;# 
   991  0295                     	;# 
   992  0295                     	;# 
   993  0296                     	;# 
   994  0391                     	;# 
   995  0392                     	;# 
   996  0393                     	;# 
   997  039A                     	;# 
   998  039C                     	;# 
   999  039D                     	;# 
  1000  039E                     	;# 
  1001  039F                     	;# 
  1002  0FE4                     	;# 
  1003  0FE5                     	;# 
  1004  0FE6                     	;# 
  1005  0FE7                     	;# 
  1006  0FE8                     	;# 
  1007  0FE9                     	;# 
  1008  0FEA                     	;# 
  1009  0FEB                     	;# 
  1010  0FED                     	;# 
  1011  0FEE                     	;# 
  1012  0FEF                     	;# 
  1013  000B                     _INTCONbits	set	11
  1014  0011                     _PIR1bits	set	17
  1015  001B                     _PR2	set	27
  1016  001C                     _T2CON	set	28
  1017  001C                     _T2CONbits	set	28
  1018  001A                     _TMR2	set	26
  1019  0095                     _OPTION_REGbits	set	149
  1020  0099                     _OSCCON	set	153
  1021  009A                     _OSCSTAT	set	154
  1022  0098                     _OSCTUNE	set	152
  1023  0091                     _PIE1bits	set	145
  1024  008C                     _TRISA	set	140
  1025  008E                     _TRISC	set	142
  1026  04D6                     _PLLR	set	1238
  1027  011D                     _APFCON	set	285
  1028  010C                     _LATA	set	268
  1029  010E                     _LATC	set	270
  1030  0865                     _LATA5	set	2149
  1031  018C                     _ANSELA	set	396
  1032  018E                     _ANSELC	set	398
  1033  019F                     _BAUDCON	set	415
  1034  0192                     _EEADRH	set	402
  1035  0191                     _EEADRL	set	401
  1036  0195                     _EECON1bits	set	405
  1037  0196                     _EECON2	set	406
  1038  0194                     _EEDATH	set	404
  1039  0193                     _EEDATL	set	403
  1040  0199                     _RCREG	set	409
  1041  019D                     _RCSTA	set	413
  1042  019D                     _RCSTAbits	set	413
  1043  019C                     _SPBRGH	set	412
  1044  019B                     _SPBRGL	set	411
  1045  019A                     _TXREG	set	410
  1046  019E                     _TXSTA	set	414
  1047  020C                     _WPUA	set	524
  1048  020E                     _WPUC	set	526
  1049  0293                     _CCP1CON	set	659
  1050  0292                     _CCPR1H	set	658
  1051  0291                     _CCPR1L	set	657
  1052  0295                     _ECCP1AS	set	661
  1053  0296                     _PSTR1CON	set	662
  1054  0294                     _PWM1CON	set	660
  1055                           
  1056                           	psect	stringtext
  1057  002C                     __pstringtext:	
  1058  002C                     STR_1:	
  1059  002C  3424               	retlw	36	;'$'
  1060  002D  3450               	retlw	80	;'P'
  1061  002E  344D               	retlw	77	;'M'
  1062  002F  3454               	retlw	84	;'T'
  1063  0030  344B               	retlw	75	;'K'
  1064  0031  3433               	retlw	51	;'3'
  1065  0032  3431               	retlw	49	;'1'
  1066  0033  3434               	retlw	52	;'4'
  1067  0034  342C               	retlw	44	;','
  1068  0035  3430               	retlw	48	;'0'
  1069  0036  342C               	retlw	44	;','
  1070  0037  3430               	retlw	48	;'0'
  1071  0038  342C               	retlw	44	;','
  1072  0039  3431               	retlw	49	;'1'
  1073  003A  342C               	retlw	44	;','
  1074  003B  3430               	retlw	48	;'0'
  1075  003C  342C               	retlw	44	;','
  1076  003D  3430               	retlw	48	;'0'
  1077  003E  342C               	retlw	44	;','
  1078  003F  3430               	retlw	48	;'0'
  1079  0040  342C               	retlw	44	;','
  1080  0041  3430               	retlw	48	;'0'
  1081  0042  342C               	retlw	44	;','
  1082  0043  3430               	retlw	48	;'0'
  1083  0044  342C               	retlw	44	;','
  1084  0045  3430               	retlw	48	;'0'
  1085  0046  342C               	retlw	44	;','
  1086  0047  3430               	retlw	48	;'0'
  1087  0048  342C               	retlw	44	;','
  1088  0049  3430               	retlw	48	;'0'
  1089  004A  342C               	retlw	44	;','
  1090  004B  3430               	retlw	48	;'0'
  1091  004C  342C               	retlw	44	;','
  1092  004D  3430               	retlw	48	;'0'
  1093  004E  342C               	retlw	44	;','
  1094  004F  3430               	retlw	48	;'0'
  1095  0050  342C               	retlw	44	;','
  1096  0051  3430               	retlw	48	;'0'
  1097  0052  342C               	retlw	44	;','
  1098  0053  3430               	retlw	48	;'0'
  1099  0054  342C               	retlw	44	;','
  1100  0055  3430               	retlw	48	;'0'
  1101  0056  342C               	retlw	44	;','
  1102  0057  3430               	retlw	48	;'0'
  1103  0058  342C               	retlw	44	;','
  1104  0059  3430               	retlw	48	;'0'
  1105  005A  342A               	retlw	42	;'*'
  1106  005B  3432               	retlw	50	;'2'
  1107  005C  3439               	retlw	57	;'9'
  1108  005D  340D               	retlw	13
  1109  005E  340A               	retlw	10
  1110  005F  3400               	retlw	0
  1111  0060                     STR_2:	
  1112  0060  3424               	retlw	36	;'$'
  1113  0061  3450               	retlw	80	;'P'
  1114  0062  344D               	retlw	77	;'M'
  1115  0063  3454               	retlw	84	;'T'
  1116  0064  344B               	retlw	75	;'K'
  1117  0065  3432               	retlw	50	;'2'
  1118  0066  3432               	retlw	50	;'2'
  1119  0067  3430               	retlw	48	;'0'
  1120  0068  342C               	retlw	44	;','
  1121  0069  3431               	retlw	49	;'1'
  1122  006A  3430               	retlw	48	;'0'
  1123  006B  3430               	retlw	48	;'0'
  1124  006C  342A               	retlw	42	;'*'
  1125  006D  3432               	retlw	50	;'2'
  1126  006E  3446               	retlw	70	;'F'
  1127  006F  340D               	retlw	13
  1128  0070  340A               	retlw	10
  1129  0071  3400               	retlw	0
  1130                           
  1131                           ; #config settings
  1132  0000                     
  1133                           	psect	cinit
  1134  0021                     start_initialization:	
  1135  0021                     __initialization:	
  1136                           
  1137                           ; Clear objects allocated to COMMON
  1138  0021  01FA               	clrf	__pbssCOMMON& (0+127)
  1139  0022  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1140                           
  1141                           ; Clear objects allocated to BANK0
  1142  0023  3020               	movlw	low __pbssBANK0
  1143  0024  0084               	movwf	4
  1144  0025  3000               	movlw	high __pbssBANK0
  1145  0026  0085               	movwf	5
  1146  0027  3015               	movlw	21
  1147  0028  21AF               	fcall	clear_ram0
  1148  0029                     end_of_initialization:	
  1149                           ;End of C runtime variable initialization code
  1150                           
  1151  0029                     __end_of__initialization:	
  1152  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1153  002A  0020               	movlb	0
  1154  002B  29B5               	ljmp	_main	;jump to C main() function
  1155                           
  1156                           	psect	bssCOMMON
  1157  007A                     __pbssCOMMON:	
  1158  007A                     _eusartRxCount:	
  1159  007A                     	ds	1
  1160  007B                     _eusartTxBufferRemaining:	
  1161  007B                     	ds	1
  1162                           
  1163                           	psect	bssBANK0
  1164  0020                     __pbssBANK0:	
  1165  0020                     _eusartRxBuffer:	
  1166  0020                     	ds	8
  1167  0028                     _eusartTxBuffer:	
  1168  0028                     	ds	8
  1169  0030                     _char_buffer:	
  1170  0030                     	ds	1
  1171  0031                     _eusartRxHead:	
  1172  0031                     	ds	1
  1173  0032                     _eusartRxTail:	
  1174  0032                     	ds	1
  1175  0033                     _eusartTxHead:	
  1176  0033                     	ds	1
  1177  0034                     _eusartTxTail:	
  1178  0034                     	ds	1
  1179                           
  1180                           	psect	clrtext
  1181  01AF                     clear_ram0:	
  1182                           ;	Called with FSR0 containing the base address, and
  1183                           ;	WREG with the size to clear
  1184                           
  1185  01AF  0064               	clrwdt	;clear the watchdog before getting into this loop
  1186  01B0                     clrloop0:	
  1187  01B0  0180               	clrf	0	;clear RAM location pointed to by FSR
  1188  01B1  3101               	addfsr 0,1
  1189  01B2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1190  01B3  29B0               	goto	clrloop0	;have we reached the end yet?
  1191  01B4  3400               	retlw	0	;all done for this memory range, return
  1192                           
  1193                           	psect	cstackCOMMON
  1194  0070                     __pcstackCOMMON:	
  1195  0070                     ?_EUSART_Read:	
  1196  0070                     ?_SYSTEM_Initialize:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0070                     ?_TMR2_StartTimer:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0070                     ?_OSCILLATOR_Initialize:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0070                     ?_UART_Initialize:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0070                     ?_UART_read_NMEA:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0070                     ?_main:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214  0070                     ?_TMR2_Initialize:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217  0070                     ?_EUSART_Initialize:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  0070                     ?_EUSART_Write:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223  0070                     ?_putch:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226  0070                     ?_EUSART_Transmit_ISR:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0070                     ??_EUSART_Transmit_ISR:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0070                     ?_EUSART_Receive_ISR:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235  0070                     ??_EUSART_Receive_ISR:	
  1236                           ; 1 bytes @ 0x0
  1237                           
  1238  0070                     ?_EPWM_Initialize:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241  0070                     ?_PIN_MANAGER_Initialize:	
  1242                           ; 1 bytes @ 0x0
  1243                           
  1244  0070                     ?_INTERRUPT_InterruptManager:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247                           
  1248                           ; 1 bytes @ 0x0
  1249  0070                     	ds	1
  1250  0071                     ??_INTERRUPT_InterruptManager:	
  1251                           
  1252                           ; 1 bytes @ 0x1
  1253  0071                     	ds	1
  1254  0072                     ??_EUSART_Read:	
  1255  0072                     ??_TMR2_StartTimer:	
  1256                           ; 1 bytes @ 0x2
  1257                           
  1258  0072                     ??_OSCILLATOR_Initialize:	
  1259                           ; 1 bytes @ 0x2
  1260                           
  1261  0072                     ??_TMR2_Initialize:	
  1262                           ; 1 bytes @ 0x2
  1263                           
  1264  0072                     ??_EUSART_Initialize:	
  1265                           ; 1 bytes @ 0x2
  1266                           
  1267  0072                     ??_EUSART_Write:	
  1268                           ; 1 bytes @ 0x2
  1269                           
  1270  0072                     ??_EPWM_Initialize:	
  1271                           ; 1 bytes @ 0x2
  1272                           
  1273  0072                     ??_PIN_MANAGER_Initialize:	
  1274                           ; 1 bytes @ 0x2
  1275                           
  1276                           
  1277                           ; 1 bytes @ 0x2
  1278  0072                     	ds	1
  1279  0073                     ??_SYSTEM_Initialize:	
  1280  0073                     EUSART_Read@readValue:	
  1281                           ; 1 bytes @ 0x3
  1282                           
  1283  0073                     EUSART_Write@txData:	
  1284                           ; 1 bytes @ 0x3
  1285                           
  1286                           
  1287                           ; 1 bytes @ 0x3
  1288  0073                     	ds	1
  1289  0074                     ??_UART_read_NMEA:	
  1290  0074                     ??_putch:	
  1291                           ; 1 bytes @ 0x4
  1292                           
  1293  0074                     putch@txData:	
  1294                           ; 1 bytes @ 0x4
  1295                           
  1296                           
  1297                           ; 1 bytes @ 0x4
  1298  0074                     	ds	1
  1299  0075                     ?_printf:	
  1300  0075                     printf@f:	
  1301                           ; 2 bytes @ 0x5
  1302                           
  1303                           
  1304                           ; 2 bytes @ 0x5
  1305  0075                     	ds	1
  1306  0076                     UART_read_NMEA@m_char:	
  1307                           
  1308                           ; 1 bytes @ 0x6
  1309  0076                     	ds	1
  1310  0077                     ??_printf:	
  1311  0077                     UART_read_NMEA@done:	
  1312                           ; 1 bytes @ 0x7
  1313                           
  1314                           
  1315                           ; 1 bytes @ 0x7
  1316  0077                     	ds	3
  1317  007A                     ??_main:	
  1318                           
  1319                           	psect	cstackBANK0
  1320  0035                     __pcstackBANK0:	
  1321                           ; 1 bytes @ 0xA
  1322                           
  1323  0035                     printf@ap:	
  1324                           
  1325                           ; 1 bytes @ 0x0
  1326  0035                     	ds	1
  1327  0036                     printf@c:	
  1328                           
  1329                           ; 1 bytes @ 0x1
  1330  0036                     	ds	1
  1331  0037                     ??_UART_Initialize:	
  1332                           
  1333                           ; 1 bytes @ 0x2
  1334  0037                     	ds	3
  1335  003A                     UART_Initialize@tmp:	
  1336                           
  1337                           ; 1 bytes @ 0x5
  1338  003A                     	ds	1
  1339                           
  1340                           	psect	maintext
  1341  01B5                     __pmaintext:	
  1342 ;;
  1343 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1344 ;;
  1345 ;; *************** function _main *****************
  1346 ;; Defined at:
  1347 ;;		line 96 in file "main.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : B1F/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMMON   BANK0   BANK1
  1361 ;;      Params:         0       0       0
  1362 ;;      Locals:         0       0       0
  1363 ;;      Temps:          0       0       0
  1364 ;;      Totals:         0       0       0
  1365 ;;Total ram usage:        0 bytes
  1366 ;; Hardware stack levels required when called:    6
  1367 ;; This function calls:
  1368 ;;		_SYSTEM_Initialize
  1369 ;;		_UART_Initialize
  1370 ;;		_UART_read_NMEA
  1371 ;; This function is called by:
  1372 ;;		Startup code after reset
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           
  1377                           ;psect for function _main
  1378  01B5                     _main:	
  1379                           
  1380                           ;main.c: 99: SYSTEM_Initialize();
  1381                           
  1382                           ;incstack = 0
  1383                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1384  01B5  21BB               	fcall	_SYSTEM_Initialize
  1385                           
  1386                           ;main.c: 105: (INTCONbits.GIE = 1);
  1387  01B6  178B               	bsf	11,7	;volatile
  1388                           
  1389                           ;main.c: 108: (INTCONbits.PEIE = 1);
  1390  01B7  170B               	bsf	11,6	;volatile
  1391                           
  1392                           ;main.c: 158: UART_Initialize();
  1393  01B8  2072               	fcall	_UART_Initialize
  1394  01B9                     l1323:	
  1395                           ;main.c: 160: while (1)
  1396                           
  1397                           
  1398                           ;main.c: 161: {
  1399                           ;main.c: 162: UART_read_NMEA();
  1400  01B9  20F3               	fcall	_UART_read_NMEA
  1401  01BA  29B9               	goto	l1323
  1402  01BB                     __end_of_main:	
  1403                           
  1404                           	psect	text1
  1405  00F3                     __ptext1:	
  1406 ;; *************** function _UART_read_NMEA *****************
  1407 ;; Defined at:
  1408 ;;		line 71 in file "main.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  done            1    7[COMMON] unsigned char 
  1413 ;;  m_char          1    6[COMMON] unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1
  1423 ;;      Params:         0       0       0
  1424 ;;      Locals:         2       0       0
  1425 ;;      Temps:          2       0       0
  1426 ;;      Totals:         4       0       0
  1427 ;;Total ram usage:        4 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; Hardware stack levels required when called:    3
  1430 ;; This function calls:
  1431 ;;		_EUSART_Read
  1432 ;; This function is called by:
  1433 ;;		_main
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           
  1438                           ;psect for function _UART_read_NMEA
  1439  00F3                     _UART_read_NMEA:	
  1440                           
  1441                           ;main.c: 76: bool done = 0;
  1442                           
  1443                           ;incstack = 0
  1444                           ; Regs used in _UART_read_NMEA: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1445  00F3  01F7               	clrf	UART_read_NMEA@done
  1446  00F4                     l1211:	
  1447                           ;main.c: 77: unsigned char m_char;
  1448                           ;main.c: 78: while (!done)
  1449                           
  1450  00F4  0877               	movf	UART_read_NMEA@done,w
  1451  00F5  1D03               	btfss	3,2
  1452  00F6  0008               	return
  1453                           
  1454                           ;main.c: 79: {
  1455                           ;main.c: 80: if(eusartRxCount==0)
  1456  00F7  087A               	movf	_eusartRxCount,w	;volatile
  1457  00F8  1D03               	btfss	3,2
  1458  00F9  28FD               	goto	l1203
  1459                           
  1460                           ;main.c: 81: {
  1461                           ;main.c: 82: do { LATA5 = 0; } while(0);
  1462  00FA  0022               	movlb	2	; select bank2
  1463  00FB  128C               	bcf	12,5	;volatile
  1464                           
  1465                           ;main.c: 83: }
  1466  00FC  28F4               	goto	l1211
  1467  00FD                     l1203:	
  1468                           
  1469                           ;main.c: 84: else if(eusartRxCount!=0)
  1470  00FD  087A               	movf	_eusartRxCount,w	;volatile
  1471  00FE  1903               	btfsc	3,2
  1472  00FF  28F4               	goto	l1211
  1473                           
  1474                           ;main.c: 85: {
  1475                           ;main.c: 86: m_char=EUSART_Read();
  1476  0100  20D4               	fcall	_EUSART_Read
  1477  0101  00F4               	movwf	??_UART_read_NMEA
  1478  0102  0874               	movf	??_UART_read_NMEA,w
  1479  0103  00F6               	movwf	UART_read_NMEA@m_char
  1480                           
  1481                           ;main.c: 87: do { LATA5 = 1; } while(0);
  1482  0104  0022               	movlb	2	; select bank2
  1483  0105  168C               	bsf	12,5	;volatile
  1484                           
  1485                           ;main.c: 88: _delay((unsigned long)((1)*(32000000/4000.0)));
  1486  0106  300B               	movlw	11
  1487  0107  00F5               	movwf	??_UART_read_NMEA+1
  1488  0108  3062               	movlw	98
  1489  0109  00F4               	movwf	??_UART_read_NMEA
  1490  010A                     u597:	
  1491  010A  0BF4               	decfsz	??_UART_read_NMEA,f
  1492  010B  290A               	goto	u597
  1493  010C  0BF5               	decfsz	??_UART_read_NMEA+1,f
  1494  010D  290A               	goto	u597
  1495  010E  0000               	nop
  1496  010F  28F4               	goto	l1211
  1497  0110                     __end_of_UART_read_NMEA:	
  1498                           
  1499                           	psect	text2
  1500  00D4                     __ptext2:	
  1501 ;; *************** function _EUSART_Read *****************
  1502 ;; Defined at:
  1503 ;;		line 112 in file "mcc_generated_files/eusart.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  readValue       1    3[COMMON] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      unsigned char 
  1510 ;; Registers used:
  1511 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1
  1517 ;;      Params:         0       0       0
  1518 ;;      Locals:         1       0       0
  1519 ;;      Temps:          1       0       0
  1520 ;;      Totals:         2       0       0
  1521 ;;Total ram usage:        2 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    2
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_UART_read_NMEA
  1528 ;;		_getch
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           
  1533                           ;psect for function _EUSART_Read
  1534  00D4                     _EUSART_Read:	
  1535                           
  1536                           ;eusart.c: 114: uint8_t readValue = 0;
  1537                           
  1538                           ;incstack = 0
  1539                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  1540  00D4  01F3               	clrf	EUSART_Read@readValue
  1541                           
  1542                           ;eusart.c: 117: RCSTAbits.SREN = 1;
  1543  00D5  0023               	movlb	3	; select bank3
  1544  00D6  169D               	bsf	29,5	;volatile
  1545  00D7                     l1147:	
  1546                           ;eusart.c: 120: {
  1547                           
  1548                           ;eusart.c: 119: while(0 == eusartRxCount)
  1549                           
  1550  00D7  087A               	movf	_eusartRxCount,w	;volatile
  1551  00D8  1903               	btfsc	3,2
  1552  00D9  28D7               	goto	l1147
  1553                           
  1554                           ;eusart.c: 121: }
  1555                           ;eusart.c: 123: PIE1bits.RCIE = 0;
  1556  00DA  0021               	movlb	1	; select bank1
  1557  00DB  1291               	bcf	17,5	;volatile
  1558                           
  1559                           ;eusart.c: 125: readValue = eusartRxBuffer[eusartRxTail++];
  1560  00DC  0020               	movlb	0	; select bank0
  1561  00DD  0832               	movf	_eusartRxTail,w
  1562  00DE  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  1563  00DF  0086               	movwf	6
  1564  00E0  0187               	clrf	7
  1565  00E1  0801               	movf	1,w
  1566  00E2  00F2               	movwf	??_EUSART_Read
  1567  00E3  0872               	movf	??_EUSART_Read,w
  1568  00E4  00F3               	movwf	EUSART_Read@readValue
  1569  00E5  3001               	movlw	1
  1570  00E6  00F2               	movwf	??_EUSART_Read
  1571  00E7  0872               	movf	??_EUSART_Read,w
  1572  00E8  07B2               	addwf	_eusartRxTail,f
  1573                           
  1574                           ;eusart.c: 126: if(sizeof(eusartRxBuffer) <= eusartRxTail)
  1575  00E9  3008               	movlw	8
  1576  00EA  0232               	subwf	_eusartRxTail,w
  1577  00EB  1803               	btfsc	3,0
  1578                           
  1579                           ;eusart.c: 127: {
  1580                           ;eusart.c: 128: eusartRxTail = 0;
  1581  00EC  01B2               	clrf	_eusartRxTail
  1582                           
  1583                           ;eusart.c: 129: }
  1584                           ;eusart.c: 130: eusartRxCount--;
  1585  00ED  3001               	movlw	1
  1586  00EE  02FA               	subwf	_eusartRxCount,f	;volatile
  1587                           
  1588                           ;eusart.c: 131: PIE1bits.RCIE = 1;
  1589  00EF  0021               	movlb	1	; select bank1
  1590  00F0  1691               	bsf	17,5	;volatile
  1591                           
  1592                           ;eusart.c: 133: return readValue;
  1593  00F1  0873               	movf	EUSART_Read@readValue,w
  1594  00F2  0008               	return
  1595  00F3                     __end_of_EUSART_Read:	
  1596                           
  1597                           	psect	text3
  1598  0072                     __ptext3:	
  1599 ;; *************** function _UART_Initialize *****************
  1600 ;; Defined at:
  1601 ;;		line 56 in file "main.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  tmp             1    5[BANK0 ] unsigned char 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0   BANK1
  1615 ;;      Params:         0       0       0
  1616 ;;      Locals:         0       1       0
  1617 ;;      Temps:          0       3       0
  1618 ;;      Totals:         0       4       0
  1619 ;;Total ram usage:        4 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:    5
  1622 ;; This function calls:
  1623 ;;		_printf
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           
  1630                           ;psect for function _UART_Initialize
  1631  0072                     _UART_Initialize:	
  1632                           
  1633                           ;main.c: 64: for(unsigned char tmp=0;tmp<(10*1);tmp++){_delay((unsigned long)((100)*(320
      +                          00000/4000.0)));};
  1634                           
  1635                           ;incstack = 0
  1636                           ; Regs used in _UART_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1637  0072  0020               	movlb	0	; select bank0
  1638  0073  01BA               	clrf	UART_Initialize@tmp
  1639  0074  300A               	movlw	10
  1640  0075  023A               	subwf	UART_Initialize@tmp,w
  1641  0076  1803               	btfsc	3,0
  1642  0077  288D               	goto	l1309
  1643  0078                     l1303:	
  1644  0078  3005               	movlw	5
  1645  0079  00B9               	movwf	??_UART_Initialize+2
  1646  007A  300F               	movlw	15
  1647  007B  00B8               	movwf	??_UART_Initialize+1
  1648  007C  30F4               	movlw	244
  1649  007D  00B7               	movwf	??_UART_Initialize
  1650  007E                     u607:	
  1651  007E  0BB7               	decfsz	??_UART_Initialize,f
  1652  007F  287E               	goto	u607
  1653  0080  0BB8               	decfsz	??_UART_Initialize+1,f
  1654  0081  287E               	goto	u607
  1655  0082  0BB9               	decfsz	??_UART_Initialize+2,f
  1656  0083  287E               	goto	u607
  1657  0084  3001               	movlw	1
  1658  0085  0020               	movlb	0	; select bank0
  1659  0086  00B7               	movwf	??_UART_Initialize
  1660  0087  0837               	movf	??_UART_Initialize,w
  1661  0088  07BA               	addwf	UART_Initialize@tmp,f
  1662  0089  300A               	movlw	10
  1663  008A  023A               	subwf	UART_Initialize@tmp,w
  1664  008B  1C03               	skipc
  1665  008C  2878               	goto	l1303
  1666  008D                     l1309:	
  1667                           
  1668                           ;main.c: 65: printf("$PMTK314,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0*29\r\n");
  1669  008D  302C               	movlw	low (STR_1| (0+32768))
  1670  008E  00F5               	movwf	printf@f
  1671  008F  3080               	movlw	high (STR_1| (0+32768))
  1672  0090  00F6               	movwf	printf@f+1
  1673  0091  212D               	fcall	_printf
  1674                           
  1675                           ;main.c: 66: _delay((unsigned long)((100)*(32000000/4000.0)));
  1676  0092  3005               	movlw	5
  1677  0093  0020               	movlb	0	; select bank0
  1678  0094  00B9               	movwf	??_UART_Initialize+2
  1679  0095  300F               	movlw	15
  1680  0096  00B8               	movwf	??_UART_Initialize+1
  1681  0097  30F4               	movlw	244
  1682  0098  00B7               	movwf	??_UART_Initialize
  1683  0099                     u617:	
  1684  0099  0BB7               	decfsz	??_UART_Initialize,f
  1685  009A  2899               	goto	u617
  1686  009B  0BB8               	decfsz	??_UART_Initialize+1,f
  1687  009C  2899               	goto	u617
  1688  009D  0BB9               	decfsz	??_UART_Initialize+2,f
  1689  009E  2899               	goto	u617
  1690                           
  1691                           ;main.c: 67: printf("$PMTK220,100*2F\r\n");
  1692  009F  3060               	movlw	low (STR_2| (0+32768))
  1693  00A0  00F5               	movwf	printf@f
  1694  00A1  3080               	movlw	high (STR_2| (0+32768))
  1695  00A2  00F6               	movwf	printf@f+1
  1696  00A3  212D               	fcall	_printf
  1697                           
  1698                           ;main.c: 68: _delay((unsigned long)((100)*(32000000/4000.0)));
  1699  00A4  3005               	movlw	5
  1700  00A5  0020               	movlb	0	; select bank0
  1701  00A6  00B9               	movwf	??_UART_Initialize+2
  1702  00A7  300F               	movlw	15
  1703  00A8  00B8               	movwf	??_UART_Initialize+1
  1704  00A9  30F4               	movlw	244
  1705  00AA  00B7               	movwf	??_UART_Initialize
  1706  00AB                     u627:	
  1707  00AB  0BB7               	decfsz	??_UART_Initialize,f
  1708  00AC  28AB               	goto	u627
  1709  00AD  0BB8               	decfsz	??_UART_Initialize+1,f
  1710  00AE  28AB               	goto	u627
  1711  00AF  0BB9               	decfsz	??_UART_Initialize+2,f
  1712  00B0  28AB               	goto	u627
  1713  00B1  0008               	return
  1714  00B2                     __end_of_UART_Initialize:	
  1715                           
  1716                           	psect	text4
  1717  012D                     __ptext4:	
  1718 ;; *************** function _printf *****************
  1719 ;; Defined at:
  1720 ;;		line 464 in file "D:\Program Files\Microchip\xc8\v1.38\sources\common\doprnt.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  f               2    5[COMMON] PTR const unsigned char 
  1723 ;;		 -> STR_2(18), STR_1(52), 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;  tmpval          4    0        struct .
  1726 ;;  cp              2    0        PTR const unsigned char 
  1727 ;;  len             2    0        unsigned int 
  1728 ;;  val             2    0        unsigned int 
  1729 ;;  c               1    1[BANK0 ] char 
  1730 ;;  ap              1    0[BANK0 ] PTR void [1]
  1731 ;;		 -> ?_printf(2), 
  1732 ;;  flag            1    0        unsigned char 
  1733 ;;  prec            1    0        char 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  2    5[COMMON] int 
  1736 ;; Registers used:
  1737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMMON   BANK0   BANK1
  1743 ;;      Params:         2       0       0
  1744 ;;      Locals:         0       2       0
  1745 ;;      Temps:          3       0       0
  1746 ;;      Totals:         5       2       0
  1747 ;;Total ram usage:        7 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    4
  1750 ;; This function calls:
  1751 ;;		_putch
  1752 ;; This function is called by:
  1753 ;;		_UART_Initialize
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           
  1758                           ;psect for function _printf
  1759  012D                     _printf:	
  1760                           
  1761                           ;doprnt.c: 466: va_list ap;
  1762                           ;doprnt.c: 499: signed char c;
  1763                           ;doprnt.c: 506: signed char prec;
  1764                           ;doprnt.c: 508: unsigned char flag;
  1765                           ;doprnt.c: 523: union {
  1766                           ;doprnt.c: 524: unsigned long vd;
  1767                           ;doprnt.c: 525: double integ;
  1768                           ;doprnt.c: 526: } tmpval;
  1769                           ;doprnt.c: 528: unsigned int val;
  1770                           ;doprnt.c: 529: unsigned len;
  1771                           ;doprnt.c: 530: const char * cp;
  1772                           ;doprnt.c: 533: *ap = __va_start();
  1773                           
  1774                           ;incstack = 0
  1775                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1776  012D  3077               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1777  012E  00F7               	movwf	??_printf
  1778  012F  0877               	movf	??_printf,w
  1779  0130  0020               	movlb	0	; select bank0
  1780  0131  00B5               	movwf	printf@ap
  1781  0132                     l1295:	
  1782                           ;doprnt.c: 543: }
  1783                           ;doprnt.c: 1422: {
  1784                           
  1785                           ;doprnt.c: 542: continue;
  1786                           
  1787                           ;doprnt.c: 536: while(c = *f++) {
  1788                           
  1789  0132  0876               	movf	printf@f+1,w
  1790  0133  00F8               	movwf	??_printf+1
  1791  0134  0875               	movf	printf@f,w
  1792  0135  00F7               	movwf	??_printf
  1793  0136  0AF5               	incf	printf@f,f
  1794  0137  1903               	skipnz
  1795  0138  0AF6               	incf	printf@f+1,f
  1796  0139  0877               	movf	??_printf,w
  1797  013A  0084               	movwf	4
  1798  013B  0878               	movf	??_printf+1,w
  1799  013C  0085               	movwf	5
  1800  013D  0800               	movf	0,w	;code access
  1801  013E  00F9               	movwf	??_printf+2
  1802  013F  0879               	movf	??_printf+2,w
  1803  0140  0020               	movlb	0	; select bank0
  1804  0141  00B6               	movwf	printf@c
  1805  0142  0836               	movf	printf@c,w
  1806  0143  1903               	btfsc	3,2
  1807  0144  0008               	return
  1808                           
  1809                           ;doprnt.c: 540: {
  1810                           ;doprnt.c: 541: (putch(c) );
  1811  0145  0836               	movf	printf@c,w
  1812  0146  21C1               	fcall	_putch
  1813  0147  2932               	goto	l1295
  1814  0148                     __end_of_printf:	
  1815                           ;doprnt.c: 1469: }
  1816                           ;doprnt.c: 1533: }
  1817                           ;doprnt.c: 1540: return 0;
  1818                           ;	Return value of _printf is never used
  1819                           
  1820                           
  1821                           	psect	text5
  1822  01C1                     __ptext5:	
  1823 ;; *************** function _putch *****************
  1824 ;; Defined at:
  1825 ;;		line 164 in file "mcc_generated_files/eusart.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  txData          1    wreg     unsigned char 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  txData          1    4[COMMON] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1
  1839 ;;      Params:         0       0       0
  1840 ;;      Locals:         1       0       0
  1841 ;;      Temps:          0       0       0
  1842 ;;      Totals:         1       0       0
  1843 ;;Total ram usage:        1 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    3
  1846 ;; This function calls:
  1847 ;;		_EUSART_Write
  1848 ;; This function is called by:
  1849 ;;		_printf
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           
  1854                           ;psect for function _putch
  1855  01C1                     _putch:	
  1856                           
  1857                           ;incstack = 0
  1858                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1859                           ;putch@txData stored from wreg
  1860  01C1  00F4               	movwf	putch@txData
  1861                           
  1862                           ;eusart.c: 166: EUSART_Write(txData);
  1863  01C2  0874               	movf	putch@txData,w
  1864  01C3  20B2               	fcall	_EUSART_Write
  1865  01C4  0008               	return
  1866  01C5                     __end_of_putch:	
  1867                           
  1868                           	psect	text6
  1869  00B2                     __ptext6:	
  1870 ;; *************** function _EUSART_Write *****************
  1871 ;; Defined at:
  1872 ;;		line 136 in file "mcc_generated_files/eusart.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  txData          1    wreg     unsigned char 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  txData          1    3[COMMON] unsigned char 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1
  1886 ;;      Params:         0       0       0
  1887 ;;      Locals:         1       0       0
  1888 ;;      Temps:          1       0       0
  1889 ;;      Totals:         2       0       0
  1890 ;;Total ram usage:        2 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    2
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_putch
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function _EUSART_Write
  1902  00B2                     _EUSART_Write:	
  1903                           
  1904                           ;incstack = 0
  1905                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  1906                           ;EUSART_Write@txData stored from wreg
  1907  00B2  00F3               	movwf	EUSART_Write@txData
  1908  00B3                     l1273:	
  1909                           ;eusart.c: 139: {
  1910                           
  1911                           ;eusart.c: 138: while(0 == eusartTxBufferRemaining)
  1912                           
  1913  00B3  087B               	movf	_eusartTxBufferRemaining,w	;volatile
  1914  00B4  1903               	btfsc	3,2
  1915  00B5  28B3               	goto	l1273
  1916                           
  1917                           ;eusart.c: 140: }
  1918                           ;eusart.c: 142: if(0 == PIE1bits.TXIE)
  1919  00B6  0021               	movlb	1	; select bank1
  1920  00B7  1A11               	btfsc	17,4	;volatile
  1921  00B8  28BD               	goto	l171
  1922                           
  1923                           ;eusart.c: 143: {
  1924                           ;eusart.c: 144: TXREG = txData;
  1925  00B9  0873               	movf	EUSART_Write@txData,w
  1926  00BA  0023               	movlb	3	; select bank3
  1927  00BB  009A               	movwf	26	;volatile
  1928                           
  1929                           ;eusart.c: 145: }
  1930  00BC  28D1               	goto	l1287
  1931  00BD                     l171:	
  1932                           
  1933                           ;eusart.c: 146: else
  1934                           ;eusart.c: 147: {
  1935                           ;eusart.c: 148: PIE1bits.TXIE = 0;
  1936  00BD  1211               	bcf	17,4	;volatile
  1937                           
  1938                           ;eusart.c: 149: eusartTxBuffer[eusartTxHead++] = txData;
  1939  00BE  0873               	movf	EUSART_Write@txData,w
  1940  00BF  00F2               	movwf	??_EUSART_Write
  1941  00C0  0020               	movlb	0	; select bank0
  1942  00C1  0833               	movf	_eusartTxHead,w
  1943  00C2  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  1944  00C3  0086               	movwf	6
  1945  00C4  0187               	clrf	7
  1946  00C5  0872               	movf	??_EUSART_Write,w
  1947  00C6  0081               	movwf	1
  1948  00C7  3001               	movlw	1
  1949  00C8  00F2               	movwf	??_EUSART_Write
  1950  00C9  0872               	movf	??_EUSART_Write,w
  1951  00CA  07B3               	addwf	_eusartTxHead,f
  1952                           
  1953                           ;eusart.c: 150: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  1954  00CB  3008               	movlw	8
  1955  00CC  0233               	subwf	_eusartTxHead,w
  1956  00CD  1803               	btfsc	3,0
  1957                           
  1958                           ;eusart.c: 151: {
  1959                           ;eusart.c: 152: eusartTxHead = 0;
  1960  00CE  01B3               	clrf	_eusartTxHead
  1961                           
  1962                           ;eusart.c: 153: }
  1963                           ;eusart.c: 154: eusartTxBufferRemaining--;
  1964  00CF  3001               	movlw	1
  1965  00D0  02FB               	subwf	_eusartTxBufferRemaining,f	;volatile
  1966  00D1                     l1287:	
  1967                           
  1968                           ;eusart.c: 155: }
  1969                           ;eusart.c: 156: PIE1bits.TXIE = 1;
  1970  00D1  0021               	movlb	1	; select bank1
  1971  00D2  1611               	bsf	17,4	;volatile
  1972  00D3  0008               	return
  1973  00D4                     __end_of_EUSART_Write:	
  1974                           
  1975                           	psect	text7
  1976  01BB                     __ptext7:	
  1977 ;; *************** function _SYSTEM_Initialize *****************
  1978 ;; Defined at:
  1979 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0, pclath, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMMON   BANK0   BANK1
  1993 ;;      Params:         0       0       0
  1994 ;;      Locals:         0       0       0
  1995 ;;      Temps:          0       0       0
  1996 ;;      Totals:         0       0       0
  1997 ;;Total ram usage:        0 bytes
  1998 ;; Hardware stack levels used:    1
  1999 ;; Hardware stack levels required when called:    4
  2000 ;; This function calls:
  2001 ;;		_EPWM_Initialize
  2002 ;;		_EUSART_Initialize
  2003 ;;		_OSCILLATOR_Initialize
  2004 ;;		_PIN_MANAGER_Initialize
  2005 ;;		_TMR2_Initialize
  2006 ;; This function is called by:
  2007 ;;		_main
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           
  2012                           ;psect for function _SYSTEM_Initialize
  2013  01BB                     _SYSTEM_Initialize:	
  2014                           
  2015                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  2016                           
  2017                           ;incstack = 0
  2018                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2019  01BB  217E               	fcall	_PIN_MANAGER_Initialize
  2020                           
  2021                           ;mcc.c: 73: OSCILLATOR_Initialize();
  2022  01BC  21A7               	fcall	_OSCILLATOR_Initialize
  2023                           
  2024                           ;mcc.c: 74: EPWM_Initialize();
  2025  01BD  2194               	fcall	_EPWM_Initialize
  2026                           
  2027                           ;mcc.c: 75: TMR2_Initialize();
  2028  01BE  219F               	fcall	_TMR2_Initialize
  2029                           
  2030                           ;mcc.c: 76: EUSART_Initialize();
  2031  01BF  2148               	fcall	_EUSART_Initialize
  2032  01C0  0008               	return
  2033  01C1                     __end_of_SYSTEM_Initialize:	
  2034                           
  2035                           	psect	text8
  2036  019F                     __ptext8:	
  2037 ;; *************** function _TMR2_Initialize *****************
  2038 ;; Defined at:
  2039 ;;		line 57 in file "mcc_generated_files/tmr2.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;		None
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg, status,2, status,0, pclath, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1
  2053 ;;      Params:         0       0       0
  2054 ;;      Locals:         0       0       0
  2055 ;;      Temps:          0       0       0
  2056 ;;      Totals:         0       0       0
  2057 ;;Total ram usage:        0 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    3
  2060 ;; This function calls:
  2061 ;;		_TMR2_StartTimer
  2062 ;; This function is called by:
  2063 ;;		_SYSTEM_Initialize
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           
  2068                           ;psect for function _TMR2_Initialize
  2069  019F                     _TMR2_Initialize:	
  2070                           
  2071                           ;tmr2.c: 62: T2CON = 0x00;
  2072                           
  2073                           ;incstack = 0
  2074                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2075  019F  0020               	movlb	0	; select bank0
  2076  01A0  019C               	clrf	28	;volatile
  2077                           
  2078                           ;tmr2.c: 65: PR2 = 0xFF;
  2079  01A1  30FF               	movlw	255
  2080  01A2  009B               	movwf	27	;volatile
  2081                           
  2082                           ;tmr2.c: 68: TMR2 = 0x00;
  2083  01A3  019A               	clrf	26	;volatile
  2084                           
  2085                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
  2086  01A4  1091               	bcf	17,1	;volatile
  2087                           
  2088                           ;tmr2.c: 74: TMR2_StartTimer();
  2089  01A5  21C5               	fcall	_TMR2_StartTimer
  2090  01A6  0008               	return
  2091  01A7                     __end_of_TMR2_Initialize:	
  2092                           
  2093                           	psect	text9
  2094  01C5                     __ptext9:	
  2095 ;; *************** function _TMR2_StartTimer *****************
  2096 ;; Defined at:
  2097 ;;		line 77 in file "mcc_generated_files/tmr2.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		None
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1
  2111 ;;      Params:         0       0       0
  2112 ;;      Locals:         0       0       0
  2113 ;;      Temps:          0       0       0
  2114 ;;      Totals:         0       0       0
  2115 ;;Total ram usage:        0 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    2
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_TMR2_Initialize
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function _TMR2_StartTimer
  2127  01C5                     _TMR2_StartTimer:	
  2128                           
  2129                           ;tmr2.c: 80: T2CONbits.TMR2ON = 1;
  2130                           
  2131                           ;incstack = 0
  2132                           ; Regs used in _TMR2_StartTimer: []
  2133  01C5  0020               	movlb	0	; select bank0
  2134  01C6  151C               	bsf	28,2	;volatile
  2135  01C7  0008               	return
  2136  01C8                     __end_of_TMR2_StartTimer:	
  2137                           
  2138                           	psect	text10
  2139  017E                     __ptext10:	
  2140 ;; *************** function _PIN_MANAGER_Initialize *****************
  2141 ;; Defined at:
  2142 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1
  2156 ;;      Params:         0       0       0
  2157 ;;      Locals:         0       0       0
  2158 ;;      Temps:          0       0       0
  2159 ;;      Totals:         0       0       0
  2160 ;;Total ram usage:        0 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    2
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_SYSTEM_Initialize
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           
  2171                           ;psect for function _PIN_MANAGER_Initialize
  2172  017E                     _PIN_MANAGER_Initialize:	
  2173                           
  2174                           ;pin_manager.c: 51: LATA = 0x0;
  2175                           
  2176                           ;incstack = 0
  2177                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2178  017E  0022               	movlb	2	; select bank2
  2179  017F  018C               	clrf	12	;volatile
  2180                           
  2181                           ;pin_manager.c: 52: LATC = 0x0;
  2182  0180  018E               	clrf	14	;volatile
  2183                           
  2184                           ;pin_manager.c: 53: ANSELA = 0x17;
  2185  0181  3017               	movlw	23
  2186  0182  0023               	movlb	3	; select bank3
  2187  0183  008C               	movwf	12	;volatile
  2188                           
  2189                           ;pin_manager.c: 54: ANSELC = 0xF;
  2190  0184  300F               	movlw	15
  2191  0185  008E               	movwf	14	;volatile
  2192                           
  2193                           ;pin_manager.c: 55: WPUA = 0x3F;
  2194  0186  303F               	movlw	63
  2195  0187  0024               	movlb	4	; select bank4
  2196  0188  008C               	movwf	12	;volatile
  2197                           
  2198                           ;pin_manager.c: 56: WPUC = 0x3F;
  2199  0189  303F               	movlw	63
  2200  018A  008E               	movwf	14	;volatile
  2201                           
  2202                           ;pin_manager.c: 57: TRISC = 0x37;
  2203  018B  3037               	movlw	55
  2204  018C  0021               	movlb	1	; select bank1
  2205  018D  008E               	movwf	14	;volatile
  2206                           
  2207                           ;pin_manager.c: 58: TRISA = 0x1F;
  2208  018E  301F               	movlw	31
  2209  018F  008C               	movwf	12	;volatile
  2210                           
  2211                           ;pin_manager.c: 60: OPTION_REGbits.nWPUEN = 0x0;
  2212  0190  1395               	bcf	21,7	;volatile
  2213                           
  2214                           ;pin_manager.c: 61: APFCON = 0x00;
  2215  0191  0022               	movlb	2	; select bank2
  2216  0192  019D               	clrf	29	;volatile
  2217  0193  0008               	return
  2218  0194                     __end_of_PIN_MANAGER_Initialize:	
  2219                           
  2220                           	psect	text11
  2221  01A7                     __ptext11:	
  2222 ;; *************** function _OSCILLATOR_Initialize *****************
  2223 ;; Defined at:
  2224 ;;		line 79 in file "mcc_generated_files/mcc.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1
  2238 ;;      Params:         0       0       0
  2239 ;;      Locals:         0       0       0
  2240 ;;      Temps:          0       0       0
  2241 ;;      Totals:         0       0       0
  2242 ;;Total ram usage:        0 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    2
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_SYSTEM_Initialize
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _OSCILLATOR_Initialize
  2254  01A7                     _OSCILLATOR_Initialize:	
  2255                           
  2256                           ;mcc.c: 82: OSCCON = 0x70;
  2257                           
  2258                           ;incstack = 0
  2259                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2260  01A7  3070               	movlw	112
  2261  01A8  0021               	movlb	1	; select bank1
  2262  01A9  0099               	movwf	25	;volatile
  2263                           
  2264                           ;mcc.c: 84: OSCSTAT = 0x00;
  2265  01AA  019A               	clrf	26	;volatile
  2266                           
  2267                           ;mcc.c: 86: OSCTUNE = 0x00;
  2268  01AB  0198               	clrf	24	;volatile
  2269  01AC                     l256:	
  2270                           ;mcc.c: 91: {
  2271                           
  2272                           ;mcc.c: 90: while(PLLR == 0)
  2273                           
  2274  01AC  1B1A               	btfsc	26,6	;volatile
  2275  01AD  0008               	return
  2276  01AE  29AC               	goto	l256
  2277  01AF                     __end_of_OSCILLATOR_Initialize:	
  2278                           
  2279                           	psect	text12
  2280  0148                     __ptext12:	
  2281 ;; *************** function _EUSART_Initialize *****************
  2282 ;; Defined at:
  2283 ;;		line 75 in file "mcc_generated_files/eusart.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;		None
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;		None
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, status,2
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1
  2297 ;;      Params:         0       0       0
  2298 ;;      Locals:         0       0       0
  2299 ;;      Temps:          1       0       0
  2300 ;;      Totals:         1       0       0
  2301 ;;Total ram usage:        1 bytes
  2302 ;; Hardware stack levels used:    1
  2303 ;; Hardware stack levels required when called:    2
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		_SYSTEM_Initialize
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _EUSART_Initialize
  2313  0148                     _EUSART_Initialize:	
  2314                           
  2315                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  2316                           
  2317                           ;incstack = 0
  2318                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  2319  0148  0021               	movlb	1	; select bank1
  2320  0149  1291               	bcf	17,5	;volatile
  2321                           
  2322                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  2323  014A  1211               	bcf	17,4	;volatile
  2324                           
  2325                           ;eusart.c: 84: BAUDCON = 0x08;
  2326  014B  3008               	movlw	8
  2327  014C  0023               	movlb	3	; select bank3
  2328  014D  009F               	movwf	31	;volatile
  2329                           
  2330                           ;eusart.c: 87: RCSTA = 0x90;
  2331  014E  3090               	movlw	144
  2332  014F  009D               	movwf	29	;volatile
  2333                           
  2334                           ;eusart.c: 90: TXSTA = 0x24;
  2335  0150  3024               	movlw	36
  2336  0151  009E               	movwf	30	;volatile
  2337                           
  2338                           ;eusart.c: 93: SPBRGL = 0x40;
  2339  0152  3040               	movlw	64
  2340  0153  009B               	movwf	27	;volatile
  2341                           
  2342                           ;eusart.c: 96: SPBRGH = 0x03;
  2343  0154  3003               	movlw	3
  2344  0155  009C               	movwf	28	;volatile
  2345                           
  2346                           ;eusart.c: 100: eusartTxHead = 0;
  2347  0156  0020               	movlb	0	; select bank0
  2348  0157  01B3               	clrf	_eusartTxHead
  2349                           
  2350                           ;eusart.c: 101: eusartTxTail = 0;
  2351  0158  01B4               	clrf	_eusartTxTail
  2352                           
  2353                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  2354  0159  3008               	movlw	8
  2355  015A  00F2               	movwf	??_EUSART_Initialize
  2356  015B  0872               	movf	??_EUSART_Initialize,w
  2357  015C  00FB               	movwf	_eusartTxBufferRemaining	;volatile
  2358                           
  2359                           ;eusart.c: 104: eusartRxHead = 0;
  2360  015D  01B1               	clrf	_eusartRxHead
  2361                           
  2362                           ;eusart.c: 105: eusartRxTail = 0;
  2363  015E  01B2               	clrf	_eusartRxTail
  2364                           
  2365                           ;eusart.c: 106: eusartRxCount = 0;
  2366  015F  01FA               	clrf	_eusartRxCount	;volatile
  2367                           
  2368                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  2369  0160  0021               	movlb	1	; select bank1
  2370  0161  1691               	bsf	17,5	;volatile
  2371  0162  0008               	return
  2372  0163                     __end_of_EUSART_Initialize:	
  2373                           
  2374                           	psect	text13
  2375  0194                     __ptext13:	
  2376 ;; *************** function _EPWM_Initialize *****************
  2377 ;; Defined at:
  2378 ;;		line 63 in file "mcc_generated_files/epwm.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1
  2392 ;;      Params:         0       0       0
  2393 ;;      Locals:         0       0       0
  2394 ;;      Temps:          0       0       0
  2395 ;;      Totals:         0       0       0
  2396 ;;Total ram usage:        0 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    2
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_SYSTEM_Initialize
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _EPWM_Initialize
  2408  0194                     _EPWM_Initialize:	
  2409                           
  2410                           ;epwm.c: 68: CCP1CON = 0x3C;
  2411                           
  2412                           ;incstack = 0
  2413                           ; Regs used in _EPWM_Initialize: [wreg+status,2]
  2414  0194  303C               	movlw	60
  2415  0195  0025               	movlb	5	; select bank5
  2416  0196  0093               	movwf	19	;volatile
  2417                           
  2418                           ;epwm.c: 71: ECCP1AS = 0x00;
  2419  0197  0195               	clrf	21	;volatile
  2420                           
  2421                           ;epwm.c: 74: PWM1CON = 0x80;
  2422  0198  3080               	movlw	128
  2423  0199  0094               	movwf	20	;volatile
  2424                           
  2425                           ;epwm.c: 77: PSTR1CON = 0x00;
  2426  019A  0196               	clrf	22	;volatile
  2427                           
  2428                           ;epwm.c: 80: CCPR1L = 0x7F;
  2429  019B  307F               	movlw	127
  2430  019C  0091               	movwf	17	;volatile
  2431                           
  2432                           ;epwm.c: 83: CCPR1H = 0x00;
  2433  019D  0192               	clrf	18	;volatile
  2434  019E  0008               	return
  2435  019F                     __end_of_EPWM_Initialize:	
  2436                           
  2437                           	psect	intentry
  2438  0004                     __pintentry:	
  2439 ;; *************** function _INTERRUPT_InterruptManager *****************
  2440 ;; Defined at:
  2441 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1
  2455 ;;      Params:         0       0       0
  2456 ;;      Locals:         0       0       0
  2457 ;;      Temps:          1       0       0
  2458 ;;      Totals:         1       0       0
  2459 ;;Total ram usage:        1 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    1
  2462 ;; This function calls:
  2463 ;;		_EUSART_Receive_ISR
  2464 ;;		_EUSART_Transmit_ISR
  2465 ;; This function is called by:
  2466 ;;		Interrupt level 1
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470  0004                     _INTERRUPT_InterruptManager:	
  2471                           
  2472                           ;incstack = 0
  2473  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2474                           
  2475                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2476  0005  3180               	pagesel	$
  2477  0006  0020               	movlb	0	; select bank0
  2478  0007  087F               	movf	127,w
  2479  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  2480                           
  2481                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits.TXIF
      +                           == 1)
  2482  0009  1F0B               	btfss	11,6	;volatile
  2483  000A  2812               	goto	i1l1263
  2484  000B  0021               	movlb	1	; select bank1
  2485  000C  1E11               	btfss	17,4	;volatile
  2486  000D  2812               	goto	i1l1263
  2487  000E  0020               	movlb	0	; select bank0
  2488  000F  1E11               	btfss	17,4	;volatile
  2489  0010  2812               	goto	i1l1263
  2490                           
  2491                           ;interrupt_manager.c: 55: {
  2492                           ;interrupt_manager.c: 56: EUSART_Transmit_ISR();
  2493  0011  2110               	fcall	_EUSART_Transmit_ISR
  2494  0012                     i1l1263:	
  2495                           
  2496                           ;interrupt_manager.c: 57: }
  2497                           ;interrupt_manager.c: 58: if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits.RCIF
      +                           == 1)
  2498  0012  1F0B               	btfss	11,6	;volatile
  2499  0013  281B               	goto	i1l275
  2500  0014  0021               	movlb	1	; select bank1
  2501  0015  1E91               	btfss	17,5	;volatile
  2502  0016  281B               	goto	i1l275
  2503  0017  0020               	movlb	0	; select bank0
  2504  0018  1E91               	btfss	17,5	;volatile
  2505  0019  281B               	goto	i1l275
  2506                           
  2507                           ;interrupt_manager.c: 59: {
  2508                           ;interrupt_manager.c: 60: EUSART_Receive_ISR();
  2509  001A  2163               	fcall	_EUSART_Receive_ISR
  2510  001B                     i1l275:	
  2511                           ;interrupt_manager.c: 62: else
  2512                           ;interrupt_manager.c: 63: {
  2513                           
  2514                           ;interrupt_manager.c: 61: }
  2515                           
  2516  001B  0871               	movf	??_INTERRUPT_InterruptManager,w
  2517  001C  0020               	movlb	0	; select bank0
  2518  001D  00FF               	movwf	127
  2519  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2520  001F  0009               	retfie
  2521  0020                     __end_of_INTERRUPT_InterruptManager:	
  2522                           
  2523                           	psect	text15
  2524  0110                     __ptext15:	
  2525 ;; *************** function _EUSART_Transmit_ISR *****************
  2526 ;; Defined at:
  2527 ;;		line 169 in file "mcc_generated_files/eusart.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;		None
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1
  2541 ;;      Params:         0       0       0
  2542 ;;      Locals:         0       0       0
  2543 ;;      Temps:          1       0       0
  2544 ;;      Totals:         1       0       0
  2545 ;;Total ram usage:        1 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_INTERRUPT_InterruptManager
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function _EUSART_Transmit_ISR
  2556  0110                     _EUSART_Transmit_ISR:	
  2557                           
  2558                           ;eusart.c: 173: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  2559                           
  2560                           ;incstack = 0
  2561                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2562  0110  3008               	movlw	8
  2563  0111  027B               	subwf	_eusartTxBufferRemaining,w	;volatile
  2564  0112  1803               	skipnc
  2565  0113  292A               	goto	i1l183
  2566                           
  2567                           ;eusart.c: 174: {
  2568                           ;eusart.c: 175: TXREG = eusartTxBuffer[eusartTxTail++];
  2569  0114  0020               	movlb	0	; select bank0
  2570  0115  0834               	movf	_eusartTxTail,w
  2571  0116  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2572  0117  0086               	movwf	6
  2573  0118  0187               	clrf	7
  2574  0119  0801               	movf	1,w
  2575  011A  0023               	movlb	3	; select bank3
  2576  011B  009A               	movwf	26	;volatile
  2577  011C  3001               	movlw	1
  2578  011D  00F0               	movwf	??_EUSART_Transmit_ISR
  2579  011E  0870               	movf	??_EUSART_Transmit_ISR,w
  2580  011F  0020               	movlb	0	; select bank0
  2581  0120  07B4               	addwf	_eusartTxTail,f
  2582                           
  2583                           ;eusart.c: 176: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  2584  0121  3008               	movlw	8
  2585  0122  0234               	subwf	_eusartTxTail,w
  2586  0123  1803               	btfsc	3,0
  2587                           
  2588                           ;eusart.c: 177: {
  2589                           ;eusart.c: 178: eusartTxTail = 0;
  2590  0124  01B4               	clrf	_eusartTxTail
  2591                           
  2592                           ;eusart.c: 179: }
  2593                           ;eusart.c: 180: eusartTxBufferRemaining++;
  2594  0125  3001               	movlw	1
  2595  0126  00F0               	movwf	??_EUSART_Transmit_ISR
  2596  0127  0870               	movf	??_EUSART_Transmit_ISR,w
  2597  0128  07FB               	addwf	_eusartTxBufferRemaining,f	;volatile
  2598                           
  2599                           ;eusart.c: 181: }
  2600  0129  0008               	return
  2601  012A                     i1l183:	
  2602                           
  2603                           ;eusart.c: 182: else
  2604                           ;eusart.c: 183: {
  2605                           ;eusart.c: 184: PIE1bits.TXIE = 0;
  2606  012A  0021               	movlb	1	; select bank1
  2607  012B  1211               	bcf	17,4	;volatile
  2608  012C  0008               	return
  2609  012D                     __end_of_EUSART_Transmit_ISR:	
  2610                           
  2611                           	psect	text16
  2612  0163                     __ptext16:	
  2613 ;; *************** function _EUSART_Receive_ISR *****************
  2614 ;; Defined at:
  2615 ;;		line 188 in file "mcc_generated_files/eusart.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1
  2629 ;;      Params:         0       0       0
  2630 ;;      Locals:         0       0       0
  2631 ;;      Temps:          1       0       0
  2632 ;;      Totals:         1       0       0
  2633 ;;Total ram usage:        1 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		_INTERRUPT_InterruptManager
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           
  2643                           ;psect for function _EUSART_Receive_ISR
  2644  0163                     _EUSART_Receive_ISR:	
  2645                           
  2646                           ;eusart.c: 191: if(1 == RCSTAbits.OERR)
  2647                           
  2648                           ;incstack = 0
  2649                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2650  0163  0023               	movlb	3	; select bank3
  2651  0164  1C9D               	btfss	29,1	;volatile
  2652  0165  2968               	goto	i1l1231
  2653                           
  2654                           ;eusart.c: 192: {
  2655                           ;eusart.c: 195: RCSTAbits.SPEN = 0;
  2656  0166  139D               	bcf	29,7	;volatile
  2657                           
  2658                           ;eusart.c: 196: RCSTAbits.SPEN = 1;
  2659  0167  179D               	bsf	29,7	;volatile
  2660  0168                     i1l1231:	
  2661                           
  2662                           ;eusart.c: 197: }
  2663                           ;eusart.c: 200: eusartRxBuffer[eusartRxHead++] = RCREG;
  2664  0168  0819               	movf	25,w	;volatile
  2665  0169  00F0               	movwf	??_EUSART_Receive_ISR
  2666  016A  0020               	movlb	0	; select bank0
  2667  016B  0831               	movf	_eusartRxHead,w
  2668  016C  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  2669  016D  0086               	movwf	6
  2670  016E  0187               	clrf	7
  2671  016F  0870               	movf	??_EUSART_Receive_ISR,w
  2672  0170  0081               	movwf	1
  2673  0171  3001               	movlw	1
  2674  0172  00F0               	movwf	??_EUSART_Receive_ISR
  2675  0173  0870               	movf	??_EUSART_Receive_ISR,w
  2676  0174  07B1               	addwf	_eusartRxHead,f
  2677                           
  2678                           ;eusart.c: 201: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  2679  0175  3008               	movlw	8
  2680  0176  0231               	subwf	_eusartRxHead,w
  2681  0177  1803               	btfsc	3,0
  2682                           
  2683                           ;eusart.c: 202: {
  2684                           ;eusart.c: 203: eusartRxHead = 0;
  2685  0178  01B1               	clrf	_eusartRxHead
  2686                           
  2687                           ;eusart.c: 204: }
  2688                           ;eusart.c: 205: eusartRxCount++;
  2689  0179  3001               	movlw	1
  2690  017A  00F0               	movwf	??_EUSART_Receive_ISR
  2691  017B  0870               	movf	??_EUSART_Receive_ISR,w
  2692  017C  07FA               	addwf	_eusartRxCount,f	;volatile
  2693  017D  0008               	return
  2694  017E                     __end_of_EUSART_Receive_ISR:	
  2695  007E                     btemp	set	126	;btemp
  2696  007E                     int$flags	set	126
  2697  007E                     wtemp	set	126
  2698  007E                     wtemp0	set	126
  2699  0080                     wtemp1	set	128
  2700  0082                     wtemp2	set	130
  2701  0084                     wtemp3	set	132
  2702  0086                     wtemp4	set	134
  2703  0088                     wtemp5	set	136
  2704  007F                     wtemp6	set	127
  2705  007E                     ttemp	set	126
  2706  007E                     ttemp0	set	126
  2707  0081                     ttemp1	set	129
  2708  0084                     ttemp2	set	132
  2709  0087                     ttemp3	set	135
  2710  007F                     ttemp4	set	127
  2711  007E                     ltemp	set	126
  2712  007E                     ltemp0	set	126
  2713  0082                     ltemp1	set	130
  2714  0086                     ltemp2	set	134
  2715  0080                     ltemp3	set	128


Data Sizes:
    Strings     70
    Constant    0
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      6      27
    BANK1            32      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_2(CODE[18]), STR_1(CODE[52]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _UART_read_NMEA->_EUSART_Read
    _UART_Initialize->_printf
    _printf->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_UART_Initialize
    _UART_Initialize->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     431
                  _SYSTEM_Initialize
                    _UART_Initialize
                     _UART_read_NMEA
 ---------------------------------------------------------------------------------
 (1) _UART_read_NMEA                                       4     4      0      48
                                              4 COMMON     4     4      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          2     2      0      24
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      4     4      0     383
                                              2 BANK0      4     4      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              19    17      2     315
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      93
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _EPWM_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EPWM_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (6) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EPWM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   _UART_Initialize
     _printf
       _putch
         _EUSART_Write
   _UART_read_NMEA
     _EUSART_Read

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      27       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6      1B       6       33.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      27       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Sep 09 19:22:42 2016

                        __CFG_CP$OFF 0000                                  l171 00BD  
                                l256 01AC                                  _PR2 001B  
                       __CFG_CPD$OFF 0000                                  u607 007E  
                                u617 0099                                  u627 00AB  
                                u597 010A                      _TMR2_Initialize 019F  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       __CFG_IESO$ON 0000                         ?_EUSART_Read 0070  
                       __CFG_LVP$OFF 0000                                 l1203 00FD  
                               l1211 00F4                                 l1303 0078  
                               l1147 00D7                                 l1323 01B9  
                               l1309 008D                                 l1273 00B3  
                               l1287 00D1                                 l1295 0132  
                               STR_1 002C                                 STR_2 0060  
                               _LATA 010C                                 _LATC 010E  
                               _PLLR 04D6                                 _TMR2 001A  
                               _WPUA 020C                                 _WPUC 020E  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _main 01B5                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                               start 0020                                 ttemp 007E  
                               wtemp 007E                        __CFG_MCLRE$ON 0000  
                   ?_UART_Initialize 0070                        __CFG_PLLEN$ON 0000  
                      ?_EUSART_Write 0070       __size_of_OSCILLATOR_Initialize 0008  
      __end_of_OSCILLATOR_Initialize 01AF                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                                _T2CON 001C  
                              _LATA5 0865                                i1l183 012A  
                              i1l275 001B                                _RCREG 0199  
                              _RCSTA 019D                                _TRISA 008C  
                              _TRISC 008E                                _TXREG 019A  
                              _TXSTA 019E                                _putch 01C1  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                      _TMR2_StartTimer 01C5  
                    __initialization 0021                         __end_of_main 01BB  
                     ??_EUSART_Write 0072              __end_of_TMR2_Initialize 01A7  
        ?_INTERRUPT_InterruptManager 0070                               ??_main 007A  
                             _EEADRH 0192                               _EEADRL 0191  
                             _CCPR1H 0292                               _EEDATH 0194  
                             _CCPR1L 0291                               _EEDATL 0193  
                             _EECON2 0196                               _APFCON 011D  
                             _ANSELA 018C                               ?_putch 0070  
                             _ANSELC 018E                               i1l1231 0168  
                             i1l1263 0012                               _OSCCON 0099  
                             _SPBRGH 019C                               _SPBRGL 019B  
                     __CFG_PWRTE$OFF 0000                       __CFG_STVREN$ON 0000  
                _EUSART_Transmit_ISR 0110                               _printf 012D  
           __size_of_EPWM_Initialize 000B              __end_of_TMR2_StartTimer 01C8  
               ?_EUSART_Transmit_ISR 0070                 __size_of_EUSART_Read 001F  
                  _SYSTEM_Initialize 01BB              __end_of__initialization 0029  
                 ?_SYSTEM_Initialize 0070                       __pcstackCOMMON 0070  
                ??_SYSTEM_Initialize 0073                        __end_of_putch 01C5  
                   ?_TMR2_Initialize 0070                       _OPTION_REGbits 0095  
          __end_of_SYSTEM_Initialize 01C1                ??_EUSART_Transmit_ISR 0070  
                            ??_putch 0074                           __pbssBANK0 0020  
               __end_of_EUSART_Write 00D4          __size_of_EUSART_Receive_ISR 001B  
                         __pmaintext 01B5                           __pintentry 0004  
            __size_of_UART_read_NMEA 001D                              _CCP1CON 0293  
                            _ECCP1AS 0295                              _BAUDCON 019F  
                            ?_printf 0075                        _eusartRxCount 007A  
                            _OSCSTAT 009A                              _OSCTUNE 0098  
                            _PWM1CON 0294                     ?_TMR2_StartTimer 0070  
                  ??_EPWM_Initialize 0072                              __ptext1 00F3  
                            __ptext2 00D4                              __ptext3 0072  
                            __ptext4 012D                              __ptext5 01C1  
                            __ptext6 00B2                              __ptext7 01BB  
                            __ptext8 019F                              __ptext9 01C5  
                    __size_of_printf 001B                _OSCILLATOR_Initialize 01A7  
                          _T2CONbits 001C             ??_PIN_MANAGER_Initialize 0072  
           __size_of_UART_Initialize 0040           __size_of_SYSTEM_Initialize 0006  
                            clrloop0 01B0                 end_of_initialization 0029  
                  _EUSART_Initialize 0148                   ?_EUSART_Initialize 0070  
                          _RCSTAbits 019D                              printf@c 0036  
                            printf@f 0075                         __pstringtext 002C  
                ??_EUSART_Initialize 0072                     __CFG_FOSC$INTOSC 0000  
              __size_of_EUSART_Write 0022            __end_of_EUSART_Initialize 0163  
                     _UART_read_NMEA 00F3                         _EUSART_Write 00B2  
             ?_OSCILLATOR_Initialize 0070                       __end_of_printf 0148  
                start_initialization 0021      __size_of_PIN_MANAGER_Initialize 0016  
                      ??_EUSART_Read 0072                          putch@txData 0074  
                  ??_UART_Initialize 0037               __end_of_UART_read_NMEA 0110  
                           ??_printf 0077                      _EPWM_Initialize 0194  
        __end_of_EUSART_Transmit_ISR 012D                          __pbssCOMMON 007A  
                          ___latbits 0000                        __pcstackBANK0 0035  
           __size_of_TMR2_Initialize 0008                          _char_buffer 0030  
         __end_of_EUSART_Receive_ISR 017E           __size_of_EUSART_Initialize 001B  
                __end_of_EUSART_Read 00F3               _PIN_MANAGER_Initialize 017E  
                    ?_UART_read_NMEA 0070                 EUSART_Read@readValue 0073  
                       _eusartRxHead 0031                         _eusartTxHead 0033  
                       _eusartRxTail 0032                         _eusartTxTail 0034  
       ??_INTERRUPT_InterruptManager 0071              _eusartTxBufferRemaining 007B  
                     __size_of_putch 0004                       _eusartRxBuffer 0020  
                     _eusartTxBuffer 0028                            clear_ram0 01AF  
                           _PIE1bits 0091             __size_of_TMR2_StartTimer 0003  
__size_of_INTERRUPT_InterruptManager 001C                             _PIR1bits 0011  
                           _PSTR1CON 0296              __end_of_EPWM_Initialize 019F  
                        _EUSART_Read 00D4                    ??_TMR2_Initialize 0072  
                         _EECON1bits 0195                 UART_read_NMEA@m_char 0076  
            ??_OSCILLATOR_Initialize 0072                      _UART_Initialize 0072  
                           __ptext10 017E                             __ptext11 01A7  
                           __ptext12 0148                             __ptext13 0194  
                           __ptext15 0110                             __ptext16 0163  
                      __size_of_main 0006                   UART_Initialize@tmp 003A  
                           int$flags 007E                     ?_EPWM_Initialize 0070  
                  ??_TMR2_StartTimer 0072   __end_of_INTERRUPT_InterruptManager 0020  
         _INTERRUPT_InterruptManager 0004                           _INTCONbits 000B  
                           intlevel1 0000                     ??_UART_read_NMEA 0074  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                           printf@ap 0035                   _EUSART_Receive_ISR 0163  
            __end_of_UART_Initialize 00B2                   UART_read_NMEA@done 0077  
                ?_EUSART_Receive_ISR 0070                   EUSART_Write@txData 0073  
       __size_of_EUSART_Transmit_ISR 001D       __end_of_PIN_MANAGER_Initialize 0194  
               ??_EUSART_Receive_ISR 0070  

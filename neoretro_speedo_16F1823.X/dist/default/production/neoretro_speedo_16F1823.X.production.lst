

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Sep 10 11:34:40 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  0008                     	;# 
    39  0009                     	;# 
    40  000A                     	;# 
    41  000B                     	;# 
    42  000C                     	;# 
    43  000E                     	;# 
    44  0011                     	;# 
    45  0012                     	;# 
    46  0015                     	;# 
    47  0016                     	;# 
    48  0016                     	;# 
    49  0017                     	;# 
    50  0018                     	;# 
    51  0019                     	;# 
    52  001A                     	;# 
    53  001B                     	;# 
    54  001C                     	;# 
    55  001E                     	;# 
    56  001F                     	;# 
    57  008C                     	;# 
    58  008E                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0095                     	;# 
    62  0096                     	;# 
    63  0097                     	;# 
    64  0098                     	;# 
    65  0099                     	;# 
    66  009A                     	;# 
    67  009B                     	;# 
    68  009B                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  010C                     	;# 
    73  010E                     	;# 
    74  0111                     	;# 
    75  0112                     	;# 
    76  0113                     	;# 
    77  0114                     	;# 
    78  0115                     	;# 
    79  0116                     	;# 
    80  0117                     	;# 
    81  0118                     	;# 
    82  0119                     	;# 
    83  011A                     	;# 
    84  011B                     	;# 
    85  011D                     	;# 
    86  011D                     	;# 
    87  018C                     	;# 
    88  018E                     	;# 
    89  0191                     	;# 
    90  0191                     	;# 
    91  0192                     	;# 
    92  0193                     	;# 
    93  0193                     	;# 
    94  0193                     	;# 
    95  0194                     	;# 
    96  0195                     	;# 
    97  0196                     	;# 
    98  0199                     	;# 
    99  019A                     	;# 
   100  019B                     	;# 
   101  019B                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019C                     	;# 
   105  019C                     	;# 
   106  019D                     	;# 
   107  019E                     	;# 
   108  019F                     	;# 
   109  020C                     	;# 
   110  020E                     	;# 
   111  0211                     	;# 
   112  0211                     	;# 
   113  0212                     	;# 
   114  0212                     	;# 
   115  0213                     	;# 
   116  0213                     	;# 
   117  0214                     	;# 
   118  0214                     	;# 
   119  0215                     	;# 
   120  0215                     	;# 
   121  0215                     	;# 
   122  0216                     	;# 
   123  0216                     	;# 
   124  0217                     	;# 
   125  0217                     	;# 
   126  0291                     	;# 
   127  0291                     	;# 
   128  0292                     	;# 
   129  0293                     	;# 
   130  0294                     	;# 
   131  0295                     	;# 
   132  0295                     	;# 
   133  0296                     	;# 
   134  0391                     	;# 
   135  0392                     	;# 
   136  0393                     	;# 
   137  039A                     	;# 
   138  039C                     	;# 
   139  039D                     	;# 
   140  039E                     	;# 
   141  039F                     	;# 
   142  0FE4                     	;# 
   143  0FE5                     	;# 
   144  0FE6                     	;# 
   145  0FE7                     	;# 
   146  0FE8                     	;# 
   147  0FE9                     	;# 
   148  0FEA                     	;# 
   149  0FEB                     	;# 
   150  0FED                     	;# 
   151  0FEE                     	;# 
   152  0FEF                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000E                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  008C                     	;# 
   181  008E                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  010C                     	;# 
   196  010E                     	;# 
   197  0111                     	;# 
   198  0112                     	;# 
   199  0113                     	;# 
   200  0114                     	;# 
   201  0115                     	;# 
   202  0116                     	;# 
   203  0117                     	;# 
   204  0118                     	;# 
   205  0119                     	;# 
   206  011A                     	;# 
   207  011B                     	;# 
   208  011D                     	;# 
   209  011D                     	;# 
   210  018C                     	;# 
   211  018E                     	;# 
   212  0191                     	;# 
   213  0191                     	;# 
   214  0192                     	;# 
   215  0193                     	;# 
   216  0193                     	;# 
   217  0193                     	;# 
   218  0194                     	;# 
   219  0195                     	;# 
   220  0196                     	;# 
   221  0199                     	;# 
   222  019A                     	;# 
   223  019B                     	;# 
   224  019B                     	;# 
   225  019B                     	;# 
   226  019B                     	;# 
   227  019C                     	;# 
   228  019C                     	;# 
   229  019D                     	;# 
   230  019E                     	;# 
   231  019F                     	;# 
   232  020C                     	;# 
   233  020E                     	;# 
   234  0211                     	;# 
   235  0211                     	;# 
   236  0212                     	;# 
   237  0212                     	;# 
   238  0213                     	;# 
   239  0213                     	;# 
   240  0214                     	;# 
   241  0214                     	;# 
   242  0215                     	;# 
   243  0215                     	;# 
   244  0215                     	;# 
   245  0216                     	;# 
   246  0216                     	;# 
   247  0217                     	;# 
   248  0217                     	;# 
   249  0291                     	;# 
   250  0291                     	;# 
   251  0292                     	;# 
   252  0293                     	;# 
   253  0294                     	;# 
   254  0295                     	;# 
   255  0295                     	;# 
   256  0296                     	;# 
   257  0391                     	;# 
   258  0392                     	;# 
   259  0393                     	;# 
   260  039A                     	;# 
   261  039C                     	;# 
   262  039D                     	;# 
   263  039E                     	;# 
   264  039F                     	;# 
   265  0FE4                     	;# 
   266  0FE5                     	;# 
   267  0FE6                     	;# 
   268  0FE7                     	;# 
   269  0FE8                     	;# 
   270  0FE9                     	;# 
   271  0FEA                     	;# 
   272  0FEB                     	;# 
   273  0FED                     	;# 
   274  0FEE                     	;# 
   275  0FEF                     	;# 
   276  0000                     	;# 
   277  0001                     	;# 
   278  0002                     	;# 
   279  0003                     	;# 
   280  0004                     	;# 
   281  0005                     	;# 
   282  0006                     	;# 
   283  0007                     	;# 
   284  0008                     	;# 
   285  0009                     	;# 
   286  000A                     	;# 
   287  000B                     	;# 
   288  000C                     	;# 
   289  000E                     	;# 
   290  0011                     	;# 
   291  0012                     	;# 
   292  0015                     	;# 
   293  0016                     	;# 
   294  0016                     	;# 
   295  0017                     	;# 
   296  0018                     	;# 
   297  0019                     	;# 
   298  001A                     	;# 
   299  001B                     	;# 
   300  001C                     	;# 
   301  001E                     	;# 
   302  001F                     	;# 
   303  008C                     	;# 
   304  008E                     	;# 
   305  0091                     	;# 
   306  0092                     	;# 
   307  0095                     	;# 
   308  0096                     	;# 
   309  0097                     	;# 
   310  0098                     	;# 
   311  0099                     	;# 
   312  009A                     	;# 
   313  009B                     	;# 
   314  009B                     	;# 
   315  009C                     	;# 
   316  009D                     	;# 
   317  009E                     	;# 
   318  010C                     	;# 
   319  010E                     	;# 
   320  0111                     	;# 
   321  0112                     	;# 
   322  0113                     	;# 
   323  0114                     	;# 
   324  0115                     	;# 
   325  0116                     	;# 
   326  0117                     	;# 
   327  0118                     	;# 
   328  0119                     	;# 
   329  011A                     	;# 
   330  011B                     	;# 
   331  011D                     	;# 
   332  011D                     	;# 
   333  018C                     	;# 
   334  018E                     	;# 
   335  0191                     	;# 
   336  0191                     	;# 
   337  0192                     	;# 
   338  0193                     	;# 
   339  0193                     	;# 
   340  0193                     	;# 
   341  0194                     	;# 
   342  0195                     	;# 
   343  0196                     	;# 
   344  0199                     	;# 
   345  019A                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019B                     	;# 
   350  019C                     	;# 
   351  019C                     	;# 
   352  019D                     	;# 
   353  019E                     	;# 
   354  019F                     	;# 
   355  020C                     	;# 
   356  020E                     	;# 
   357  0211                     	;# 
   358  0211                     	;# 
   359  0212                     	;# 
   360  0212                     	;# 
   361  0213                     	;# 
   362  0213                     	;# 
   363  0214                     	;# 
   364  0214                     	;# 
   365  0215                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0216                     	;# 
   369  0216                     	;# 
   370  0217                     	;# 
   371  0217                     	;# 
   372  0291                     	;# 
   373  0291                     	;# 
   374  0292                     	;# 
   375  0293                     	;# 
   376  0294                     	;# 
   377  0295                     	;# 
   378  0295                     	;# 
   379  0296                     	;# 
   380  0391                     	;# 
   381  0392                     	;# 
   382  0393                     	;# 
   383  039A                     	;# 
   384  039C                     	;# 
   385  039D                     	;# 
   386  039E                     	;# 
   387  039F                     	;# 
   388  0FE4                     	;# 
   389  0FE5                     	;# 
   390  0FE6                     	;# 
   391  0FE7                     	;# 
   392  0FE8                     	;# 
   393  0FE9                     	;# 
   394  0FEA                     	;# 
   395  0FEB                     	;# 
   396  0FED                     	;# 
   397  0FEE                     	;# 
   398  0FEF                     	;# 
   399  0000                     	;# 
   400  0001                     	;# 
   401  0002                     	;# 
   402  0003                     	;# 
   403  0004                     	;# 
   404  0005                     	;# 
   405  0006                     	;# 
   406  0007                     	;# 
   407  0008                     	;# 
   408  0009                     	;# 
   409  000A                     	;# 
   410  000B                     	;# 
   411  000C                     	;# 
   412  000E                     	;# 
   413  0011                     	;# 
   414  0012                     	;# 
   415  0015                     	;# 
   416  0016                     	;# 
   417  0016                     	;# 
   418  0017                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001B                     	;# 
   423  001C                     	;# 
   424  001E                     	;# 
   425  001F                     	;# 
   426  008C                     	;# 
   427  008E                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  010C                     	;# 
   442  010E                     	;# 
   443  0111                     	;# 
   444  0112                     	;# 
   445  0113                     	;# 
   446  0114                     	;# 
   447  0115                     	;# 
   448  0116                     	;# 
   449  0117                     	;# 
   450  0118                     	;# 
   451  0119                     	;# 
   452  011A                     	;# 
   453  011B                     	;# 
   454  011D                     	;# 
   455  011D                     	;# 
   456  018C                     	;# 
   457  018E                     	;# 
   458  0191                     	;# 
   459  0191                     	;# 
   460  0192                     	;# 
   461  0193                     	;# 
   462  0193                     	;# 
   463  0193                     	;# 
   464  0194                     	;# 
   465  0195                     	;# 
   466  0196                     	;# 
   467  0199                     	;# 
   468  019A                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019C                     	;# 
   474  019C                     	;# 
   475  019D                     	;# 
   476  019E                     	;# 
   477  019F                     	;# 
   478  020C                     	;# 
   479  020E                     	;# 
   480  0211                     	;# 
   481  0211                     	;# 
   482  0212                     	;# 
   483  0212                     	;# 
   484  0213                     	;# 
   485  0213                     	;# 
   486  0214                     	;# 
   487  0214                     	;# 
   488  0215                     	;# 
   489  0215                     	;# 
   490  0215                     	;# 
   491  0216                     	;# 
   492  0216                     	;# 
   493  0217                     	;# 
   494  0217                     	;# 
   495  0291                     	;# 
   496  0291                     	;# 
   497  0292                     	;# 
   498  0293                     	;# 
   499  0294                     	;# 
   500  0295                     	;# 
   501  0295                     	;# 
   502  0296                     	;# 
   503  0391                     	;# 
   504  0392                     	;# 
   505  0393                     	;# 
   506  039A                     	;# 
   507  039C                     	;# 
   508  039D                     	;# 
   509  039E                     	;# 
   510  039F                     	;# 
   511  0FE4                     	;# 
   512  0FE5                     	;# 
   513  0FE6                     	;# 
   514  0FE7                     	;# 
   515  0FE8                     	;# 
   516  0FE9                     	;# 
   517  0FEA                     	;# 
   518  0FEB                     	;# 
   519  0FED                     	;# 
   520  0FEE                     	;# 
   521  0FEF                     	;# 
   522  0000                     	;# 
   523  0001                     	;# 
   524  0002                     	;# 
   525  0003                     	;# 
   526  0004                     	;# 
   527  0005                     	;# 
   528  0006                     	;# 
   529  0007                     	;# 
   530  0008                     	;# 
   531  0009                     	;# 
   532  000A                     	;# 
   533  000B                     	;# 
   534  000C                     	;# 
   535  000E                     	;# 
   536  0011                     	;# 
   537  0012                     	;# 
   538  0015                     	;# 
   539  0016                     	;# 
   540  0016                     	;# 
   541  0017                     	;# 
   542  0018                     	;# 
   543  0019                     	;# 
   544  001A                     	;# 
   545  001B                     	;# 
   546  001C                     	;# 
   547  001E                     	;# 
   548  001F                     	;# 
   549  008C                     	;# 
   550  008E                     	;# 
   551  0091                     	;# 
   552  0092                     	;# 
   553  0095                     	;# 
   554  0096                     	;# 
   555  0097                     	;# 
   556  0098                     	;# 
   557  0099                     	;# 
   558  009A                     	;# 
   559  009B                     	;# 
   560  009B                     	;# 
   561  009C                     	;# 
   562  009D                     	;# 
   563  009E                     	;# 
   564  010C                     	;# 
   565  010E                     	;# 
   566  0111                     	;# 
   567  0112                     	;# 
   568  0113                     	;# 
   569  0114                     	;# 
   570  0115                     	;# 
   571  0116                     	;# 
   572  0117                     	;# 
   573  0118                     	;# 
   574  0119                     	;# 
   575  011A                     	;# 
   576  011B                     	;# 
   577  011D                     	;# 
   578  011D                     	;# 
   579  018C                     	;# 
   580  018E                     	;# 
   581  0191                     	;# 
   582  0191                     	;# 
   583  0192                     	;# 
   584  0193                     	;# 
   585  0193                     	;# 
   586  0193                     	;# 
   587  0194                     	;# 
   588  0195                     	;# 
   589  0196                     	;# 
   590  0199                     	;# 
   591  019A                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019B                     	;# 
   595  019B                     	;# 
   596  019C                     	;# 
   597  019C                     	;# 
   598  019D                     	;# 
   599  019E                     	;# 
   600  019F                     	;# 
   601  020C                     	;# 
   602  020E                     	;# 
   603  0211                     	;# 
   604  0211                     	;# 
   605  0212                     	;# 
   606  0212                     	;# 
   607  0213                     	;# 
   608  0213                     	;# 
   609  0214                     	;# 
   610  0214                     	;# 
   611  0215                     	;# 
   612  0215                     	;# 
   613  0215                     	;# 
   614  0216                     	;# 
   615  0216                     	;# 
   616  0217                     	;# 
   617  0217                     	;# 
   618  0291                     	;# 
   619  0291                     	;# 
   620  0292                     	;# 
   621  0293                     	;# 
   622  0294                     	;# 
   623  0295                     	;# 
   624  0295                     	;# 
   625  0296                     	;# 
   626  0391                     	;# 
   627  0392                     	;# 
   628  0393                     	;# 
   629  039A                     	;# 
   630  039C                     	;# 
   631  039D                     	;# 
   632  039E                     	;# 
   633  039F                     	;# 
   634  0FE4                     	;# 
   635  0FE5                     	;# 
   636  0FE6                     	;# 
   637  0FE7                     	;# 
   638  0FE8                     	;# 
   639  0FE9                     	;# 
   640  0FEA                     	;# 
   641  0FEB                     	;# 
   642  0FED                     	;# 
   643  0FEE                     	;# 
   644  0FEF                     	;# 
   645  0000                     	;# 
   646  0001                     	;# 
   647  0002                     	;# 
   648  0003                     	;# 
   649  0004                     	;# 
   650  0005                     	;# 
   651  0006                     	;# 
   652  0007                     	;# 
   653  0008                     	;# 
   654  0009                     	;# 
   655  000A                     	;# 
   656  000B                     	;# 
   657  000C                     	;# 
   658  000E                     	;# 
   659  0011                     	;# 
   660  0012                     	;# 
   661  0015                     	;# 
   662  0016                     	;# 
   663  0016                     	;# 
   664  0017                     	;# 
   665  0018                     	;# 
   666  0019                     	;# 
   667  001A                     	;# 
   668  001B                     	;# 
   669  001C                     	;# 
   670  001E                     	;# 
   671  001F                     	;# 
   672  008C                     	;# 
   673  008E                     	;# 
   674  0091                     	;# 
   675  0092                     	;# 
   676  0095                     	;# 
   677  0096                     	;# 
   678  0097                     	;# 
   679  0098                     	;# 
   680  0099                     	;# 
   681  009A                     	;# 
   682  009B                     	;# 
   683  009B                     	;# 
   684  009C                     	;# 
   685  009D                     	;# 
   686  009E                     	;# 
   687  010C                     	;# 
   688  010E                     	;# 
   689  0111                     	;# 
   690  0112                     	;# 
   691  0113                     	;# 
   692  0114                     	;# 
   693  0115                     	;# 
   694  0116                     	;# 
   695  0117                     	;# 
   696  0118                     	;# 
   697  0119                     	;# 
   698  011A                     	;# 
   699  011B                     	;# 
   700  011D                     	;# 
   701  011D                     	;# 
   702  018C                     	;# 
   703  018E                     	;# 
   704  0191                     	;# 
   705  0191                     	;# 
   706  0192                     	;# 
   707  0193                     	;# 
   708  0193                     	;# 
   709  0193                     	;# 
   710  0194                     	;# 
   711  0195                     	;# 
   712  0196                     	;# 
   713  0199                     	;# 
   714  019A                     	;# 
   715  019B                     	;# 
   716  019B                     	;# 
   717  019B                     	;# 
   718  019B                     	;# 
   719  019C                     	;# 
   720  019C                     	;# 
   721  019D                     	;# 
   722  019E                     	;# 
   723  019F                     	;# 
   724  020C                     	;# 
   725  020E                     	;# 
   726  0211                     	;# 
   727  0211                     	;# 
   728  0212                     	;# 
   729  0212                     	;# 
   730  0213                     	;# 
   731  0213                     	;# 
   732  0214                     	;# 
   733  0214                     	;# 
   734  0215                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0216                     	;# 
   738  0216                     	;# 
   739  0217                     	;# 
   740  0217                     	;# 
   741  0291                     	;# 
   742  0291                     	;# 
   743  0292                     	;# 
   744  0293                     	;# 
   745  0294                     	;# 
   746  0295                     	;# 
   747  0295                     	;# 
   748  0296                     	;# 
   749  0391                     	;# 
   750  0392                     	;# 
   751  0393                     	;# 
   752  039A                     	;# 
   753  039C                     	;# 
   754  039D                     	;# 
   755  039E                     	;# 
   756  039F                     	;# 
   757  0FE4                     	;# 
   758  0FE5                     	;# 
   759  0FE6                     	;# 
   760  0FE7                     	;# 
   761  0FE8                     	;# 
   762  0FE9                     	;# 
   763  0FEA                     	;# 
   764  0FEB                     	;# 
   765  0FED                     	;# 
   766  0FEE                     	;# 
   767  0FEF                     	;# 
   768  0000                     	;# 
   769  0001                     	;# 
   770  0002                     	;# 
   771  0003                     	;# 
   772  0004                     	;# 
   773  0005                     	;# 
   774  0006                     	;# 
   775  0007                     	;# 
   776  0008                     	;# 
   777  0009                     	;# 
   778  000A                     	;# 
   779  000B                     	;# 
   780  000C                     	;# 
   781  000E                     	;# 
   782  0011                     	;# 
   783  0012                     	;# 
   784  0015                     	;# 
   785  0016                     	;# 
   786  0016                     	;# 
   787  0017                     	;# 
   788  0018                     	;# 
   789  0019                     	;# 
   790  001A                     	;# 
   791  001B                     	;# 
   792  001C                     	;# 
   793  001E                     	;# 
   794  001F                     	;# 
   795  008C                     	;# 
   796  008E                     	;# 
   797  0091                     	;# 
   798  0092                     	;# 
   799  0095                     	;# 
   800  0096                     	;# 
   801  0097                     	;# 
   802  0098                     	;# 
   803  0099                     	;# 
   804  009A                     	;# 
   805  009B                     	;# 
   806  009B                     	;# 
   807  009C                     	;# 
   808  009D                     	;# 
   809  009E                     	;# 
   810  010C                     	;# 
   811  010E                     	;# 
   812  0111                     	;# 
   813  0112                     	;# 
   814  0113                     	;# 
   815  0114                     	;# 
   816  0115                     	;# 
   817  0116                     	;# 
   818  0117                     	;# 
   819  0118                     	;# 
   820  0119                     	;# 
   821  011A                     	;# 
   822  011B                     	;# 
   823  011D                     	;# 
   824  011D                     	;# 
   825  018C                     	;# 
   826  018E                     	;# 
   827  0191                     	;# 
   828  0191                     	;# 
   829  0192                     	;# 
   830  0193                     	;# 
   831  0193                     	;# 
   832  0193                     	;# 
   833  0194                     	;# 
   834  0195                     	;# 
   835  0196                     	;# 
   836  0199                     	;# 
   837  019A                     	;# 
   838  019B                     	;# 
   839  019B                     	;# 
   840  019B                     	;# 
   841  019B                     	;# 
   842  019C                     	;# 
   843  019C                     	;# 
   844  019D                     	;# 
   845  019E                     	;# 
   846  019F                     	;# 
   847  020C                     	;# 
   848  020E                     	;# 
   849  0211                     	;# 
   850  0211                     	;# 
   851  0212                     	;# 
   852  0212                     	;# 
   853  0213                     	;# 
   854  0213                     	;# 
   855  0214                     	;# 
   856  0214                     	;# 
   857  0215                     	;# 
   858  0215                     	;# 
   859  0215                     	;# 
   860  0216                     	;# 
   861  0216                     	;# 
   862  0217                     	;# 
   863  0217                     	;# 
   864  0291                     	;# 
   865  0291                     	;# 
   866  0292                     	;# 
   867  0293                     	;# 
   868  0294                     	;# 
   869  0295                     	;# 
   870  0295                     	;# 
   871  0296                     	;# 
   872  0391                     	;# 
   873  0392                     	;# 
   874  0393                     	;# 
   875  039A                     	;# 
   876  039C                     	;# 
   877  039D                     	;# 
   878  039E                     	;# 
   879  039F                     	;# 
   880  0FE4                     	;# 
   881  0FE5                     	;# 
   882  0FE6                     	;# 
   883  0FE7                     	;# 
   884  0FE8                     	;# 
   885  0FE9                     	;# 
   886  0FEA                     	;# 
   887  0FEB                     	;# 
   888  0FED                     	;# 
   889  0FEE                     	;# 
   890  0FEF                     	;# 
   891  0000                     	;# 
   892  0001                     	;# 
   893  0002                     	;# 
   894  0003                     	;# 
   895  0004                     	;# 
   896  0005                     	;# 
   897  0006                     	;# 
   898  0007                     	;# 
   899  0008                     	;# 
   900  0009                     	;# 
   901  000A                     	;# 
   902  000B                     	;# 
   903  000C                     	;# 
   904  000E                     	;# 
   905  0011                     	;# 
   906  0012                     	;# 
   907  0015                     	;# 
   908  0016                     	;# 
   909  0016                     	;# 
   910  0017                     	;# 
   911  0018                     	;# 
   912  0019                     	;# 
   913  001A                     	;# 
   914  001B                     	;# 
   915  001C                     	;# 
   916  001E                     	;# 
   917  001F                     	;# 
   918  008C                     	;# 
   919  008E                     	;# 
   920  0091                     	;# 
   921  0092                     	;# 
   922  0095                     	;# 
   923  0096                     	;# 
   924  0097                     	;# 
   925  0098                     	;# 
   926  0099                     	;# 
   927  009A                     	;# 
   928  009B                     	;# 
   929  009B                     	;# 
   930  009C                     	;# 
   931  009D                     	;# 
   932  009E                     	;# 
   933  010C                     	;# 
   934  010E                     	;# 
   935  0111                     	;# 
   936  0112                     	;# 
   937  0113                     	;# 
   938  0114                     	;# 
   939  0115                     	;# 
   940  0116                     	;# 
   941  0117                     	;# 
   942  0118                     	;# 
   943  0119                     	;# 
   944  011A                     	;# 
   945  011B                     	;# 
   946  011D                     	;# 
   947  011D                     	;# 
   948  018C                     	;# 
   949  018E                     	;# 
   950  0191                     	;# 
   951  0191                     	;# 
   952  0192                     	;# 
   953  0193                     	;# 
   954  0193                     	;# 
   955  0193                     	;# 
   956  0194                     	;# 
   957  0195                     	;# 
   958  0196                     	;# 
   959  0199                     	;# 
   960  019A                     	;# 
   961  019B                     	;# 
   962  019B                     	;# 
   963  019B                     	;# 
   964  019B                     	;# 
   965  019C                     	;# 
   966  019C                     	;# 
   967  019D                     	;# 
   968  019E                     	;# 
   969  019F                     	;# 
   970  020C                     	;# 
   971  020E                     	;# 
   972  0211                     	;# 
   973  0211                     	;# 
   974  0212                     	;# 
   975  0212                     	;# 
   976  0213                     	;# 
   977  0213                     	;# 
   978  0214                     	;# 
   979  0214                     	;# 
   980  0215                     	;# 
   981  0215                     	;# 
   982  0215                     	;# 
   983  0216                     	;# 
   984  0216                     	;# 
   985  0217                     	;# 
   986  0217                     	;# 
   987  0291                     	;# 
   988  0291                     	;# 
   989  0292                     	;# 
   990  0293                     	;# 
   991  0294                     	;# 
   992  0295                     	;# 
   993  0295                     	;# 
   994  0296                     	;# 
   995  0391                     	;# 
   996  0392                     	;# 
   997  0393                     	;# 
   998  039A                     	;# 
   999  039C                     	;# 
  1000  039D                     	;# 
  1001  039E                     	;# 
  1002  039F                     	;# 
  1003  0FE4                     	;# 
  1004  0FE5                     	;# 
  1005  0FE6                     	;# 
  1006  0FE7                     	;# 
  1007  0FE8                     	;# 
  1008  0FE9                     	;# 
  1009  0FEA                     	;# 
  1010  0FEB                     	;# 
  1011  0FED                     	;# 
  1012  0FEE                     	;# 
  1013  0FEF                     	;# 
  1014  000B                     _INTCONbits	set	11
  1015  0011                     _PIR1bits	set	17
  1016  001B                     _PR2	set	27
  1017  001C                     _T2CON	set	28
  1018  001C                     _T2CONbits	set	28
  1019  001A                     _TMR2	set	26
  1020  0095                     _OPTION_REGbits	set	149
  1021  0099                     _OSCCON	set	153
  1022  009A                     _OSCSTAT	set	154
  1023  0098                     _OSCTUNE	set	152
  1024  0091                     _PIE1bits	set	145
  1025  008C                     _TRISA	set	140
  1026  008E                     _TRISC	set	142
  1027  04D6                     _PLLR	set	1238
  1028  011D                     _APFCON	set	285
  1029  010C                     _LATA	set	268
  1030  010E                     _LATC	set	270
  1031  0865                     _LATA5	set	2149
  1032  018C                     _ANSELA	set	396
  1033  018E                     _ANSELC	set	398
  1034  019F                     _BAUDCON	set	415
  1035  0192                     _EEADRH	set	402
  1036  0191                     _EEADRL	set	401
  1037  0195                     _EECON1bits	set	405
  1038  0196                     _EECON2	set	406
  1039  0194                     _EEDATH	set	404
  1040  0193                     _EEDATL	set	403
  1041  0199                     _RCREG	set	409
  1042  019D                     _RCSTA	set	413
  1043  019D                     _RCSTAbits	set	413
  1044  019C                     _SPBRGH	set	412
  1045  019B                     _SPBRGL	set	411
  1046  019A                     _TXREG	set	410
  1047  019E                     _TXSTA	set	414
  1048  020C                     _WPUA	set	524
  1049  020E                     _WPUC	set	526
  1050  0293                     _CCP1CON	set	659
  1051  0292                     _CCPR1H	set	658
  1052  0291                     _CCPR1L	set	657
  1053  0295                     _ECCP1AS	set	661
  1054  0296                     _PSTR1CON	set	662
  1055  0294                     _PWM1CON	set	660
  1056                           
  1057                           	psect	stringtext
  1058  002C                     __pstringtext:	
  1059  002C                     STR_1:	
  1060  002C  3424               	retlw	36	;'$'
  1061  002D  3450               	retlw	80	;'P'
  1062  002E  344D               	retlw	77	;'M'
  1063  002F  3454               	retlw	84	;'T'
  1064  0030  344B               	retlw	75	;'K'
  1065  0031  3433               	retlw	51	;'3'
  1066  0032  3431               	retlw	49	;'1'
  1067  0033  3434               	retlw	52	;'4'
  1068  0034  342C               	retlw	44	;','
  1069  0035  3430               	retlw	48	;'0'
  1070  0036  342C               	retlw	44	;','
  1071  0037  3430               	retlw	48	;'0'
  1072  0038  342C               	retlw	44	;','
  1073  0039  3431               	retlw	49	;'1'
  1074  003A  342C               	retlw	44	;','
  1075  003B  3430               	retlw	48	;'0'
  1076  003C  342C               	retlw	44	;','
  1077  003D  3430               	retlw	48	;'0'
  1078  003E  342C               	retlw	44	;','
  1079  003F  3430               	retlw	48	;'0'
  1080  0040  342C               	retlw	44	;','
  1081  0041  3430               	retlw	48	;'0'
  1082  0042  342C               	retlw	44	;','
  1083  0043  3430               	retlw	48	;'0'
  1084  0044  342C               	retlw	44	;','
  1085  0045  3430               	retlw	48	;'0'
  1086  0046  342C               	retlw	44	;','
  1087  0047  3430               	retlw	48	;'0'
  1088  0048  342C               	retlw	44	;','
  1089  0049  3430               	retlw	48	;'0'
  1090  004A  342C               	retlw	44	;','
  1091  004B  3430               	retlw	48	;'0'
  1092  004C  342C               	retlw	44	;','
  1093  004D  3430               	retlw	48	;'0'
  1094  004E  342C               	retlw	44	;','
  1095  004F  3430               	retlw	48	;'0'
  1096  0050  342C               	retlw	44	;','
  1097  0051  3430               	retlw	48	;'0'
  1098  0052  342C               	retlw	44	;','
  1099  0053  3430               	retlw	48	;'0'
  1100  0054  342C               	retlw	44	;','
  1101  0055  3430               	retlw	48	;'0'
  1102  0056  342C               	retlw	44	;','
  1103  0057  3430               	retlw	48	;'0'
  1104  0058  342C               	retlw	44	;','
  1105  0059  3430               	retlw	48	;'0'
  1106  005A  342A               	retlw	42	;'*'
  1107  005B  3432               	retlw	50	;'2'
  1108  005C  3439               	retlw	57	;'9'
  1109  005D  340D               	retlw	13
  1110  005E  340A               	retlw	10
  1111  005F  3400               	retlw	0
  1112  0060                     STR_2:	
  1113  0060  3424               	retlw	36	;'$'
  1114  0061  3450               	retlw	80	;'P'
  1115  0062  344D               	retlw	77	;'M'
  1116  0063  3454               	retlw	84	;'T'
  1117  0064  344B               	retlw	75	;'K'
  1118  0065  3432               	retlw	50	;'2'
  1119  0066  3432               	retlw	50	;'2'
  1120  0067  3430               	retlw	48	;'0'
  1121  0068  342C               	retlw	44	;','
  1122  0069  3431               	retlw	49	;'1'
  1123  006A  3430               	retlw	48	;'0'
  1124  006B  3430               	retlw	48	;'0'
  1125  006C  342A               	retlw	42	;'*'
  1126  006D  3432               	retlw	50	;'2'
  1127  006E  3446               	retlw	70	;'F'
  1128  006F  340D               	retlw	13
  1129  0070  340A               	retlw	10
  1130  0071  3400               	retlw	0
  1131                           
  1132                           ; #config settings
  1133  0000                     
  1134                           	psect	cinit
  1135  0021                     start_initialization:	
  1136  0021                     __initialization:	
  1137                           
  1138                           ; Clear objects allocated to COMMON
  1139  0021  01FA               	clrf	__pbssCOMMON& (0+127)
  1140  0022  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1141                           
  1142                           ; Clear objects allocated to BANK0
  1143  0023  3020               	movlw	low __pbssBANK0
  1144  0024  0084               	movwf	4
  1145  0025  3000               	movlw	high __pbssBANK0
  1146  0026  0085               	movwf	5
  1147  0027  3018               	movlw	24
  1148  0028  21D8               	fcall	clear_ram0
  1149  0029                     end_of_initialization:	
  1150                           ;End of C runtime variable initialization code
  1151                           
  1152  0029                     __end_of__initialization:	
  1153  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1154  002A  0020               	movlb	0
  1155  002B  29AB               	ljmp	_main	;jump to C main() function
  1156                           
  1157                           	psect	bssCOMMON
  1158  007A                     __pbssCOMMON:	
  1159  007A                     _eusartRxCount:	
  1160  007A                     	ds	1
  1161  007B                     _eusartTxBufferRemaining:	
  1162  007B                     	ds	1
  1163                           
  1164                           	psect	bssBANK0
  1165  0020                     __pbssBANK0:	
  1166  0020                     _eusartRxBuffer:	
  1167  0020                     	ds	8
  1168  0028                     _eusartTxBuffer:	
  1169  0028                     	ds	8
  1170  0030                     _speed:	
  1171  0030                     	ds	3
  1172  0033                     _eusartRxHead:	
  1173  0033                     	ds	1
  1174  0034                     _eusartRxTail:	
  1175  0034                     	ds	1
  1176  0035                     _eusartTxHead:	
  1177  0035                     	ds	1
  1178  0036                     _eusartTxTail:	
  1179  0036                     	ds	1
  1180  0037                     _speed_units:	
  1181  0037                     	ds	1
  1182                           
  1183                           	psect	clrtext
  1184  01D8                     clear_ram0:	
  1185                           ;	Called with FSR0 containing the base address, and
  1186                           ;	WREG with the size to clear
  1187                           
  1188  01D8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1189  01D9                     clrloop0:	
  1190  01D9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1191  01DA  3101               	addfsr 0,1
  1192  01DB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1193  01DC  29D9               	goto	clrloop0	;have we reached the end yet?
  1194  01DD  3400               	retlw	0	;all done for this memory range, return
  1195                           
  1196                           	psect	cstackCOMMON
  1197  0070                     __pcstackCOMMON:	
  1198  0070                     ?_TMR2_StartTimer:	
  1199  0070                     ?_OSCILLATOR_Initialize:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0070                     ?_TMR2_Initialize:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0070                     ?_EUSART_Initialize:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0070                     ?_EUSART_Read:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0070                     ?_EUSART_Write:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214  0070                     ?_putch:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217  0070                     ?_EUSART_Transmit_ISR:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  0070                     ??_EUSART_Transmit_ISR:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223  0070                     ?_EUSART_Receive_ISR:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226  0070                     ??_EUSART_Receive_ISR:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0070                     ?_EPWM_Initialize:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0070                     ?_PIN_MANAGER_Initialize:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235  0070                     ?_SYSTEM_Initialize:	
  1236                           ; 1 bytes @ 0x0
  1237                           
  1238  0070                     ?_INTERRUPT_InterruptManager:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241  0070                     ?_GPS_Initialize:	
  1242                           ; 1 bytes @ 0x0
  1243                           
  1244  0070                     ?_GPS_read_speed:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247  0070                     ?_main:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250                           
  1251                           ; 1 bytes @ 0x0
  1252  0070                     	ds	1
  1253  0071                     ??_INTERRUPT_InterruptManager:	
  1254                           
  1255                           ; 1 bytes @ 0x1
  1256  0071                     	ds	1
  1257  0072                     ??_TMR2_StartTimer:	
  1258  0072                     ??_OSCILLATOR_Initialize:	
  1259                           ; 1 bytes @ 0x2
  1260                           
  1261  0072                     ??_TMR2_Initialize:	
  1262                           ; 1 bytes @ 0x2
  1263                           
  1264  0072                     ??_EUSART_Initialize:	
  1265                           ; 1 bytes @ 0x2
  1266                           
  1267  0072                     ??_EUSART_Read:	
  1268                           ; 1 bytes @ 0x2
  1269                           
  1270  0072                     ??_EUSART_Write:	
  1271                           ; 1 bytes @ 0x2
  1272                           
  1273  0072                     ??_EPWM_Initialize:	
  1274                           ; 1 bytes @ 0x2
  1275                           
  1276  0072                     ?_EPWM_LoadDutyValue:	
  1277                           ; 1 bytes @ 0x2
  1278                           
  1279  0072                     ??_PIN_MANAGER_Initialize:	
  1280                           ; 1 bytes @ 0x2
  1281                           
  1282  0072                     EPWM_LoadDutyValue@dutyValue:	
  1283                           ; 1 bytes @ 0x2
  1284                           
  1285                           
  1286                           ; 2 bytes @ 0x2
  1287  0072                     	ds	1
  1288  0073                     ??_SYSTEM_Initialize:	
  1289  0073                     EUSART_Read@readValue:	
  1290                           ; 1 bytes @ 0x3
  1291                           
  1292  0073                     EUSART_Write@txData:	
  1293                           ; 1 bytes @ 0x3
  1294                           
  1295                           
  1296                           ; 1 bytes @ 0x3
  1297  0073                     	ds	1
  1298  0074                     ??_putch:	
  1299  0074                     ??_EPWM_LoadDutyValue:	
  1300                           ; 1 bytes @ 0x4
  1301                           
  1302  0074                     ??_GPS_read_speed:	
  1303                           ; 1 bytes @ 0x4
  1304                           
  1305  0074                     putch@txData:	
  1306                           ; 1 bytes @ 0x4
  1307                           
  1308                           
  1309                           ; 1 bytes @ 0x4
  1310  0074                     	ds	1
  1311  0075                     ?_printf:	
  1312  0075                     printf@f:	
  1313                           ; 2 bytes @ 0x5
  1314                           
  1315                           
  1316                           ; 2 bytes @ 0x5
  1317  0075                     	ds	1
  1318  0076                     GPS_read_speed@m_char:	
  1319                           
  1320                           ; 1 bytes @ 0x6
  1321  0076                     	ds	1
  1322  0077                     ??_printf:	
  1323  0077                     GPS_read_speed@done:	
  1324                           ; 1 bytes @ 0x7
  1325                           
  1326                           
  1327                           ; 1 bytes @ 0x7
  1328  0077                     	ds	3
  1329  007A                     ??_main:	
  1330                           
  1331                           	psect	cstackBANK0
  1332  0038                     __pcstackBANK0:	
  1333                           ; 1 bytes @ 0xA
  1334                           
  1335  0038                     printf@ap:	
  1336                           
  1337                           ; 1 bytes @ 0x0
  1338  0038                     	ds	1
  1339  0039                     printf@c:	
  1340                           
  1341                           ; 1 bytes @ 0x1
  1342  0039                     	ds	1
  1343  003A                     ??_GPS_Initialize:	
  1344                           
  1345                           ; 1 bytes @ 0x2
  1346  003A                     	ds	3
  1347  003D                     GPS_Initialize@tmp:	
  1348                           
  1349                           ; 1 bytes @ 0x5
  1350  003D                     	ds	1
  1351  003E                     main@test_value:	
  1352                           
  1353                           ; 2 bytes @ 0x6
  1354  003E                     	ds	2
  1355                           
  1356                           	psect	maintext
  1357  01AB                     __pmaintext:	
  1358 ;;
  1359 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1360 ;;
  1361 ;; *************** function _main *****************
  1362 ;; Defined at:
  1363 ;;		line 100 in file "main.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;		None
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  test_value      2    6[BANK0 ] unsigned int 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : B1F/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMMON   BANK0   BANK1
  1377 ;;      Params:         0       0       0
  1378 ;;      Locals:         0       2       0
  1379 ;;      Temps:          0       0       0
  1380 ;;      Totals:         0       2       0
  1381 ;;Total ram usage:        2 bytes
  1382 ;; Hardware stack levels required when called:    6
  1383 ;; This function calls:
  1384 ;;		_EPWM_LoadDutyValue
  1385 ;;		_GPS_Initialize
  1386 ;;		_GPS_read_speed
  1387 ;;		_SYSTEM_Initialize
  1388 ;;		_TMR2_StartTimer
  1389 ;; This function is called by:
  1390 ;;		Startup code after reset
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           
  1395                           ;psect for function _main
  1396  01AB                     _main:	
  1397                           
  1398                           ;main.c: 103: SYSTEM_Initialize();
  1399                           
  1400                           ;incstack = 0
  1401                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1402  01AB  21DE               	fcall	_SYSTEM_Initialize
  1403                           
  1404                           ;main.c: 109: (INTCONbits.GIE = 1);
  1405  01AC  178B               	bsf	11,7	;volatile
  1406                           
  1407                           ;main.c: 112: (INTCONbits.PEIE = 1);
  1408  01AD  170B               	bsf	11,6	;volatile
  1409                           
  1410                           ;main.c: 164: uint16_t test_value = 0x00FF;
  1411  01AE  30FF               	movlw	255
  1412  01AF  0020               	movlb	0	; select bank0
  1413  01B0  00BE               	movwf	main@test_value
  1414  01B1  3000               	movlw	0
  1415  01B2  00BF               	movwf	main@test_value+1
  1416                           
  1417                           ;main.c: 165: EPWM_LoadDutyValue(test_value);
  1418  01B3  083F               	movf	main@test_value+1,w
  1419  01B4  00F3               	movwf	EPWM_LoadDutyValue@dutyValue+1
  1420  01B5  083E               	movf	main@test_value,w
  1421  01B6  00F2               	movwf	EPWM_LoadDutyValue@dutyValue
  1422  01B7  217E               	fcall	_EPWM_LoadDutyValue
  1423                           
  1424                           ;main.c: 167: TMR2_StartTimer();
  1425  01B8  21E8               	fcall	_TMR2_StartTimer
  1426                           
  1427                           ;main.c: 173: GPS_Initialize();
  1428  01B9  2072               	fcall	_GPS_Initialize
  1429  01BA                     l1393:	
  1430                           ;main.c: 175: while (1)
  1431                           
  1432                           
  1433                           ;main.c: 176: {
  1434                           ;main.c: 177: GPS_read_speed();
  1435  01BA  20F3               	fcall	_GPS_read_speed
  1436  01BB  29BA               	goto	l1393
  1437  01BC                     __end_of_main:	
  1438                           
  1439                           	psect	text1
  1440  01DE                     __ptext1:	
  1441 ;; *************** function _SYSTEM_Initialize *****************
  1442 ;; Defined at:
  1443 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0, pclath, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1
  1457 ;;      Params:         0       0       0
  1458 ;;      Locals:         0       0       0
  1459 ;;      Temps:          0       0       0
  1460 ;;      Totals:         0       0       0
  1461 ;;Total ram usage:        0 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    4
  1464 ;; This function calls:
  1465 ;;		_EPWM_Initialize
  1466 ;;		_EUSART_Initialize
  1467 ;;		_OSCILLATOR_Initialize
  1468 ;;		_PIN_MANAGER_Initialize
  1469 ;;		_TMR2_Initialize
  1470 ;; This function is called by:
  1471 ;;		_main
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           
  1476                           ;psect for function _SYSTEM_Initialize
  1477  01DE                     _SYSTEM_Initialize:	
  1478                           
  1479                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  1480                           
  1481                           ;incstack = 0
  1482                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1483  01DE  2195               	fcall	_PIN_MANAGER_Initialize
  1484                           
  1485                           ;mcc.c: 73: OSCILLATOR_Initialize();
  1486  01DF  21D0               	fcall	_OSCILLATOR_Initialize
  1487                           
  1488                           ;mcc.c: 74: EPWM_Initialize();
  1489  01E0  21BC               	fcall	_EPWM_Initialize
  1490                           
  1491                           ;mcc.c: 75: TMR2_Initialize();
  1492  01E1  21C8               	fcall	_TMR2_Initialize
  1493                           
  1494                           ;mcc.c: 76: EUSART_Initialize();
  1495  01E2  212D               	fcall	_EUSART_Initialize
  1496  01E3  0008               	return
  1497  01E4                     __end_of_SYSTEM_Initialize:	
  1498                           
  1499                           	psect	text2
  1500  01C8                     __ptext2:	
  1501 ;; *************** function _TMR2_Initialize *****************
  1502 ;; Defined at:
  1503 ;;		line 57 in file "mcc_generated_files/tmr2.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, pclath, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1
  1517 ;;      Params:         0       0       0
  1518 ;;      Locals:         0       0       0
  1519 ;;      Temps:          0       0       0
  1520 ;;      Totals:         0       0       0
  1521 ;;Total ram usage:        0 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    3
  1524 ;; This function calls:
  1525 ;;		_TMR2_StartTimer
  1526 ;; This function is called by:
  1527 ;;		_SYSTEM_Initialize
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           
  1532                           ;psect for function _TMR2_Initialize
  1533  01C8                     _TMR2_Initialize:	
  1534                           
  1535                           ;tmr2.c: 62: T2CON = 0x00;
  1536                           
  1537                           ;incstack = 0
  1538                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1539  01C8  0020               	movlb	0	; select bank0
  1540  01C9  019C               	clrf	28	;volatile
  1541                           
  1542                           ;tmr2.c: 65: PR2 = 0xFF;
  1543  01CA  30FF               	movlw	255
  1544  01CB  009B               	movwf	27	;volatile
  1545                           
  1546                           ;tmr2.c: 68: TMR2 = 0x00;
  1547  01CC  019A               	clrf	26	;volatile
  1548                           
  1549                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
  1550  01CD  1091               	bcf	17,1	;volatile
  1551                           
  1552                           ;tmr2.c: 74: TMR2_StartTimer();
  1553  01CE  21E8               	fcall	_TMR2_StartTimer
  1554  01CF  0008               	return
  1555  01D0                     __end_of_TMR2_Initialize:	
  1556                           
  1557                           	psect	text3
  1558  01E8                     __ptext3:	
  1559 ;; *************** function _TMR2_StartTimer *****************
  1560 ;; Defined at:
  1561 ;;		line 77 in file "mcc_generated_files/tmr2.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		None
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1
  1575 ;;      Params:         0       0       0
  1576 ;;      Locals:         0       0       0
  1577 ;;      Temps:          0       0       0
  1578 ;;      Totals:         0       0       0
  1579 ;;Total ram usage:        0 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    2
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_TMR2_Initialize
  1586 ;;		_main
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           
  1591                           ;psect for function _TMR2_StartTimer
  1592  01E8                     _TMR2_StartTimer:	
  1593                           
  1594                           ;tmr2.c: 80: T2CONbits.TMR2ON = 1;
  1595                           
  1596                           ;incstack = 0
  1597                           ; Regs used in _TMR2_StartTimer: []
  1598  01E8  0020               	movlb	0	; select bank0
  1599  01E9  151C               	bsf	28,2	;volatile
  1600  01EA  0008               	return
  1601  01EB                     __end_of_TMR2_StartTimer:	
  1602                           
  1603                           	psect	text4
  1604  0195                     __ptext4:	
  1605 ;; *************** function _PIN_MANAGER_Initialize *****************
  1606 ;; Defined at:
  1607 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1
  1621 ;;      Params:         0       0       0
  1622 ;;      Locals:         0       0       0
  1623 ;;      Temps:          0       0       0
  1624 ;;      Totals:         0       0       0
  1625 ;;Total ram usage:        0 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:    2
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_SYSTEM_Initialize
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           
  1636                           ;psect for function _PIN_MANAGER_Initialize
  1637  0195                     _PIN_MANAGER_Initialize:	
  1638                           
  1639                           ;pin_manager.c: 51: LATA = 0x0;
  1640                           
  1641                           ;incstack = 0
  1642                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1643  0195  0022               	movlb	2	; select bank2
  1644  0196  018C               	clrf	12	;volatile
  1645                           
  1646                           ;pin_manager.c: 52: LATC = 0x0;
  1647  0197  018E               	clrf	14	;volatile
  1648                           
  1649                           ;pin_manager.c: 53: ANSELA = 0x17;
  1650  0198  3017               	movlw	23
  1651  0199  0023               	movlb	3	; select bank3
  1652  019A  008C               	movwf	12	;volatile
  1653                           
  1654                           ;pin_manager.c: 54: ANSELC = 0xF;
  1655  019B  300F               	movlw	15
  1656  019C  008E               	movwf	14	;volatile
  1657                           
  1658                           ;pin_manager.c: 55: WPUA = 0x3F;
  1659  019D  303F               	movlw	63
  1660  019E  0024               	movlb	4	; select bank4
  1661  019F  008C               	movwf	12	;volatile
  1662                           
  1663                           ;pin_manager.c: 56: WPUC = 0x3F;
  1664  01A0  303F               	movlw	63
  1665  01A1  008E               	movwf	14	;volatile
  1666                           
  1667                           ;pin_manager.c: 57: TRISC = 0x37;
  1668  01A2  3037               	movlw	55
  1669  01A3  0021               	movlb	1	; select bank1
  1670  01A4  008E               	movwf	14	;volatile
  1671                           
  1672                           ;pin_manager.c: 58: TRISA = 0x1F;
  1673  01A5  301F               	movlw	31
  1674  01A6  008C               	movwf	12	;volatile
  1675                           
  1676                           ;pin_manager.c: 60: OPTION_REGbits.nWPUEN = 0x0;
  1677  01A7  1395               	bcf	21,7	;volatile
  1678                           
  1679                           ;pin_manager.c: 61: APFCON = 0x00;
  1680  01A8  0022               	movlb	2	; select bank2
  1681  01A9  019D               	clrf	29	;volatile
  1682  01AA  0008               	return
  1683  01AB                     __end_of_PIN_MANAGER_Initialize:	
  1684                           
  1685                           	psect	text5
  1686  01D0                     __ptext5:	
  1687 ;; *************** function _OSCILLATOR_Initialize *****************
  1688 ;; Defined at:
  1689 ;;		line 79 in file "mcc_generated_files/mcc.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;		None
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		wreg, status,2
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMMON   BANK0   BANK1
  1703 ;;      Params:         0       0       0
  1704 ;;      Locals:         0       0       0
  1705 ;;      Temps:          0       0       0
  1706 ;;      Totals:         0       0       0
  1707 ;;Total ram usage:        0 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:    2
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_SYSTEM_Initialize
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function _OSCILLATOR_Initialize
  1719  01D0                     _OSCILLATOR_Initialize:	
  1720                           
  1721                           ;mcc.c: 82: OSCCON = 0x70;
  1722                           
  1723                           ;incstack = 0
  1724                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1725  01D0  3070               	movlw	112
  1726  01D1  0021               	movlb	1	; select bank1
  1727  01D2  0099               	movwf	25	;volatile
  1728                           
  1729                           ;mcc.c: 84: OSCSTAT = 0x00;
  1730  01D3  019A               	clrf	26	;volatile
  1731                           
  1732                           ;mcc.c: 86: OSCTUNE = 0x00;
  1733  01D4  0198               	clrf	24	;volatile
  1734  01D5                     l216:	
  1735                           ;mcc.c: 91: {
  1736                           
  1737                           ;mcc.c: 90: while(PLLR == 0)
  1738                           
  1739  01D5  1B1A               	btfsc	26,6	;volatile
  1740  01D6  0008               	return
  1741  01D7  29D5               	goto	l216
  1742  01D8                     __end_of_OSCILLATOR_Initialize:	
  1743                           
  1744                           	psect	text6
  1745  012D                     __ptext6:	
  1746 ;; *************** function _EUSART_Initialize *****************
  1747 ;; Defined at:
  1748 ;;		line 75 in file "mcc_generated_files/eusart.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;		None
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1
  1762 ;;      Params:         0       0       0
  1763 ;;      Locals:         0       0       0
  1764 ;;      Temps:          1       0       0
  1765 ;;      Totals:         1       0       0
  1766 ;;Total ram usage:        1 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    2
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_SYSTEM_Initialize
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           
  1777                           ;psect for function _EUSART_Initialize
  1778  012D                     _EUSART_Initialize:	
  1779                           
  1780                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  1781                           
  1782                           ;incstack = 0
  1783                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  1784  012D  0021               	movlb	1	; select bank1
  1785  012E  1291               	bcf	17,5	;volatile
  1786                           
  1787                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  1788  012F  1211               	bcf	17,4	;volatile
  1789                           
  1790                           ;eusart.c: 84: BAUDCON = 0x08;
  1791  0130  3008               	movlw	8
  1792  0131  0023               	movlb	3	; select bank3
  1793  0132  009F               	movwf	31	;volatile
  1794                           
  1795                           ;eusart.c: 87: RCSTA = 0x90;
  1796  0133  3090               	movlw	144
  1797  0134  009D               	movwf	29	;volatile
  1798                           
  1799                           ;eusart.c: 90: TXSTA = 0x24;
  1800  0135  3024               	movlw	36
  1801  0136  009E               	movwf	30	;volatile
  1802                           
  1803                           ;eusart.c: 93: SPBRGL = 0x40;
  1804  0137  3040               	movlw	64
  1805  0138  009B               	movwf	27	;volatile
  1806                           
  1807                           ;eusart.c: 96: SPBRGH = 0x03;
  1808  0139  3003               	movlw	3
  1809  013A  009C               	movwf	28	;volatile
  1810                           
  1811                           ;eusart.c: 100: eusartTxHead = 0;
  1812  013B  0020               	movlb	0	; select bank0
  1813  013C  01B5               	clrf	_eusartTxHead
  1814                           
  1815                           ;eusart.c: 101: eusartTxTail = 0;
  1816  013D  01B6               	clrf	_eusartTxTail
  1817                           
  1818                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  1819  013E  3008               	movlw	8
  1820  013F  00F2               	movwf	??_EUSART_Initialize
  1821  0140  0872               	movf	??_EUSART_Initialize,w
  1822  0141  00FB               	movwf	_eusartTxBufferRemaining	;volatile
  1823                           
  1824                           ;eusart.c: 104: eusartRxHead = 0;
  1825  0142  01B3               	clrf	_eusartRxHead
  1826                           
  1827                           ;eusart.c: 105: eusartRxTail = 0;
  1828  0143  01B4               	clrf	_eusartRxTail
  1829                           
  1830                           ;eusart.c: 106: eusartRxCount = 0;
  1831  0144  01FA               	clrf	_eusartRxCount	;volatile
  1832                           
  1833                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  1834  0145  0021               	movlb	1	; select bank1
  1835  0146  1691               	bsf	17,5	;volatile
  1836  0147  0008               	return
  1837  0148                     __end_of_EUSART_Initialize:	
  1838                           
  1839                           	psect	text7
  1840  01BC                     __ptext7:	
  1841 ;; *************** function _EPWM_Initialize *****************
  1842 ;; Defined at:
  1843 ;;		line 63 in file "mcc_generated_files/epwm.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1
  1857 ;;      Params:         0       0       0
  1858 ;;      Locals:         0       0       0
  1859 ;;      Temps:          0       0       0
  1860 ;;      Totals:         0       0       0
  1861 ;;Total ram usage:        0 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    2
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_SYSTEM_Initialize
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           
  1872                           ;psect for function _EPWM_Initialize
  1873  01BC                     _EPWM_Initialize:	
  1874                           
  1875                           ;epwm.c: 68: CCP1CON = 0x3C;
  1876                           
  1877                           ;incstack = 0
  1878                           ; Regs used in _EPWM_Initialize: [wreg+status,2]
  1879  01BC  303C               	movlw	60
  1880  01BD  0025               	movlb	5	; select bank5
  1881  01BE  0093               	movwf	19	;volatile
  1882                           
  1883                           ;epwm.c: 71: ECCP1AS = 0x00;
  1884  01BF  0195               	clrf	21	;volatile
  1885                           
  1886                           ;epwm.c: 74: PWM1CON = 0x80;
  1887  01C0  3080               	movlw	128
  1888  01C1  0094               	movwf	20	;volatile
  1889                           
  1890                           ;epwm.c: 77: PSTR1CON = 0x04;
  1891  01C2  3004               	movlw	4
  1892  01C3  0096               	movwf	22	;volatile
  1893                           
  1894                           ;epwm.c: 80: CCPR1L = 0x7F;
  1895  01C4  307F               	movlw	127
  1896  01C5  0091               	movwf	17	;volatile
  1897                           
  1898                           ;epwm.c: 83: CCPR1H = 0x00;
  1899  01C6  0192               	clrf	18	;volatile
  1900  01C7  0008               	return
  1901  01C8                     __end_of_EPWM_Initialize:	
  1902                           
  1903                           	psect	text8
  1904  00F3                     __ptext8:	
  1905 ;; *************** function _GPS_read_speed *****************
  1906 ;; Defined at:
  1907 ;;		line 74 in file "main.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  char_buffer    40    0        unsigned char [40]
  1912 ;;  done            1    7[COMMON] unsigned char 
  1913 ;;  m_char          1    6[COMMON] unsigned char 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1
  1923 ;;      Params:         0       0       0
  1924 ;;      Locals:         2       0       0
  1925 ;;      Temps:          2       0       0
  1926 ;;      Totals:         4       0       0
  1927 ;;Total ram usage:        4 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    3
  1930 ;; This function calls:
  1931 ;;		_EUSART_Read
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _GPS_read_speed
  1939  00F3                     _GPS_read_speed:	
  1940                           
  1941                           ;main.c: 76: unsigned char char_buffer[40];
  1942                           ;main.c: 80: bool done = 0;
  1943                           
  1944                           ;incstack = 0
  1945                           ; Regs used in _GPS_read_speed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1946  00F3  01F7               	clrf	GPS_read_speed@done
  1947  00F4                     l1297:	
  1948                           ;main.c: 81: unsigned char m_char;
  1949                           ;main.c: 82: while (!done)
  1950                           
  1951  00F4  0877               	movf	GPS_read_speed@done,w
  1952  00F5  1D03               	btfss	3,2
  1953  00F6  0008               	return
  1954                           
  1955                           ;main.c: 83: {
  1956                           ;main.c: 84: if(eusartRxCount==0)
  1957  00F7  087A               	movf	_eusartRxCount,w	;volatile
  1958  00F8  1D03               	btfss	3,2
  1959  00F9  28FD               	goto	l1289
  1960                           
  1961                           ;main.c: 85: {
  1962                           ;main.c: 86: do { LATA5 = 0; } while(0);
  1963  00FA  0022               	movlb	2	; select bank2
  1964  00FB  128C               	bcf	12,5	;volatile
  1965                           
  1966                           ;main.c: 87: }
  1967  00FC  28F4               	goto	l1297
  1968  00FD                     l1289:	
  1969                           
  1970                           ;main.c: 88: else if(eusartRxCount!=0)
  1971  00FD  087A               	movf	_eusartRxCount,w	;volatile
  1972  00FE  1903               	btfsc	3,2
  1973  00FF  28F4               	goto	l1297
  1974                           
  1975                           ;main.c: 89: {
  1976                           ;main.c: 90: m_char=EUSART_Read();
  1977  0100  20D4               	fcall	_EUSART_Read
  1978  0101  00F4               	movwf	??_GPS_read_speed
  1979  0102  0874               	movf	??_GPS_read_speed,w
  1980  0103  00F6               	movwf	GPS_read_speed@m_char
  1981                           
  1982                           ;main.c: 91: do { LATA5 = 1; } while(0);
  1983  0104  0022               	movlb	2	; select bank2
  1984  0105  168C               	bsf	12,5	;volatile
  1985                           
  1986                           ;main.c: 92: _delay((unsigned long)((1)*(32000000/4000.0)));
  1987  0106  300B               	movlw	11
  1988  0107  00F5               	movwf	??_GPS_read_speed+1
  1989  0108  3062               	movlw	98
  1990  0109  00F4               	movwf	??_GPS_read_speed
  1991  010A                     u617:	
  1992  010A  0BF4               	decfsz	??_GPS_read_speed,f
  1993  010B  290A               	goto	u617
  1994  010C  0BF5               	decfsz	??_GPS_read_speed+1,f
  1995  010D  290A               	goto	u617
  1996  010E  0000               	nop
  1997  010F  28F4               	goto	l1297
  1998  0110                     __end_of_GPS_read_speed:	
  1999                           
  2000                           	psect	text9
  2001  00D4                     __ptext9:	
  2002 ;; *************** function _EUSART_Read *****************
  2003 ;; Defined at:
  2004 ;;		line 112 in file "mcc_generated_files/eusart.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;		None
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  readValue       1    3[COMMON] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      unsigned char 
  2011 ;; Registers used:
  2012 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1
  2018 ;;      Params:         0       0       0
  2019 ;;      Locals:         1       0       0
  2020 ;;      Temps:          1       0       0
  2021 ;;      Totals:         2       0       0
  2022 ;;Total ram usage:        2 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    2
  2025 ;; This function calls:
  2026 ;;		Nothing
  2027 ;; This function is called by:
  2028 ;;		_GPS_read_speed
  2029 ;;		_getch
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           
  2034                           ;psect for function _EUSART_Read
  2035  00D4                     _EUSART_Read:	
  2036                           
  2037                           ;eusart.c: 114: uint8_t readValue = 0;
  2038                           
  2039                           ;incstack = 0
  2040                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  2041  00D4  01F3               	clrf	EUSART_Read@readValue
  2042                           
  2043                           ;eusart.c: 117: RCSTAbits.SREN = 1;
  2044  00D5  0023               	movlb	3	; select bank3
  2045  00D6  169D               	bsf	29,5	;volatile
  2046  00D7                     l1181:	
  2047                           ;eusart.c: 120: {
  2048                           
  2049                           ;eusart.c: 119: while(0 == eusartRxCount)
  2050                           
  2051  00D7  087A               	movf	_eusartRxCount,w	;volatile
  2052  00D8  1903               	btfsc	3,2
  2053  00D9  28D7               	goto	l1181
  2054                           
  2055                           ;eusart.c: 121: }
  2056                           ;eusart.c: 123: PIE1bits.RCIE = 0;
  2057  00DA  0021               	movlb	1	; select bank1
  2058  00DB  1291               	bcf	17,5	;volatile
  2059                           
  2060                           ;eusart.c: 125: readValue = eusartRxBuffer[eusartRxTail++];
  2061  00DC  0020               	movlb	0	; select bank0
  2062  00DD  0834               	movf	_eusartRxTail,w
  2063  00DE  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  2064  00DF  0086               	movwf	6
  2065  00E0  0187               	clrf	7
  2066  00E1  0801               	movf	1,w
  2067  00E2  00F2               	movwf	??_EUSART_Read
  2068  00E3  0872               	movf	??_EUSART_Read,w
  2069  00E4  00F3               	movwf	EUSART_Read@readValue
  2070  00E5  3001               	movlw	1
  2071  00E6  00F2               	movwf	??_EUSART_Read
  2072  00E7  0872               	movf	??_EUSART_Read,w
  2073  00E8  07B4               	addwf	_eusartRxTail,f
  2074                           
  2075                           ;eusart.c: 126: if(sizeof(eusartRxBuffer) <= eusartRxTail)
  2076  00E9  3008               	movlw	8
  2077  00EA  0234               	subwf	_eusartRxTail,w
  2078  00EB  1803               	btfsc	3,0
  2079                           
  2080                           ;eusart.c: 127: {
  2081                           ;eusart.c: 128: eusartRxTail = 0;
  2082  00EC  01B4               	clrf	_eusartRxTail
  2083                           
  2084                           ;eusart.c: 129: }
  2085                           ;eusart.c: 130: eusartRxCount--;
  2086  00ED  3001               	movlw	1
  2087  00EE  02FA               	subwf	_eusartRxCount,f	;volatile
  2088                           
  2089                           ;eusart.c: 131: PIE1bits.RCIE = 1;
  2090  00EF  0021               	movlb	1	; select bank1
  2091  00F0  1691               	bsf	17,5	;volatile
  2092                           
  2093                           ;eusart.c: 133: return readValue;
  2094  00F1  0873               	movf	EUSART_Read@readValue,w
  2095  00F2  0008               	return
  2096  00F3                     __end_of_EUSART_Read:	
  2097                           
  2098                           	psect	text10
  2099  0072                     __ptext10:	
  2100 ;; *************** function _GPS_Initialize *****************
  2101 ;; Defined at:
  2102 ;;		line 64 in file "main.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  tmp             1    5[BANK0 ] unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1
  2116 ;;      Params:         0       0       0
  2117 ;;      Locals:         0       1       0
  2118 ;;      Temps:          0       3       0
  2119 ;;      Totals:         0       4       0
  2120 ;;Total ram usage:        4 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    5
  2123 ;; This function calls:
  2124 ;;		_printf
  2125 ;; This function is called by:
  2126 ;;		_main
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           
  2131                           ;psect for function _GPS_Initialize
  2132  0072                     _GPS_Initialize:	
  2133                           
  2134                           ;main.c: 66: for(unsigned char tmp=0;tmp<(10*1);tmp++){_delay((unsigned long)((100)*(320
      +                          00000/4000.0)));};
  2135                           
  2136                           ;incstack = 0
  2137                           ; Regs used in _GPS_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2138  0072  0020               	movlb	0	; select bank0
  2139  0073  01BD               	clrf	GPS_Initialize@tmp
  2140  0074  300A               	movlw	10
  2141  0075  023D               	subwf	GPS_Initialize@tmp,w
  2142  0076  1803               	btfsc	3,0
  2143  0077  288D               	goto	l1373
  2144  0078                     l1367:	
  2145  0078  3005               	movlw	5
  2146  0079  00BC               	movwf	??_GPS_Initialize+2
  2147  007A  300F               	movlw	15
  2148  007B  00BB               	movwf	??_GPS_Initialize+1
  2149  007C  30F4               	movlw	244
  2150  007D  00BA               	movwf	??_GPS_Initialize
  2151  007E                     u627:	
  2152  007E  0BBA               	decfsz	??_GPS_Initialize,f
  2153  007F  287E               	goto	u627
  2154  0080  0BBB               	decfsz	??_GPS_Initialize+1,f
  2155  0081  287E               	goto	u627
  2156  0082  0BBC               	decfsz	??_GPS_Initialize+2,f
  2157  0083  287E               	goto	u627
  2158  0084  3001               	movlw	1
  2159  0085  0020               	movlb	0	; select bank0
  2160  0086  00BA               	movwf	??_GPS_Initialize
  2161  0087  083A               	movf	??_GPS_Initialize,w
  2162  0088  07BD               	addwf	GPS_Initialize@tmp,f
  2163  0089  300A               	movlw	10
  2164  008A  023D               	subwf	GPS_Initialize@tmp,w
  2165  008B  1C03               	skipc
  2166  008C  2878               	goto	l1367
  2167  008D                     l1373:	
  2168                           
  2169                           ;main.c: 68: printf("$PMTK314,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0*29\r\n");
  2170  008D  302C               	movlw	low (STR_1| (0+32768))
  2171  008E  00F5               	movwf	printf@f
  2172  008F  3080               	movlw	high (STR_1| (0+32768))
  2173  0090  00F6               	movwf	printf@f+1
  2174  0091  2148               	fcall	_printf
  2175                           
  2176                           ;main.c: 69: _delay((unsigned long)((100)*(32000000/4000.0)));
  2177  0092  3005               	movlw	5
  2178  0093  0020               	movlb	0	; select bank0
  2179  0094  00BC               	movwf	??_GPS_Initialize+2
  2180  0095  300F               	movlw	15
  2181  0096  00BB               	movwf	??_GPS_Initialize+1
  2182  0097  30F4               	movlw	244
  2183  0098  00BA               	movwf	??_GPS_Initialize
  2184  0099                     u637:	
  2185  0099  0BBA               	decfsz	??_GPS_Initialize,f
  2186  009A  2899               	goto	u637
  2187  009B  0BBB               	decfsz	??_GPS_Initialize+1,f
  2188  009C  2899               	goto	u637
  2189  009D  0BBC               	decfsz	??_GPS_Initialize+2,f
  2190  009E  2899               	goto	u637
  2191                           
  2192                           ;main.c: 70: printf("$PMTK220,100*2F\r\n");
  2193  009F  3060               	movlw	low (STR_2| (0+32768))
  2194  00A0  00F5               	movwf	printf@f
  2195  00A1  3080               	movlw	high (STR_2| (0+32768))
  2196  00A2  00F6               	movwf	printf@f+1
  2197  00A3  2148               	fcall	_printf
  2198                           
  2199                           ;main.c: 71: _delay((unsigned long)((100)*(32000000/4000.0)));
  2200  00A4  3005               	movlw	5
  2201  00A5  0020               	movlb	0	; select bank0
  2202  00A6  00BC               	movwf	??_GPS_Initialize+2
  2203  00A7  300F               	movlw	15
  2204  00A8  00BB               	movwf	??_GPS_Initialize+1
  2205  00A9  30F4               	movlw	244
  2206  00AA  00BA               	movwf	??_GPS_Initialize
  2207  00AB                     u647:	
  2208  00AB  0BBA               	decfsz	??_GPS_Initialize,f
  2209  00AC  28AB               	goto	u647
  2210  00AD  0BBB               	decfsz	??_GPS_Initialize+1,f
  2211  00AE  28AB               	goto	u647
  2212  00AF  0BBC               	decfsz	??_GPS_Initialize+2,f
  2213  00B0  28AB               	goto	u647
  2214  00B1  0008               	return
  2215  00B2                     __end_of_GPS_Initialize:	
  2216                           
  2217                           	psect	text11
  2218  0148                     __ptext11:	
  2219 ;; *************** function _printf *****************
  2220 ;; Defined at:
  2221 ;;		line 464 in file "D:\Program Files\Microchip\xc8\v1.38\sources\common\doprnt.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  f               2    5[COMMON] PTR const unsigned char 
  2224 ;;		 -> STR_2(18), STR_1(52), 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  tmpval          4    0        struct .
  2227 ;;  cp              2    0        PTR const unsigned char 
  2228 ;;  len             2    0        unsigned int 
  2229 ;;  val             2    0        unsigned int 
  2230 ;;  c               1    1[BANK0 ] char 
  2231 ;;  ap              1    0[BANK0 ] PTR void [1]
  2232 ;;		 -> ?_printf(2), 
  2233 ;;  flag            1    0        unsigned char 
  2234 ;;  prec            1    0        char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  2    5[COMMON] int 
  2237 ;; Registers used:
  2238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1
  2244 ;;      Params:         2       0       0
  2245 ;;      Locals:         0       2       0
  2246 ;;      Temps:          3       0       0
  2247 ;;      Totals:         5       2       0
  2248 ;;Total ram usage:        7 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:    4
  2251 ;; This function calls:
  2252 ;;		_putch
  2253 ;; This function is called by:
  2254 ;;		_GPS_Initialize
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           
  2259                           ;psect for function _printf
  2260  0148                     _printf:	
  2261                           
  2262                           ;doprnt.c: 466: va_list ap;
  2263                           ;doprnt.c: 499: signed char c;
  2264                           ;doprnt.c: 506: signed char prec;
  2265                           ;doprnt.c: 508: unsigned char flag;
  2266                           ;doprnt.c: 523: union {
  2267                           ;doprnt.c: 524: unsigned long vd;
  2268                           ;doprnt.c: 525: double integ;
  2269                           ;doprnt.c: 526: } tmpval;
  2270                           ;doprnt.c: 528: unsigned int val;
  2271                           ;doprnt.c: 529: unsigned len;
  2272                           ;doprnt.c: 530: const char * cp;
  2273                           ;doprnt.c: 533: *ap = __va_start();
  2274                           
  2275                           ;incstack = 0
  2276                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2277  0148  3077               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2278  0149  00F7               	movwf	??_printf
  2279  014A  0877               	movf	??_printf,w
  2280  014B  0020               	movlb	0	; select bank0
  2281  014C  00B8               	movwf	printf@ap
  2282  014D                     l1359:	
  2283                           ;doprnt.c: 543: }
  2284                           ;doprnt.c: 1422: {
  2285                           
  2286                           ;doprnt.c: 542: continue;
  2287                           
  2288                           ;doprnt.c: 536: while(c = *f++) {
  2289                           
  2290  014D  0876               	movf	printf@f+1,w
  2291  014E  00F8               	movwf	??_printf+1
  2292  014F  0875               	movf	printf@f,w
  2293  0150  00F7               	movwf	??_printf
  2294  0151  0AF5               	incf	printf@f,f
  2295  0152  1903               	skipnz
  2296  0153  0AF6               	incf	printf@f+1,f
  2297  0154  0877               	movf	??_printf,w
  2298  0155  0084               	movwf	4
  2299  0156  0878               	movf	??_printf+1,w
  2300  0157  0085               	movwf	5
  2301  0158  0800               	movf	0,w	;code access
  2302  0159  00F9               	movwf	??_printf+2
  2303  015A  0879               	movf	??_printf+2,w
  2304  015B  0020               	movlb	0	; select bank0
  2305  015C  00B9               	movwf	printf@c
  2306  015D  0839               	movf	printf@c,w
  2307  015E  1903               	btfsc	3,2
  2308  015F  0008               	return
  2309                           
  2310                           ;doprnt.c: 540: {
  2311                           ;doprnt.c: 541: (putch(c) );
  2312  0160  0839               	movf	printf@c,w
  2313  0161  21E4               	fcall	_putch
  2314  0162  294D               	goto	l1359
  2315  0163                     __end_of_printf:	
  2316                           ;doprnt.c: 1469: }
  2317                           ;doprnt.c: 1533: }
  2318                           ;doprnt.c: 1540: return 0;
  2319                           ;	Return value of _printf is never used
  2320                           
  2321                           
  2322                           	psect	text12
  2323  01E4                     __ptext12:	
  2324 ;; *************** function _putch *****************
  2325 ;; Defined at:
  2326 ;;		line 164 in file "mcc_generated_files/eusart.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  txData          1    wreg     unsigned char 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  txData          1    4[COMMON] unsigned char 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1
  2340 ;;      Params:         0       0       0
  2341 ;;      Locals:         1       0       0
  2342 ;;      Temps:          0       0       0
  2343 ;;      Totals:         1       0       0
  2344 ;;Total ram usage:        1 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    3
  2347 ;; This function calls:
  2348 ;;		_EUSART_Write
  2349 ;; This function is called by:
  2350 ;;		_printf
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           
  2355                           ;psect for function _putch
  2356  01E4                     _putch:	
  2357                           
  2358                           ;incstack = 0
  2359                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2360                           ;putch@txData stored from wreg
  2361  01E4  00F4               	movwf	putch@txData
  2362                           
  2363                           ;eusart.c: 166: EUSART_Write(txData);
  2364  01E5  0874               	movf	putch@txData,w
  2365  01E6  20B2               	fcall	_EUSART_Write
  2366  01E7  0008               	return
  2367  01E8                     __end_of_putch:	
  2368                           
  2369                           	psect	text13
  2370  00B2                     __ptext13:	
  2371 ;; *************** function _EUSART_Write *****************
  2372 ;; Defined at:
  2373 ;;		line 136 in file "mcc_generated_files/eusart.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  txData          1    wreg     unsigned char 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  txData          1    3[COMMON] unsigned char 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      void 
  2380 ;; Registers used:
  2381 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1
  2387 ;;      Params:         0       0       0
  2388 ;;      Locals:         1       0       0
  2389 ;;      Temps:          1       0       0
  2390 ;;      Totals:         2       0       0
  2391 ;;Total ram usage:        2 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    2
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		_putch
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           
  2402                           ;psect for function _EUSART_Write
  2403  00B2                     _EUSART_Write:	
  2404                           
  2405                           ;incstack = 0
  2406                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  2407                           ;EUSART_Write@txData stored from wreg
  2408  00B2  00F3               	movwf	EUSART_Write@txData
  2409  00B3                     l1337:	
  2410                           ;eusart.c: 139: {
  2411                           
  2412                           ;eusart.c: 138: while(0 == eusartTxBufferRemaining)
  2413                           
  2414  00B3  087B               	movf	_eusartTxBufferRemaining,w	;volatile
  2415  00B4  1903               	btfsc	3,2
  2416  00B5  28B3               	goto	l1337
  2417                           
  2418                           ;eusart.c: 140: }
  2419                           ;eusart.c: 142: if(0 == PIE1bits.TXIE)
  2420  00B6  0021               	movlb	1	; select bank1
  2421  00B7  1A11               	btfsc	17,4	;volatile
  2422  00B8  28BD               	goto	l131
  2423                           
  2424                           ;eusart.c: 143: {
  2425                           ;eusart.c: 144: TXREG = txData;
  2426  00B9  0873               	movf	EUSART_Write@txData,w
  2427  00BA  0023               	movlb	3	; select bank3
  2428  00BB  009A               	movwf	26	;volatile
  2429                           
  2430                           ;eusart.c: 145: }
  2431  00BC  28D1               	goto	l1351
  2432  00BD                     l131:	
  2433                           
  2434                           ;eusart.c: 146: else
  2435                           ;eusart.c: 147: {
  2436                           ;eusart.c: 148: PIE1bits.TXIE = 0;
  2437  00BD  1211               	bcf	17,4	;volatile
  2438                           
  2439                           ;eusart.c: 149: eusartTxBuffer[eusartTxHead++] = txData;
  2440  00BE  0873               	movf	EUSART_Write@txData,w
  2441  00BF  00F2               	movwf	??_EUSART_Write
  2442  00C0  0020               	movlb	0	; select bank0
  2443  00C1  0835               	movf	_eusartTxHead,w
  2444  00C2  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2445  00C3  0086               	movwf	6
  2446  00C4  0187               	clrf	7
  2447  00C5  0872               	movf	??_EUSART_Write,w
  2448  00C6  0081               	movwf	1
  2449  00C7  3001               	movlw	1
  2450  00C8  00F2               	movwf	??_EUSART_Write
  2451  00C9  0872               	movf	??_EUSART_Write,w
  2452  00CA  07B5               	addwf	_eusartTxHead,f
  2453                           
  2454                           ;eusart.c: 150: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  2455  00CB  3008               	movlw	8
  2456  00CC  0235               	subwf	_eusartTxHead,w
  2457  00CD  1803               	btfsc	3,0
  2458                           
  2459                           ;eusart.c: 151: {
  2460                           ;eusart.c: 152: eusartTxHead = 0;
  2461  00CE  01B5               	clrf	_eusartTxHead
  2462                           
  2463                           ;eusart.c: 153: }
  2464                           ;eusart.c: 154: eusartTxBufferRemaining--;
  2465  00CF  3001               	movlw	1
  2466  00D0  02FB               	subwf	_eusartTxBufferRemaining,f	;volatile
  2467  00D1                     l1351:	
  2468                           
  2469                           ;eusart.c: 155: }
  2470                           ;eusart.c: 156: PIE1bits.TXIE = 1;
  2471  00D1  0021               	movlb	1	; select bank1
  2472  00D2  1611               	bsf	17,4	;volatile
  2473  00D3  0008               	return
  2474  00D4                     __end_of_EUSART_Write:	
  2475                           
  2476                           	psect	text14
  2477  017E                     __ptext14:	
  2478 ;; *************** function _EPWM_LoadDutyValue *****************
  2479 ;; Defined at:
  2480 ;;		line 87 in file "mcc_generated_files/epwm.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  dutyValue       2    2[COMMON] unsigned int 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMMON   BANK0   BANK1
  2494 ;;      Params:         2       0       0
  2495 ;;      Locals:         0       0       0
  2496 ;;      Temps:          2       0       0
  2497 ;;      Totals:         4       0       0
  2498 ;;Total ram usage:        4 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    2
  2501 ;; This function calls:
  2502 ;;		Nothing
  2503 ;; This function is called by:
  2504 ;;		_main
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           
  2509                           ;psect for function _EPWM_LoadDutyValue
  2510  017E                     _EPWM_LoadDutyValue:	
  2511                           
  2512                           ;epwm.c: 90: CCPR1L = ((dutyValue & 0x03FC)>>2);
  2513                           
  2514                           ;incstack = 0
  2515                           ; Regs used in _EPWM_LoadDutyValue: [wreg+status,2+status,0]
  2516  017E  0873               	movf	EPWM_LoadDutyValue@dutyValue+1,w
  2517  017F  00F5               	movwf	??_EPWM_LoadDutyValue+1
  2518  0180  0872               	movf	EPWM_LoadDutyValue@dutyValue,w
  2519  0181  00F4               	movwf	??_EPWM_LoadDutyValue
  2520  0182  36F5               	lsrf	??_EPWM_LoadDutyValue+1,f
  2521  0183  0CF4               	rrf	??_EPWM_LoadDutyValue,f
  2522  0184  36F5               	lsrf	??_EPWM_LoadDutyValue+1,f
  2523  0185  0CF4               	rrf	??_EPWM_LoadDutyValue,f
  2524  0186  0874               	movf	??_EPWM_LoadDutyValue,w
  2525  0187  0025               	movlb	5	; select bank5
  2526  0188  0091               	movwf	17	;volatile
  2527                           
  2528                           ;epwm.c: 93: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  2529  0189  0872               	movf	EPWM_LoadDutyValue@dutyValue,w
  2530  018A  3903               	andlw	3
  2531  018B  00F4               	movwf	??_EPWM_LoadDutyValue
  2532  018C  3004               	movlw	4
  2533  018D                     u435:	
  2534  018D  35F4               	lslf	??_EPWM_LoadDutyValue,f
  2535  018E  0B89               	decfsz	9,f
  2536  018F  298D               	goto	u435
  2537  0190  0813               	movf	19,w	;volatile
  2538  0191  39CF               	andlw	207
  2539  0192  0474               	iorwf	??_EPWM_LoadDutyValue,w
  2540  0193  0093               	movwf	19	;volatile
  2541  0194  0008               	return
  2542  0195                     __end_of_EPWM_LoadDutyValue:	
  2543                           
  2544                           	psect	intentry
  2545  0004                     __pintentry:	
  2546 ;; *************** function _INTERRUPT_InterruptManager *****************
  2547 ;; Defined at:
  2548 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;		None
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;		None
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMMON   BANK0   BANK1
  2562 ;;      Params:         0       0       0
  2563 ;;      Locals:         0       0       0
  2564 ;;      Temps:          1       0       0
  2565 ;;      Totals:         1       0       0
  2566 ;;Total ram usage:        1 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:    1
  2569 ;; This function calls:
  2570 ;;		_EUSART_Receive_ISR
  2571 ;;		_EUSART_Transmit_ISR
  2572 ;; This function is called by:
  2573 ;;		Interrupt level 1
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577  0004                     _INTERRUPT_InterruptManager:	
  2578                           
  2579                           ;incstack = 0
  2580  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2581                           
  2582                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2583  0005  3180               	pagesel	$
  2584  0006  0020               	movlb	0	; select bank0
  2585  0007  087F               	movf	127,w
  2586  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  2587                           
  2588                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits.TXIF
      +                           == 1)
  2589  0009  1F0B               	btfss	11,6	;volatile
  2590  000A  2812               	goto	i1l1311
  2591  000B  0021               	movlb	1	; select bank1
  2592  000C  1E11               	btfss	17,4	;volatile
  2593  000D  2812               	goto	i1l1311
  2594  000E  0020               	movlb	0	; select bank0
  2595  000F  1E11               	btfss	17,4	;volatile
  2596  0010  2812               	goto	i1l1311
  2597                           
  2598                           ;interrupt_manager.c: 55: {
  2599                           ;interrupt_manager.c: 56: EUSART_Transmit_ISR();
  2600  0011  2110               	fcall	_EUSART_Transmit_ISR
  2601  0012                     i1l1311:	
  2602                           
  2603                           ;interrupt_manager.c: 57: }
  2604                           ;interrupt_manager.c: 58: if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits.RCIF
      +                           == 1)
  2605  0012  1F0B               	btfss	11,6	;volatile
  2606  0013  281B               	goto	i1l235
  2607  0014  0021               	movlb	1	; select bank1
  2608  0015  1E91               	btfss	17,5	;volatile
  2609  0016  281B               	goto	i1l235
  2610  0017  0020               	movlb	0	; select bank0
  2611  0018  1E91               	btfss	17,5	;volatile
  2612  0019  281B               	goto	i1l235
  2613                           
  2614                           ;interrupt_manager.c: 59: {
  2615                           ;interrupt_manager.c: 60: EUSART_Receive_ISR();
  2616  001A  2163               	fcall	_EUSART_Receive_ISR
  2617  001B                     i1l235:	
  2618                           ;interrupt_manager.c: 62: else
  2619                           ;interrupt_manager.c: 63: {
  2620                           
  2621                           ;interrupt_manager.c: 61: }
  2622                           
  2623  001B  0871               	movf	??_INTERRUPT_InterruptManager,w
  2624  001C  0020               	movlb	0	; select bank0
  2625  001D  00FF               	movwf	127
  2626  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2627  001F  0009               	retfie
  2628  0020                     __end_of_INTERRUPT_InterruptManager:	
  2629                           
  2630                           	psect	text16
  2631  0110                     __ptext16:	
  2632 ;; *************** function _EUSART_Transmit_ISR *****************
  2633 ;; Defined at:
  2634 ;;		line 169 in file "mcc_generated_files/eusart.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1
  2648 ;;      Params:         0       0       0
  2649 ;;      Locals:         0       0       0
  2650 ;;      Temps:          1       0       0
  2651 ;;      Totals:         1       0       0
  2652 ;;Total ram usage:        1 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_INTERRUPT_InterruptManager
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           
  2662                           ;psect for function _EUSART_Transmit_ISR
  2663  0110                     _EUSART_Transmit_ISR:	
  2664                           
  2665                           ;eusart.c: 173: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  2666                           
  2667                           ;incstack = 0
  2668                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2669  0110  3008               	movlw	8
  2670  0111  027B               	subwf	_eusartTxBufferRemaining,w	;volatile
  2671  0112  1803               	skipnc
  2672  0113  292A               	goto	i1l143
  2673                           
  2674                           ;eusart.c: 174: {
  2675                           ;eusart.c: 175: TXREG = eusartTxBuffer[eusartTxTail++];
  2676  0114  0020               	movlb	0	; select bank0
  2677  0115  0836               	movf	_eusartTxTail,w
  2678  0116  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2679  0117  0086               	movwf	6
  2680  0118  0187               	clrf	7
  2681  0119  0801               	movf	1,w
  2682  011A  0023               	movlb	3	; select bank3
  2683  011B  009A               	movwf	26	;volatile
  2684  011C  3001               	movlw	1
  2685  011D  00F0               	movwf	??_EUSART_Transmit_ISR
  2686  011E  0870               	movf	??_EUSART_Transmit_ISR,w
  2687  011F  0020               	movlb	0	; select bank0
  2688  0120  07B6               	addwf	_eusartTxTail,f
  2689                           
  2690                           ;eusart.c: 176: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  2691  0121  3008               	movlw	8
  2692  0122  0236               	subwf	_eusartTxTail,w
  2693  0123  1803               	btfsc	3,0
  2694                           
  2695                           ;eusart.c: 177: {
  2696                           ;eusart.c: 178: eusartTxTail = 0;
  2697  0124  01B6               	clrf	_eusartTxTail
  2698                           
  2699                           ;eusart.c: 179: }
  2700                           ;eusart.c: 180: eusartTxBufferRemaining++;
  2701  0125  3001               	movlw	1
  2702  0126  00F0               	movwf	??_EUSART_Transmit_ISR
  2703  0127  0870               	movf	??_EUSART_Transmit_ISR,w
  2704  0128  07FB               	addwf	_eusartTxBufferRemaining,f	;volatile
  2705                           
  2706                           ;eusart.c: 181: }
  2707  0129  0008               	return
  2708  012A                     i1l143:	
  2709                           
  2710                           ;eusart.c: 182: else
  2711                           ;eusart.c: 183: {
  2712                           ;eusart.c: 184: PIE1bits.TXIE = 0;
  2713  012A  0021               	movlb	1	; select bank1
  2714  012B  1211               	bcf	17,4	;volatile
  2715  012C  0008               	return
  2716  012D                     __end_of_EUSART_Transmit_ISR:	
  2717                           
  2718                           	psect	text17
  2719  0163                     __ptext17:	
  2720 ;; *************** function _EUSART_Receive_ISR *****************
  2721 ;; Defined at:
  2722 ;;		line 188 in file "mcc_generated_files/eusart.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;		None
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;		None
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1
  2736 ;;      Params:         0       0       0
  2737 ;;      Locals:         0       0       0
  2738 ;;      Temps:          1       0       0
  2739 ;;      Totals:         1       0       0
  2740 ;;Total ram usage:        1 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_INTERRUPT_InterruptManager
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           
  2750                           ;psect for function _EUSART_Receive_ISR
  2751  0163                     _EUSART_Receive_ISR:	
  2752                           
  2753                           ;eusart.c: 191: if(1 == RCSTAbits.OERR)
  2754                           
  2755                           ;incstack = 0
  2756                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2757  0163  0023               	movlb	3	; select bank3
  2758  0164  1C9D               	btfss	29,1	;volatile
  2759  0165  2968               	goto	i1l1253
  2760                           
  2761                           ;eusart.c: 192: {
  2762                           ;eusart.c: 195: RCSTAbits.SPEN = 0;
  2763  0166  139D               	bcf	29,7	;volatile
  2764                           
  2765                           ;eusart.c: 196: RCSTAbits.SPEN = 1;
  2766  0167  179D               	bsf	29,7	;volatile
  2767  0168                     i1l1253:	
  2768                           
  2769                           ;eusart.c: 197: }
  2770                           ;eusart.c: 200: eusartRxBuffer[eusartRxHead++] = RCREG;
  2771  0168  0819               	movf	25,w	;volatile
  2772  0169  00F0               	movwf	??_EUSART_Receive_ISR
  2773  016A  0020               	movlb	0	; select bank0
  2774  016B  0833               	movf	_eusartRxHead,w
  2775  016C  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  2776  016D  0086               	movwf	6
  2777  016E  0187               	clrf	7
  2778  016F  0870               	movf	??_EUSART_Receive_ISR,w
  2779  0170  0081               	movwf	1
  2780  0171  3001               	movlw	1
  2781  0172  00F0               	movwf	??_EUSART_Receive_ISR
  2782  0173  0870               	movf	??_EUSART_Receive_ISR,w
  2783  0174  07B3               	addwf	_eusartRxHead,f
  2784                           
  2785                           ;eusart.c: 201: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  2786  0175  3008               	movlw	8
  2787  0176  0233               	subwf	_eusartRxHead,w
  2788  0177  1803               	btfsc	3,0
  2789                           
  2790                           ;eusart.c: 202: {
  2791                           ;eusart.c: 203: eusartRxHead = 0;
  2792  0178  01B3               	clrf	_eusartRxHead
  2793                           
  2794                           ;eusart.c: 204: }
  2795                           ;eusart.c: 205: eusartRxCount++;
  2796  0179  3001               	movlw	1
  2797  017A  00F0               	movwf	??_EUSART_Receive_ISR
  2798  017B  0870               	movf	??_EUSART_Receive_ISR,w
  2799  017C  07FA               	addwf	_eusartRxCount,f	;volatile
  2800  017D  0008               	return
  2801  017E                     __end_of_EUSART_Receive_ISR:	
  2802  007E                     btemp	set	126	;btemp
  2803  007E                     int$flags	set	126
  2804  007E                     wtemp	set	126
  2805  007E                     wtemp0	set	126
  2806  0080                     wtemp1	set	128
  2807  0082                     wtemp2	set	130
  2808  0084                     wtemp3	set	132
  2809  0086                     wtemp4	set	134
  2810  0088                     wtemp5	set	136
  2811  007F                     wtemp6	set	127
  2812  007E                     ttemp	set	126
  2813  007E                     ttemp0	set	126
  2814  0081                     ttemp1	set	129
  2815  0084                     ttemp2	set	132
  2816  0087                     ttemp3	set	135
  2817  007F                     ttemp4	set	127
  2818  007E                     ltemp	set	126
  2819  007E                     ltemp0	set	126
  2820  0082                     ltemp1	set	130
  2821  0086                     ltemp2	set	134
  2822  0080                     ltemp3	set	128


Data Sizes:
    Strings     70
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      8      32
    BANK1            32      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_2(CODE[18]), STR_1(CODE[52]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_EUSART_Initialize
    _GPS_read_speed->_EUSART_Read
    _GPS_Initialize->_printf
    _printf->_putch
    _putch->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_GPS_Initialize
    _GPS_Initialize->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     573
                                              6 BANK0      2     2      0
                 _EPWM_LoadDutyValue
                     _GPS_Initialize
                     _GPS_read_speed
                  _SYSTEM_Initialize
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _EPWM_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EPWM_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPS_read_speed                                      44    44      0      48
                                              4 COMMON     4     4      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          2     2      0      24
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPS_Initialize                                       4     4      0     383
                                              2 BANK0      4     4      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              19    17      2     315
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      93
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _EPWM_LoadDutyValue                                   4     2      2     108
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (6) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM_LoadDutyValue
   _GPS_Initialize
     _printf
       _putch
         _EUSART_Write
   _GPS_read_speed
     _EUSART_Read
   _SYSTEM_Initialize
     _EPWM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   _TMR2_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      8      20       6       40.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      2C       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Sep 10 11:34:40 2016

                        __CFG_CP$OFF 0000                                  l131 00BD  
                                l216 01D5                                  _PR2 001B  
                       __CFG_CPD$OFF 0000                                  u435 018D  
                                u617 010A                                  u627 007E  
                                u637 0099                                  u647 00AB  
                    _TMR2_Initialize 01C8                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
                       ?_EUSART_Read 0070                         __CFG_LVP$OFF 0000  
                               l1181 00D7                                 l1351 00D1  
                               l1337 00B3                                 l1373 008D  
                               l1359 014D                                 l1367 0078  
                               l1289 00FD                                 l1297 00F4  
                               l1393 01BA                                 STR_1 002C  
                               STR_2 0060                                 _LATA 010C  
                               _LATC 010E                                 _PLLR 04D6  
                               _TMR2 001A                                 _WPUA 020C  
                               _WPUC 020E                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000               __end_of_GPS_read_speed 0110  
                               _main 01AB                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                               start 0020                                 ttemp 007E  
                               wtemp 007E                        __CFG_MCLRE$ON 0000  
                      __CFG_PLLEN$ON 0000                        ?_EUSART_Write 0070  
     __size_of_OSCILLATOR_Initialize 0008        __end_of_OSCILLATOR_Initialize 01D8  
                              ?_main 0070                        __CFG_WDTE$OFF 0000  
                              _T2CON 001C                                _LATA5 0865  
                              i1l143 012A                                i1l235 001B  
                              _RCREG 0199                                _RCSTA 019D  
                              _TRISA 008C                                _TRISC 008E  
                              _TXREG 019A                                _TXSTA 019E  
                   ??_GPS_Initialize 003A                                _speed 0030  
                              _putch 01E4                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                      ?_GPS_read_speed 0070  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                      _TMR2_StartTimer 01E8  
                    __initialization 0021                         __end_of_main 01BC  
                     ??_EUSART_Write 0072              __end_of_TMR2_Initialize 01D0  
        ?_INTERRUPT_InterruptManager 0070                               ??_main 007A  
                             _EEADRH 0192                               _EEADRL 0191  
                             _CCPR1H 0292                               _EEDATH 0194  
                             _CCPR1L 0291                               _EEDATL 0193  
                             _EECON2 0196                               _APFCON 011D  
                             _ANSELA 018C                               ?_putch 0070  
                             _ANSELC 018E                               i1l1311 0012  
                             i1l1253 0168                               _OSCCON 0099  
                             _SPBRGH 019C                               _SPBRGL 019B  
                     __CFG_PWRTE$OFF 0000                       __CFG_STVREN$ON 0000  
                _EUSART_Transmit_ISR 0110                               _printf 0148  
           __size_of_EPWM_Initialize 000C              __end_of_TMR2_StartTimer 01EB  
               ?_EUSART_Transmit_ISR 0070          __size_of_EPWM_LoadDutyValue 0017  
               __size_of_EUSART_Read 001F                    _SYSTEM_Initialize 01DE  
            __end_of__initialization 0029                   ?_SYSTEM_Initialize 0070  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 0073  
                      __end_of_putch 01E8                     ?_TMR2_Initialize 0070  
                     _OPTION_REGbits 0095            __end_of_SYSTEM_Initialize 01E4  
              ??_EUSART_Transmit_ISR 0070                              ??_putch 0074  
                         __pbssBANK0 0020                 __end_of_EUSART_Write 00D4  
        __size_of_EUSART_Receive_ISR 001B                           __pmaintext 01AB  
                         __pintentry 0004                              _CCP1CON 0293  
                            _ECCP1AS 0295                              _BAUDCON 019F  
                            ?_printf 0075                        _eusartRxCount 007A  
                            _OSCSTAT 009A                              _OSCTUNE 0098  
                            _PWM1CON 0294                     ??_GPS_read_speed 0074  
                 GPS_read_speed@done 0077                     ?_TMR2_StartTimer 0070  
                  ??_EPWM_Initialize 0072                              __ptext1 01DE  
                            __ptext2 01C8                              __ptext3 01E8  
                            __ptext4 0195                              __ptext5 01D0  
                            __ptext6 012D                              __ptext7 01BC  
                            __ptext8 00F3                              __ptext9 00D4  
                    __size_of_printf 001B                _OSCILLATOR_Initialize 01D0  
                          _T2CONbits 001C             ??_PIN_MANAGER_Initialize 0072  
         __size_of_SYSTEM_Initialize 0006                              clrloop0 01D9  
               end_of_initialization 0029          EPWM_LoadDutyValue@dutyValue 0072  
                     main@test_value 003E                    _EUSART_Initialize 012D  
                 ?_EUSART_Initialize 0070                            _RCSTAbits 019D  
                            printf@c 0039                              printf@f 0075  
                       __pstringtext 002C                  ??_EUSART_Initialize 0072  
               GPS_read_speed@m_char 0076                     __CFG_FOSC$INTOSC 0000  
              __size_of_EUSART_Write 0022            __end_of_EUSART_Initialize 0148  
            __size_of_GPS_Initialize 0040                         _EUSART_Write 00B2  
             ?_OSCILLATOR_Initialize 0070                       __end_of_printf 0163  
                start_initialization 0021      __size_of_PIN_MANAGER_Initialize 0016  
         __end_of_EPWM_LoadDutyValue 0195                        ??_EUSART_Read 0072  
                        putch@txData 0074                             ??_printf 0077  
                    _EPWM_Initialize 01BC          __end_of_EUSART_Transmit_ISR 012D  
                        __pbssCOMMON 007A                            ___latbits 0000  
                      __pcstackBANK0 0038             __size_of_TMR2_Initialize 0008  
         __end_of_EUSART_Receive_ISR 017E           __size_of_EUSART_Initialize 001B  
                __end_of_EUSART_Read 00F3               _PIN_MANAGER_Initialize 0195  
               EUSART_Read@readValue 0073                         _eusartRxHead 0033  
                       _eusartTxHead 0035                         _eusartRxTail 0034  
                       _eusartTxTail 0036         ??_INTERRUPT_InterruptManager 0071  
            _eusartTxBufferRemaining 007B                       __size_of_putch 0004  
                     _eusartRxBuffer 0020                       _GPS_Initialize 0072  
                     _eusartTxBuffer 0028                            clear_ram0 01D8  
                           _PIE1bits 0091             __size_of_TMR2_StartTimer 0003  
__size_of_INTERRUPT_InterruptManager 001C                             _PIR1bits 0011  
                           _PSTR1CON 0296              __end_of_EPWM_Initialize 01C8  
                        _EUSART_Read 00D4               __end_of_GPS_Initialize 00B2  
                  ??_TMR2_Initialize 0072                           _EECON1bits 0195  
            __size_of_GPS_read_speed 001D                    GPS_Initialize@tmp 003D  
            ??_OSCILLATOR_Initialize 0072                             __ptext10 0072  
                           __ptext11 0148                             __ptext12 01E4  
                           __ptext13 00B2                             __ptext14 017E  
                           __ptext16 0110                             __ptext17 0163  
                    ?_GPS_Initialize 0070                        __size_of_main 0011  
                 _EPWM_LoadDutyValue 017E                             int$flags 007E  
                   ?_EPWM_Initialize 0070                    ??_TMR2_StartTimer 0072  
 __end_of_INTERRUPT_InterruptManager 0020           _INTERRUPT_InterruptManager 0004  
                ?_EPWM_LoadDutyValue 0072                           _INTCONbits 000B  
               ??_EPWM_LoadDutyValue 0074                             intlevel1 0000  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                           printf@ap 0038                   _EUSART_Receive_ISR 0163  
                ?_EUSART_Receive_ISR 0070                          _speed_units 0037  
                 EUSART_Write@txData 0073         __size_of_EUSART_Transmit_ISR 001D  
     __end_of_PIN_MANAGER_Initialize 01AB                 ??_EUSART_Receive_ISR 0070  
                     _GPS_read_speed 00F3  

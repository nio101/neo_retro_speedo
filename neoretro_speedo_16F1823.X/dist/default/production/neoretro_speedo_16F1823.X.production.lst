

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Sep 13 13:03:37 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     	;# 
    37  0001                     	;# 
    38  0002                     	;# 
    39  0003                     	;# 
    40  0004                     	;# 
    41  0005                     	;# 
    42  0006                     	;# 
    43  0007                     	;# 
    44  0008                     	;# 
    45  0009                     	;# 
    46  000A                     	;# 
    47  000B                     	;# 
    48  000C                     	;# 
    49  000E                     	;# 
    50  0011                     	;# 
    51  0012                     	;# 
    52  0015                     	;# 
    53  0016                     	;# 
    54  0016                     	;# 
    55  0017                     	;# 
    56  0018                     	;# 
    57  0019                     	;# 
    58  001A                     	;# 
    59  001B                     	;# 
    60  001C                     	;# 
    61  001E                     	;# 
    62  001F                     	;# 
    63  008C                     	;# 
    64  008E                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0095                     	;# 
    68  0096                     	;# 
    69  0097                     	;# 
    70  0098                     	;# 
    71  0099                     	;# 
    72  009A                     	;# 
    73  009B                     	;# 
    74  009B                     	;# 
    75  009C                     	;# 
    76  009D                     	;# 
    77  009E                     	;# 
    78  010C                     	;# 
    79  010E                     	;# 
    80  0111                     	;# 
    81  0112                     	;# 
    82  0113                     	;# 
    83  0114                     	;# 
    84  0115                     	;# 
    85  0116                     	;# 
    86  0117                     	;# 
    87  0118                     	;# 
    88  0119                     	;# 
    89  011A                     	;# 
    90  011B                     	;# 
    91  011D                     	;# 
    92  011D                     	;# 
    93  018C                     	;# 
    94  018E                     	;# 
    95  0191                     	;# 
    96  0191                     	;# 
    97  0192                     	;# 
    98  0193                     	;# 
    99  0193                     	;# 
   100  0193                     	;# 
   101  0194                     	;# 
   102  0195                     	;# 
   103  0196                     	;# 
   104  0199                     	;# 
   105  019A                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019B                     	;# 
   110  019C                     	;# 
   111  019C                     	;# 
   112  019D                     	;# 
   113  019E                     	;# 
   114  019F                     	;# 
   115  020C                     	;# 
   116  020E                     	;# 
   117  0211                     	;# 
   118  0211                     	;# 
   119  0212                     	;# 
   120  0212                     	;# 
   121  0213                     	;# 
   122  0213                     	;# 
   123  0214                     	;# 
   124  0214                     	;# 
   125  0215                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0216                     	;# 
   129  0216                     	;# 
   130  0217                     	;# 
   131  0217                     	;# 
   132  0291                     	;# 
   133  0291                     	;# 
   134  0292                     	;# 
   135  0293                     	;# 
   136  0294                     	;# 
   137  0295                     	;# 
   138  0295                     	;# 
   139  0296                     	;# 
   140  0391                     	;# 
   141  0392                     	;# 
   142  0393                     	;# 
   143  039A                     	;# 
   144  039C                     	;# 
   145  039D                     	;# 
   146  039E                     	;# 
   147  039F                     	;# 
   148  0FE4                     	;# 
   149  0FE5                     	;# 
   150  0FE6                     	;# 
   151  0FE7                     	;# 
   152  0FE8                     	;# 
   153  0FE9                     	;# 
   154  0FEA                     	;# 
   155  0FEB                     	;# 
   156  0FED                     	;# 
   157  0FEE                     	;# 
   158  0FEF                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000E                     	;# 
   173  0011                     	;# 
   174  0012                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  008C                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  010C                     	;# 
   202  010E                     	;# 
   203  0111                     	;# 
   204  0112                     	;# 
   205  0113                     	;# 
   206  0114                     	;# 
   207  0115                     	;# 
   208  0116                     	;# 
   209  0117                     	;# 
   210  0118                     	;# 
   211  0119                     	;# 
   212  011A                     	;# 
   213  011B                     	;# 
   214  011D                     	;# 
   215  011D                     	;# 
   216  018C                     	;# 
   217  018E                     	;# 
   218  0191                     	;# 
   219  0191                     	;# 
   220  0192                     	;# 
   221  0193                     	;# 
   222  0193                     	;# 
   223  0193                     	;# 
   224  0194                     	;# 
   225  0195                     	;# 
   226  0196                     	;# 
   227  0199                     	;# 
   228  019A                     	;# 
   229  019B                     	;# 
   230  019B                     	;# 
   231  019B                     	;# 
   232  019B                     	;# 
   233  019C                     	;# 
   234  019C                     	;# 
   235  019D                     	;# 
   236  019E                     	;# 
   237  019F                     	;# 
   238  020C                     	;# 
   239  020E                     	;# 
   240  0211                     	;# 
   241  0211                     	;# 
   242  0212                     	;# 
   243  0212                     	;# 
   244  0213                     	;# 
   245  0213                     	;# 
   246  0214                     	;# 
   247  0214                     	;# 
   248  0215                     	;# 
   249  0215                     	;# 
   250  0215                     	;# 
   251  0216                     	;# 
   252  0216                     	;# 
   253  0217                     	;# 
   254  0217                     	;# 
   255  0291                     	;# 
   256  0291                     	;# 
   257  0292                     	;# 
   258  0293                     	;# 
   259  0294                     	;# 
   260  0295                     	;# 
   261  0295                     	;# 
   262  0296                     	;# 
   263  0391                     	;# 
   264  0392                     	;# 
   265  0393                     	;# 
   266  039A                     	;# 
   267  039C                     	;# 
   268  039D                     	;# 
   269  039E                     	;# 
   270  039F                     	;# 
   271  0FE4                     	;# 
   272  0FE5                     	;# 
   273  0FE6                     	;# 
   274  0FE7                     	;# 
   275  0FE8                     	;# 
   276  0FE9                     	;# 
   277  0FEA                     	;# 
   278  0FEB                     	;# 
   279  0FED                     	;# 
   280  0FEE                     	;# 
   281  0FEF                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  0008                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000E                     	;# 
   296  0011                     	;# 
   297  0012                     	;# 
   298  0015                     	;# 
   299  0016                     	;# 
   300  0016                     	;# 
   301  0017                     	;# 
   302  0018                     	;# 
   303  0019                     	;# 
   304  001A                     	;# 
   305  001B                     	;# 
   306  001C                     	;# 
   307  001E                     	;# 
   308  001F                     	;# 
   309  008C                     	;# 
   310  008E                     	;# 
   311  0091                     	;# 
   312  0092                     	;# 
   313  0095                     	;# 
   314  0096                     	;# 
   315  0097                     	;# 
   316  0098                     	;# 
   317  0099                     	;# 
   318  009A                     	;# 
   319  009B                     	;# 
   320  009B                     	;# 
   321  009C                     	;# 
   322  009D                     	;# 
   323  009E                     	;# 
   324  010C                     	;# 
   325  010E                     	;# 
   326  0111                     	;# 
   327  0112                     	;# 
   328  0113                     	;# 
   329  0114                     	;# 
   330  0115                     	;# 
   331  0116                     	;# 
   332  0117                     	;# 
   333  0118                     	;# 
   334  0119                     	;# 
   335  011A                     	;# 
   336  011B                     	;# 
   337  011D                     	;# 
   338  011D                     	;# 
   339  018C                     	;# 
   340  018E                     	;# 
   341  0191                     	;# 
   342  0191                     	;# 
   343  0192                     	;# 
   344  0193                     	;# 
   345  0193                     	;# 
   346  0193                     	;# 
   347  0194                     	;# 
   348  0195                     	;# 
   349  0196                     	;# 
   350  0199                     	;# 
   351  019A                     	;# 
   352  019B                     	;# 
   353  019B                     	;# 
   354  019B                     	;# 
   355  019B                     	;# 
   356  019C                     	;# 
   357  019C                     	;# 
   358  019D                     	;# 
   359  019E                     	;# 
   360  019F                     	;# 
   361  020C                     	;# 
   362  020E                     	;# 
   363  0211                     	;# 
   364  0211                     	;# 
   365  0212                     	;# 
   366  0212                     	;# 
   367  0213                     	;# 
   368  0213                     	;# 
   369  0214                     	;# 
   370  0214                     	;# 
   371  0215                     	;# 
   372  0215                     	;# 
   373  0215                     	;# 
   374  0216                     	;# 
   375  0216                     	;# 
   376  0217                     	;# 
   377  0217                     	;# 
   378  0291                     	;# 
   379  0291                     	;# 
   380  0292                     	;# 
   381  0293                     	;# 
   382  0294                     	;# 
   383  0295                     	;# 
   384  0295                     	;# 
   385  0296                     	;# 
   386  0391                     	;# 
   387  0392                     	;# 
   388  0393                     	;# 
   389  039A                     	;# 
   390  039C                     	;# 
   391  039D                     	;# 
   392  039E                     	;# 
   393  039F                     	;# 
   394  0FE4                     	;# 
   395  0FE5                     	;# 
   396  0FE6                     	;# 
   397  0FE7                     	;# 
   398  0FE8                     	;# 
   399  0FE9                     	;# 
   400  0FEA                     	;# 
   401  0FEB                     	;# 
   402  0FED                     	;# 
   403  0FEE                     	;# 
   404  0FEF                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000E                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  001A                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  001E                     	;# 
   431  001F                     	;# 
   432  008C                     	;# 
   433  008E                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0095                     	;# 
   437  0096                     	;# 
   438  0097                     	;# 
   439  0098                     	;# 
   440  0099                     	;# 
   441  009A                     	;# 
   442  009B                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  010C                     	;# 
   448  010E                     	;# 
   449  0111                     	;# 
   450  0112                     	;# 
   451  0113                     	;# 
   452  0114                     	;# 
   453  0115                     	;# 
   454  0116                     	;# 
   455  0117                     	;# 
   456  0118                     	;# 
   457  0119                     	;# 
   458  011A                     	;# 
   459  011B                     	;# 
   460  011D                     	;# 
   461  011D                     	;# 
   462  018C                     	;# 
   463  018E                     	;# 
   464  0191                     	;# 
   465  0191                     	;# 
   466  0192                     	;# 
   467  0193                     	;# 
   468  0193                     	;# 
   469  0193                     	;# 
   470  0194                     	;# 
   471  0195                     	;# 
   472  0196                     	;# 
   473  0199                     	;# 
   474  019A                     	;# 
   475  019B                     	;# 
   476  019B                     	;# 
   477  019B                     	;# 
   478  019B                     	;# 
   479  019C                     	;# 
   480  019C                     	;# 
   481  019D                     	;# 
   482  019E                     	;# 
   483  019F                     	;# 
   484  020C                     	;# 
   485  020E                     	;# 
   486  0211                     	;# 
   487  0211                     	;# 
   488  0212                     	;# 
   489  0212                     	;# 
   490  0213                     	;# 
   491  0213                     	;# 
   492  0214                     	;# 
   493  0214                     	;# 
   494  0215                     	;# 
   495  0215                     	;# 
   496  0215                     	;# 
   497  0216                     	;# 
   498  0216                     	;# 
   499  0217                     	;# 
   500  0217                     	;# 
   501  0291                     	;# 
   502  0291                     	;# 
   503  0292                     	;# 
   504  0293                     	;# 
   505  0294                     	;# 
   506  0295                     	;# 
   507  0295                     	;# 
   508  0296                     	;# 
   509  0391                     	;# 
   510  0392                     	;# 
   511  0393                     	;# 
   512  039A                     	;# 
   513  039C                     	;# 
   514  039D                     	;# 
   515  039E                     	;# 
   516  039F                     	;# 
   517  0FE4                     	;# 
   518  0FE5                     	;# 
   519  0FE6                     	;# 
   520  0FE7                     	;# 
   521  0FE8                     	;# 
   522  0FE9                     	;# 
   523  0FEA                     	;# 
   524  0FEB                     	;# 
   525  0FED                     	;# 
   526  0FEE                     	;# 
   527  0FEF                     	;# 
   528  0000                     	;# 
   529  0001                     	;# 
   530  0002                     	;# 
   531  0003                     	;# 
   532  0004                     	;# 
   533  0005                     	;# 
   534  0006                     	;# 
   535  0007                     	;# 
   536  0008                     	;# 
   537  0009                     	;# 
   538  000A                     	;# 
   539  000B                     	;# 
   540  000C                     	;# 
   541  000E                     	;# 
   542  0011                     	;# 
   543  0012                     	;# 
   544  0015                     	;# 
   545  0016                     	;# 
   546  0016                     	;# 
   547  0017                     	;# 
   548  0018                     	;# 
   549  0019                     	;# 
   550  001A                     	;# 
   551  001B                     	;# 
   552  001C                     	;# 
   553  001E                     	;# 
   554  001F                     	;# 
   555  008C                     	;# 
   556  008E                     	;# 
   557  0091                     	;# 
   558  0092                     	;# 
   559  0095                     	;# 
   560  0096                     	;# 
   561  0097                     	;# 
   562  0098                     	;# 
   563  0099                     	;# 
   564  009A                     	;# 
   565  009B                     	;# 
   566  009B                     	;# 
   567  009C                     	;# 
   568  009D                     	;# 
   569  009E                     	;# 
   570  010C                     	;# 
   571  010E                     	;# 
   572  0111                     	;# 
   573  0112                     	;# 
   574  0113                     	;# 
   575  0114                     	;# 
   576  0115                     	;# 
   577  0116                     	;# 
   578  0117                     	;# 
   579  0118                     	;# 
   580  0119                     	;# 
   581  011A                     	;# 
   582  011B                     	;# 
   583  011D                     	;# 
   584  011D                     	;# 
   585  018C                     	;# 
   586  018E                     	;# 
   587  0191                     	;# 
   588  0191                     	;# 
   589  0192                     	;# 
   590  0193                     	;# 
   591  0193                     	;# 
   592  0193                     	;# 
   593  0194                     	;# 
   594  0195                     	;# 
   595  0196                     	;# 
   596  0199                     	;# 
   597  019A                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019B                     	;# 
   601  019B                     	;# 
   602  019C                     	;# 
   603  019C                     	;# 
   604  019D                     	;# 
   605  019E                     	;# 
   606  019F                     	;# 
   607  020C                     	;# 
   608  020E                     	;# 
   609  0211                     	;# 
   610  0211                     	;# 
   611  0212                     	;# 
   612  0212                     	;# 
   613  0213                     	;# 
   614  0213                     	;# 
   615  0214                     	;# 
   616  0214                     	;# 
   617  0215                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0216                     	;# 
   621  0216                     	;# 
   622  0217                     	;# 
   623  0217                     	;# 
   624  0291                     	;# 
   625  0291                     	;# 
   626  0292                     	;# 
   627  0293                     	;# 
   628  0294                     	;# 
   629  0295                     	;# 
   630  0295                     	;# 
   631  0296                     	;# 
   632  0391                     	;# 
   633  0392                     	;# 
   634  0393                     	;# 
   635  039A                     	;# 
   636  039C                     	;# 
   637  039D                     	;# 
   638  039E                     	;# 
   639  039F                     	;# 
   640  0FE4                     	;# 
   641  0FE5                     	;# 
   642  0FE6                     	;# 
   643  0FE7                     	;# 
   644  0FE8                     	;# 
   645  0FE9                     	;# 
   646  0FEA                     	;# 
   647  0FEB                     	;# 
   648  0FED                     	;# 
   649  0FEE                     	;# 
   650  0FEF                     	;# 
   651  0000                     	;# 
   652  0001                     	;# 
   653  0002                     	;# 
   654  0003                     	;# 
   655  0004                     	;# 
   656  0005                     	;# 
   657  0006                     	;# 
   658  0007                     	;# 
   659  0008                     	;# 
   660  0009                     	;# 
   661  000A                     	;# 
   662  000B                     	;# 
   663  000C                     	;# 
   664  000E                     	;# 
   665  0011                     	;# 
   666  0012                     	;# 
   667  0015                     	;# 
   668  0016                     	;# 
   669  0016                     	;# 
   670  0017                     	;# 
   671  0018                     	;# 
   672  0019                     	;# 
   673  001A                     	;# 
   674  001B                     	;# 
   675  001C                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  008C                     	;# 
   679  008E                     	;# 
   680  0091                     	;# 
   681  0092                     	;# 
   682  0095                     	;# 
   683  0096                     	;# 
   684  0097                     	;# 
   685  0098                     	;# 
   686  0099                     	;# 
   687  009A                     	;# 
   688  009B                     	;# 
   689  009B                     	;# 
   690  009C                     	;# 
   691  009D                     	;# 
   692  009E                     	;# 
   693  010C                     	;# 
   694  010E                     	;# 
   695  0111                     	;# 
   696  0112                     	;# 
   697  0113                     	;# 
   698  0114                     	;# 
   699  0115                     	;# 
   700  0116                     	;# 
   701  0117                     	;# 
   702  0118                     	;# 
   703  0119                     	;# 
   704  011A                     	;# 
   705  011B                     	;# 
   706  011D                     	;# 
   707  011D                     	;# 
   708  018C                     	;# 
   709  018E                     	;# 
   710  0191                     	;# 
   711  0191                     	;# 
   712  0192                     	;# 
   713  0193                     	;# 
   714  0193                     	;# 
   715  0193                     	;# 
   716  0194                     	;# 
   717  0195                     	;# 
   718  0196                     	;# 
   719  0199                     	;# 
   720  019A                     	;# 
   721  019B                     	;# 
   722  019B                     	;# 
   723  019B                     	;# 
   724  019B                     	;# 
   725  019C                     	;# 
   726  019C                     	;# 
   727  019D                     	;# 
   728  019E                     	;# 
   729  019F                     	;# 
   730  020C                     	;# 
   731  020E                     	;# 
   732  0211                     	;# 
   733  0211                     	;# 
   734  0212                     	;# 
   735  0212                     	;# 
   736  0213                     	;# 
   737  0213                     	;# 
   738  0214                     	;# 
   739  0214                     	;# 
   740  0215                     	;# 
   741  0215                     	;# 
   742  0215                     	;# 
   743  0216                     	;# 
   744  0216                     	;# 
   745  0217                     	;# 
   746  0217                     	;# 
   747  0291                     	;# 
   748  0291                     	;# 
   749  0292                     	;# 
   750  0293                     	;# 
   751  0294                     	;# 
   752  0295                     	;# 
   753  0295                     	;# 
   754  0296                     	;# 
   755  0391                     	;# 
   756  0392                     	;# 
   757  0393                     	;# 
   758  039A                     	;# 
   759  039C                     	;# 
   760  039D                     	;# 
   761  039E                     	;# 
   762  039F                     	;# 
   763  0FE4                     	;# 
   764  0FE5                     	;# 
   765  0FE6                     	;# 
   766  0FE7                     	;# 
   767  0FE8                     	;# 
   768  0FE9                     	;# 
   769  0FEA                     	;# 
   770  0FEB                     	;# 
   771  0FED                     	;# 
   772  0FEE                     	;# 
   773  0FEF                     	;# 
   774  0000                     	;# 
   775  0001                     	;# 
   776  0002                     	;# 
   777  0003                     	;# 
   778  0004                     	;# 
   779  0005                     	;# 
   780  0006                     	;# 
   781  0007                     	;# 
   782  0008                     	;# 
   783  0009                     	;# 
   784  000A                     	;# 
   785  000B                     	;# 
   786  000C                     	;# 
   787  000E                     	;# 
   788  0011                     	;# 
   789  0012                     	;# 
   790  0015                     	;# 
   791  0016                     	;# 
   792  0016                     	;# 
   793  0017                     	;# 
   794  0018                     	;# 
   795  0019                     	;# 
   796  001A                     	;# 
   797  001B                     	;# 
   798  001C                     	;# 
   799  001E                     	;# 
   800  001F                     	;# 
   801  008C                     	;# 
   802  008E                     	;# 
   803  0091                     	;# 
   804  0092                     	;# 
   805  0095                     	;# 
   806  0096                     	;# 
   807  0097                     	;# 
   808  0098                     	;# 
   809  0099                     	;# 
   810  009A                     	;# 
   811  009B                     	;# 
   812  009B                     	;# 
   813  009C                     	;# 
   814  009D                     	;# 
   815  009E                     	;# 
   816  010C                     	;# 
   817  010E                     	;# 
   818  0111                     	;# 
   819  0112                     	;# 
   820  0113                     	;# 
   821  0114                     	;# 
   822  0115                     	;# 
   823  0116                     	;# 
   824  0117                     	;# 
   825  0118                     	;# 
   826  0119                     	;# 
   827  011A                     	;# 
   828  011B                     	;# 
   829  011D                     	;# 
   830  011D                     	;# 
   831  018C                     	;# 
   832  018E                     	;# 
   833  0191                     	;# 
   834  0191                     	;# 
   835  0192                     	;# 
   836  0193                     	;# 
   837  0193                     	;# 
   838  0193                     	;# 
   839  0194                     	;# 
   840  0195                     	;# 
   841  0196                     	;# 
   842  0199                     	;# 
   843  019A                     	;# 
   844  019B                     	;# 
   845  019B                     	;# 
   846  019B                     	;# 
   847  019B                     	;# 
   848  019C                     	;# 
   849  019C                     	;# 
   850  019D                     	;# 
   851  019E                     	;# 
   852  019F                     	;# 
   853  020C                     	;# 
   854  020E                     	;# 
   855  0211                     	;# 
   856  0211                     	;# 
   857  0212                     	;# 
   858  0212                     	;# 
   859  0213                     	;# 
   860  0213                     	;# 
   861  0214                     	;# 
   862  0214                     	;# 
   863  0215                     	;# 
   864  0215                     	;# 
   865  0215                     	;# 
   866  0216                     	;# 
   867  0216                     	;# 
   868  0217                     	;# 
   869  0217                     	;# 
   870  0291                     	;# 
   871  0291                     	;# 
   872  0292                     	;# 
   873  0293                     	;# 
   874  0294                     	;# 
   875  0295                     	;# 
   876  0295                     	;# 
   877  0296                     	;# 
   878  0391                     	;# 
   879  0392                     	;# 
   880  0393                     	;# 
   881  039A                     	;# 
   882  039C                     	;# 
   883  039D                     	;# 
   884  039E                     	;# 
   885  039F                     	;# 
   886  0FE4                     	;# 
   887  0FE5                     	;# 
   888  0FE6                     	;# 
   889  0FE7                     	;# 
   890  0FE8                     	;# 
   891  0FE9                     	;# 
   892  0FEA                     	;# 
   893  0FEB                     	;# 
   894  0FED                     	;# 
   895  0FEE                     	;# 
   896  0FEF                     	;# 
   897  0000                     	;# 
   898  0001                     	;# 
   899  0002                     	;# 
   900  0003                     	;# 
   901  0004                     	;# 
   902  0005                     	;# 
   903  0006                     	;# 
   904  0007                     	;# 
   905  0008                     	;# 
   906  0009                     	;# 
   907  000A                     	;# 
   908  000B                     	;# 
   909  000C                     	;# 
   910  000E                     	;# 
   911  0011                     	;# 
   912  0012                     	;# 
   913  0015                     	;# 
   914  0016                     	;# 
   915  0016                     	;# 
   916  0017                     	;# 
   917  0018                     	;# 
   918  0019                     	;# 
   919  001A                     	;# 
   920  001B                     	;# 
   921  001C                     	;# 
   922  001E                     	;# 
   923  001F                     	;# 
   924  008C                     	;# 
   925  008E                     	;# 
   926  0091                     	;# 
   927  0092                     	;# 
   928  0095                     	;# 
   929  0096                     	;# 
   930  0097                     	;# 
   931  0098                     	;# 
   932  0099                     	;# 
   933  009A                     	;# 
   934  009B                     	;# 
   935  009B                     	;# 
   936  009C                     	;# 
   937  009D                     	;# 
   938  009E                     	;# 
   939  010C                     	;# 
   940  010E                     	;# 
   941  0111                     	;# 
   942  0112                     	;# 
   943  0113                     	;# 
   944  0114                     	;# 
   945  0115                     	;# 
   946  0116                     	;# 
   947  0117                     	;# 
   948  0118                     	;# 
   949  0119                     	;# 
   950  011A                     	;# 
   951  011B                     	;# 
   952  011D                     	;# 
   953  011D                     	;# 
   954  018C                     	;# 
   955  018E                     	;# 
   956  0191                     	;# 
   957  0191                     	;# 
   958  0192                     	;# 
   959  0193                     	;# 
   960  0193                     	;# 
   961  0193                     	;# 
   962  0194                     	;# 
   963  0195                     	;# 
   964  0196                     	;# 
   965  0199                     	;# 
   966  019A                     	;# 
   967  019B                     	;# 
   968  019B                     	;# 
   969  019B                     	;# 
   970  019B                     	;# 
   971  019C                     	;# 
   972  019C                     	;# 
   973  019D                     	;# 
   974  019E                     	;# 
   975  019F                     	;# 
   976  020C                     	;# 
   977  020E                     	;# 
   978  0211                     	;# 
   979  0211                     	;# 
   980  0212                     	;# 
   981  0212                     	;# 
   982  0213                     	;# 
   983  0213                     	;# 
   984  0214                     	;# 
   985  0214                     	;# 
   986  0215                     	;# 
   987  0215                     	;# 
   988  0215                     	;# 
   989  0216                     	;# 
   990  0216                     	;# 
   991  0217                     	;# 
   992  0217                     	;# 
   993  0291                     	;# 
   994  0291                     	;# 
   995  0292                     	;# 
   996  0293                     	;# 
   997  0294                     	;# 
   998  0295                     	;# 
   999  0295                     	;# 
  1000  0296                     	;# 
  1001  0391                     	;# 
  1002  0392                     	;# 
  1003  0393                     	;# 
  1004  039A                     	;# 
  1005  039C                     	;# 
  1006  039D                     	;# 
  1007  039E                     	;# 
  1008  039F                     	;# 
  1009  0FE4                     	;# 
  1010  0FE5                     	;# 
  1011  0FE6                     	;# 
  1012  0FE7                     	;# 
  1013  0FE8                     	;# 
  1014  0FE9                     	;# 
  1015  0FEA                     	;# 
  1016  0FEB                     	;# 
  1017  0FED                     	;# 
  1018  0FEE                     	;# 
  1019  0FEF                     	;# 
  1020  0000                     	;# 
  1021  0001                     	;# 
  1022  0002                     	;# 
  1023  0003                     	;# 
  1024  0004                     	;# 
  1025  0005                     	;# 
  1026  0006                     	;# 
  1027  0007                     	;# 
  1028  0008                     	;# 
  1029  0009                     	;# 
  1030  000A                     	;# 
  1031  000B                     	;# 
  1032  000C                     	;# 
  1033  000E                     	;# 
  1034  0011                     	;# 
  1035  0012                     	;# 
  1036  0015                     	;# 
  1037  0016                     	;# 
  1038  0016                     	;# 
  1039  0017                     	;# 
  1040  0018                     	;# 
  1041  0019                     	;# 
  1042  001A                     	;# 
  1043  001B                     	;# 
  1044  001C                     	;# 
  1045  001E                     	;# 
  1046  001F                     	;# 
  1047  008C                     	;# 
  1048  008E                     	;# 
  1049  0091                     	;# 
  1050  0092                     	;# 
  1051  0095                     	;# 
  1052  0096                     	;# 
  1053  0097                     	;# 
  1054  0098                     	;# 
  1055  0099                     	;# 
  1056  009A                     	;# 
  1057  009B                     	;# 
  1058  009B                     	;# 
  1059  009C                     	;# 
  1060  009D                     	;# 
  1061  009E                     	;# 
  1062  010C                     	;# 
  1063  010E                     	;# 
  1064  0111                     	;# 
  1065  0112                     	;# 
  1066  0113                     	;# 
  1067  0114                     	;# 
  1068  0115                     	;# 
  1069  0116                     	;# 
  1070  0117                     	;# 
  1071  0118                     	;# 
  1072  0119                     	;# 
  1073  011A                     	;# 
  1074  011B                     	;# 
  1075  011D                     	;# 
  1076  011D                     	;# 
  1077  018C                     	;# 
  1078  018E                     	;# 
  1079  0191                     	;# 
  1080  0191                     	;# 
  1081  0192                     	;# 
  1082  0193                     	;# 
  1083  0193                     	;# 
  1084  0193                     	;# 
  1085  0194                     	;# 
  1086  0195                     	;# 
  1087  0196                     	;# 
  1088  0199                     	;# 
  1089  019A                     	;# 
  1090  019B                     	;# 
  1091  019B                     	;# 
  1092  019B                     	;# 
  1093  019B                     	;# 
  1094  019C                     	;# 
  1095  019C                     	;# 
  1096  019D                     	;# 
  1097  019E                     	;# 
  1098  019F                     	;# 
  1099  020C                     	;# 
  1100  020E                     	;# 
  1101  0211                     	;# 
  1102  0211                     	;# 
  1103  0212                     	;# 
  1104  0212                     	;# 
  1105  0213                     	;# 
  1106  0213                     	;# 
  1107  0214                     	;# 
  1108  0214                     	;# 
  1109  0215                     	;# 
  1110  0215                     	;# 
  1111  0215                     	;# 
  1112  0216                     	;# 
  1113  0216                     	;# 
  1114  0217                     	;# 
  1115  0217                     	;# 
  1116  0291                     	;# 
  1117  0291                     	;# 
  1118  0292                     	;# 
  1119  0293                     	;# 
  1120  0294                     	;# 
  1121  0295                     	;# 
  1122  0295                     	;# 
  1123  0296                     	;# 
  1124  0391                     	;# 
  1125  0392                     	;# 
  1126  0393                     	;# 
  1127  039A                     	;# 
  1128  039C                     	;# 
  1129  039D                     	;# 
  1130  039E                     	;# 
  1131  039F                     	;# 
  1132  0FE4                     	;# 
  1133  0FE5                     	;# 
  1134  0FE6                     	;# 
  1135  0FE7                     	;# 
  1136  0FE8                     	;# 
  1137  0FE9                     	;# 
  1138  0FEA                     	;# 
  1139  0FEB                     	;# 
  1140  0FED                     	;# 
  1141  0FEE                     	;# 
  1142  0FEF                     	;# 
  1143  0000                     	;# 
  1144  0001                     	;# 
  1145  0002                     	;# 
  1146  0003                     	;# 
  1147  0004                     	;# 
  1148  0005                     	;# 
  1149  0006                     	;# 
  1150  0007                     	;# 
  1151  0008                     	;# 
  1152  0009                     	;# 
  1153  000A                     	;# 
  1154  000B                     	;# 
  1155  000C                     	;# 
  1156  000E                     	;# 
  1157  0011                     	;# 
  1158  0012                     	;# 
  1159  0015                     	;# 
  1160  0016                     	;# 
  1161  0016                     	;# 
  1162  0017                     	;# 
  1163  0018                     	;# 
  1164  0019                     	;# 
  1165  001A                     	;# 
  1166  001B                     	;# 
  1167  001C                     	;# 
  1168  001E                     	;# 
  1169  001F                     	;# 
  1170  008C                     	;# 
  1171  008E                     	;# 
  1172  0091                     	;# 
  1173  0092                     	;# 
  1174  0095                     	;# 
  1175  0096                     	;# 
  1176  0097                     	;# 
  1177  0098                     	;# 
  1178  0099                     	;# 
  1179  009A                     	;# 
  1180  009B                     	;# 
  1181  009B                     	;# 
  1182  009C                     	;# 
  1183  009D                     	;# 
  1184  009E                     	;# 
  1185  010C                     	;# 
  1186  010E                     	;# 
  1187  0111                     	;# 
  1188  0112                     	;# 
  1189  0113                     	;# 
  1190  0114                     	;# 
  1191  0115                     	;# 
  1192  0116                     	;# 
  1193  0117                     	;# 
  1194  0118                     	;# 
  1195  0119                     	;# 
  1196  011A                     	;# 
  1197  011B                     	;# 
  1198  011D                     	;# 
  1199  011D                     	;# 
  1200  018C                     	;# 
  1201  018E                     	;# 
  1202  0191                     	;# 
  1203  0191                     	;# 
  1204  0192                     	;# 
  1205  0193                     	;# 
  1206  0193                     	;# 
  1207  0193                     	;# 
  1208  0194                     	;# 
  1209  0195                     	;# 
  1210  0196                     	;# 
  1211  0199                     	;# 
  1212  019A                     	;# 
  1213  019B                     	;# 
  1214  019B                     	;# 
  1215  019B                     	;# 
  1216  019B                     	;# 
  1217  019C                     	;# 
  1218  019C                     	;# 
  1219  019D                     	;# 
  1220  019E                     	;# 
  1221  019F                     	;# 
  1222  020C                     	;# 
  1223  020E                     	;# 
  1224  0211                     	;# 
  1225  0211                     	;# 
  1226  0212                     	;# 
  1227  0212                     	;# 
  1228  0213                     	;# 
  1229  0213                     	;# 
  1230  0214                     	;# 
  1231  0214                     	;# 
  1232  0215                     	;# 
  1233  0215                     	;# 
  1234  0215                     	;# 
  1235  0216                     	;# 
  1236  0216                     	;# 
  1237  0217                     	;# 
  1238  0217                     	;# 
  1239  0291                     	;# 
  1240  0291                     	;# 
  1241  0292                     	;# 
  1242  0293                     	;# 
  1243  0294                     	;# 
  1244  0295                     	;# 
  1245  0295                     	;# 
  1246  0296                     	;# 
  1247  0391                     	;# 
  1248  0392                     	;# 
  1249  0393                     	;# 
  1250  039A                     	;# 
  1251  039C                     	;# 
  1252  039D                     	;# 
  1253  039E                     	;# 
  1254  039F                     	;# 
  1255  0FE4                     	;# 
  1256  0FE5                     	;# 
  1257  0FE6                     	;# 
  1258  0FE7                     	;# 
  1259  0FE8                     	;# 
  1260  0FE9                     	;# 
  1261  0FEA                     	;# 
  1262  0FEB                     	;# 
  1263  0FED                     	;# 
  1264  0FEE                     	;# 
  1265  0FEF                     	;# 
  1266  000B                     _INTCONbits	set	11
  1267  0011                     _PIR1bits	set	17
  1268  001B                     _PR2	set	27
  1269  001C                     _T2CON	set	28
  1270  001C                     _T2CONbits	set	28
  1271  0015                     _TMR0	set	21
  1272  001A                     _TMR2	set	26
  1273  0095                     _OPTION_REG	set	149
  1274  0095                     _OPTION_REGbits	set	149
  1275  0099                     _OSCCON	set	153
  1276  009A                     _OSCSTAT	set	154
  1277  0098                     _OSCTUNE	set	152
  1278  0091                     _PIE1bits	set	145
  1279  008C                     _TRISA	set	140
  1280  008E                     _TRISC	set	142
  1281  04D6                     _PLLR	set	1238
  1282  011D                     _APFCON	set	285
  1283  010C                     _LATA	set	268
  1284  010E                     _LATC	set	270
  1285  0865                     _LATA5	set	2149
  1286  018C                     _ANSELA	set	396
  1287  018E                     _ANSELC	set	398
  1288  019F                     _BAUDCON	set	415
  1289  0192                     _EEADRH	set	402
  1290  0191                     _EEADRL	set	401
  1291  0195                     _EECON1bits	set	405
  1292  0196                     _EECON2	set	406
  1293  0194                     _EEDATH	set	404
  1294  0193                     _EEDATL	set	403
  1295  0199                     _RCREG	set	409
  1296  019D                     _RCSTA	set	413
  1297  019D                     _RCSTAbits	set	413
  1298  019C                     _SPBRGH	set	412
  1299  019B                     _SPBRGL	set	411
  1300  019A                     _TXREG	set	410
  1301  019E                     _TXSTA	set	414
  1302  020C                     _WPUA	set	524
  1303  020E                     _WPUC	set	526
  1304  0293                     _CCP1CON	set	659
  1305  0292                     _CCPR1H	set	658
  1306  0291                     _CCPR1L	set	657
  1307  0295                     _ECCP1AS	set	661
  1308  0296                     _PSTR1CON	set	662
  1309  0294                     _PWM1CON	set	660
  1310                           
  1311                           	psect	stringtext
  1312  0167                     __pstringtext:	
  1313  0167                     STR_1:	
  1314  0167  3424               	retlw	36	;'$'
  1315  0168  3450               	retlw	80	;'P'
  1316  0169  344D               	retlw	77	;'M'
  1317  016A  3454               	retlw	84	;'T'
  1318  016B  344B               	retlw	75	;'K'
  1319  016C  3433               	retlw	51	;'3'
  1320  016D  3431               	retlw	49	;'1'
  1321  016E  3434               	retlw	52	;'4'
  1322  016F  342C               	retlw	44	;','
  1323  0170  3430               	retlw	48	;'0'
  1324  0171  342C               	retlw	44	;','
  1325  0172  3430               	retlw	48	;'0'
  1326  0173  342C               	retlw	44	;','
  1327  0174  3431               	retlw	49	;'1'
  1328  0175  342C               	retlw	44	;','
  1329  0176  3430               	retlw	48	;'0'
  1330  0177  342C               	retlw	44	;','
  1331  0178  3430               	retlw	48	;'0'
  1332  0179  342C               	retlw	44	;','
  1333  017A  3430               	retlw	48	;'0'
  1334  017B  342C               	retlw	44	;','
  1335  017C  3430               	retlw	48	;'0'
  1336  017D  342C               	retlw	44	;','
  1337  017E  3430               	retlw	48	;'0'
  1338  017F  342C               	retlw	44	;','
  1339  0180  3430               	retlw	48	;'0'
  1340  0181  342C               	retlw	44	;','
  1341  0182  3430               	retlw	48	;'0'
  1342  0183  342C               	retlw	44	;','
  1343  0184  3430               	retlw	48	;'0'
  1344  0185  342C               	retlw	44	;','
  1345  0186  3430               	retlw	48	;'0'
  1346  0187  342C               	retlw	44	;','
  1347  0188  3430               	retlw	48	;'0'
  1348  0189  342C               	retlw	44	;','
  1349  018A  3430               	retlw	48	;'0'
  1350  018B  342C               	retlw	44	;','
  1351  018C  3430               	retlw	48	;'0'
  1352  018D  342C               	retlw	44	;','
  1353  018E  3430               	retlw	48	;'0'
  1354  018F  342C               	retlw	44	;','
  1355  0190  3430               	retlw	48	;'0'
  1356  0191  342C               	retlw	44	;','
  1357  0192  3430               	retlw	48	;'0'
  1358  0193  342C               	retlw	44	;','
  1359  0194  3430               	retlw	48	;'0'
  1360  0195  342A               	retlw	42	;'*'
  1361  0196  3432               	retlw	50	;'2'
  1362  0197  3439               	retlw	57	;'9'
  1363  0198  340D               	retlw	13
  1364  0199  340A               	retlw	10
  1365  019A  3400               	retlw	0
  1366  019B                     STR_2:	
  1367  019B  3424               	retlw	36	;'$'
  1368  019C  3450               	retlw	80	;'P'
  1369  019D  344D               	retlw	77	;'M'
  1370  019E  3454               	retlw	84	;'T'
  1371  019F  344B               	retlw	75	;'K'
  1372  01A0  3432               	retlw	50	;'2'
  1373  01A1  3432               	retlw	50	;'2'
  1374  01A2  3430               	retlw	48	;'0'
  1375  01A3  342C               	retlw	44	;','
  1376  01A4  3431               	retlw	49	;'1'
  1377  01A5  3430               	retlw	48	;'0'
  1378  01A6  3430               	retlw	48	;'0'
  1379  01A7  342A               	retlw	42	;'*'
  1380  01A8  3432               	retlw	50	;'2'
  1381  01A9  3446               	retlw	70	;'F'
  1382  01AA  340D               	retlw	13
  1383  01AB  340A               	retlw	10
  1384  01AC  3400               	retlw	0
  1385                           
  1386                           ; #config settings
  1387  0000                     
  1388                           	psect	cinit
  1389  0025                     start_initialization:	
  1390  0025                     __initialization:	
  1391                           
  1392                           ; Clear objects allocated to COMMON
  1393  0025  01FA               	clrf	__pbssCOMMON& (0+127)
  1394  0026  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1395                           
  1396                           ; Clear objects allocated to BANK0
  1397  0027  3020               	movlw	low __pbssBANK0
  1398  0028  0084               	movwf	4
  1399  0029  3000               	movlw	high __pbssBANK0
  1400  002A  0085               	movwf	5
  1401  002B  301F               	movlw	31
  1402  002C  233F               	fcall	clear_ram0
  1403  002D                     end_of_initialization:	
  1404                           ;End of C runtime variable initialization code
  1405                           
  1406  002D                     __end_of__initialization:	
  1407  002D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1408  002E  0020               	movlb	0
  1409  002F  2830               	ljmp	_main	;jump to C main() function
  1410                           
  1411                           	psect	bssCOMMON
  1412  007A                     __pbssCOMMON:	
  1413  007A                     _eusartRxCount:	
  1414  007A                     	ds	1
  1415  007B                     _eusartTxBufferRemaining:	
  1416  007B                     	ds	1
  1417                           
  1418                           	psect	bssBANK0
  1419  0020                     __pbssBANK0:	
  1420  0020                     _eusartRxBuffer:	
  1421  0020                     	ds	8
  1422  0028                     _eusartTxBuffer:	
  1423  0028                     	ds	8
  1424  0030                     _speed:	
  1425  0030                     	ds	3
  1426  0033                     TMR0_ISR@CountCallBack:	
  1427  0033                     	ds	2
  1428  0035                     _TMR0_InterruptHandler:	
  1429  0035                     	ds	2
  1430  0037                     _LED_counter:	
  1431  0037                     	ds	1
  1432  0038                     _LED_state:	
  1433  0038                     	ds	1
  1434  0039                     _eusartRxHead:	
  1435  0039                     	ds	1
  1436  003A                     _eusartRxTail:	
  1437  003A                     	ds	1
  1438  003B                     _eusartTxHead:	
  1439  003B                     	ds	1
  1440  003C                     _eusartTxTail:	
  1441  003C                     	ds	1
  1442  003D                     _speed_units:	
  1443  003D                     	ds	1
  1444  003E                     _timer0ReloadVal:	
  1445  003E                     	ds	1
  1446                           
  1447                           	psect	clrtext
  1448  033F                     clear_ram0:	
  1449                           ;	Called with FSR0 containing the base address, and
  1450                           ;	WREG with the size to clear
  1451                           
  1452  033F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1453  0340                     clrloop0:	
  1454  0340  0180               	clrf	0	;clear RAM location pointed to by FSR
  1455  0341  3101               	addfsr 0,1
  1456  0342  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1457  0343  2B40               	goto	clrloop0	;have we reached the end yet?
  1458  0344  3400               	retlw	0	;all done for this memory range, return
  1459                           
  1460                           	psect	cstackCOMMON
  1461  0070                     __pcstackCOMMON:	
  1462  0070                     ?_TMR2_StartTimer:	
  1463  0070                     ?_OSCILLATOR_Initialize:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466  0070                     ?_TMR0_Initialize:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469  0070                     ?_TMR0_ISR:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472  0070                     ?_my10msTimerISR:	
  1473                           ; 1 bytes @ 0x0
  1474                           
  1475  0070                     ?_LED_set_state:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478  0070                     ?_LED_update_loop:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481  0070                     ??_LED_update_loop:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484  0070                     ?_TMR0_DefaultInterruptHandler:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487  0070                     ??_TMR0_DefaultInterruptHandler:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490  0070                     ?_TMR0_CallBack:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493  0070                     ?_TMR2_Initialize:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496  0070                     ?_EUSART_Initialize:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499  0070                     ?_EUSART_Write:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502  0070                     ?_putch:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  0070                     ?_EUSART_Transmit_ISR:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0070                     ??_EUSART_Transmit_ISR:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0070                     ?_EUSART_Receive_ISR:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ??_EUSART_Receive_ISR:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ?_EPWM_Initialize:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ?_PIN_MANAGER_Initialize:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ?_SYSTEM_Initialize:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ?_INTERRUPT_InterruptManager:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ?_GPS_Initialize:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ?_main:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535                           
  1536                           ; 1 bytes @ 0x0
  1537  0070                     	ds	1
  1538  0071                     ??_TMR0_ISR:	
  1539  0071                     ??_my10msTimerISR:	
  1540                           ; 1 bytes @ 0x1
  1541                           
  1542  0071                     ??_TMR0_CallBack:	
  1543                           ; 1 bytes @ 0x1
  1544                           
  1545  0071                     ??_INTERRUPT_InterruptManager:	
  1546                           ; 1 bytes @ 0x1
  1547                           
  1548                           
  1549                           ; 1 bytes @ 0x1
  1550  0071                     	ds	1
  1551  0072                     ??_TMR2_StartTimer:	
  1552  0072                     ??_OSCILLATOR_Initialize:	
  1553                           ; 1 bytes @ 0x2
  1554                           
  1555  0072                     ?_TMR0_SetInterruptHandler:	
  1556                           ; 1 bytes @ 0x2
  1557                           
  1558  0072                     ??_LED_set_state:	
  1559                           ; 1 bytes @ 0x2
  1560                           
  1561  0072                     ??_TMR2_Initialize:	
  1562                           ; 1 bytes @ 0x2
  1563                           
  1564  0072                     ??_EUSART_Initialize:	
  1565                           ; 1 bytes @ 0x2
  1566                           
  1567  0072                     ??_EUSART_Write:	
  1568                           ; 1 bytes @ 0x2
  1569                           
  1570  0072                     ??_EPWM_Initialize:	
  1571                           ; 1 bytes @ 0x2
  1572                           
  1573  0072                     ?_EPWM_LoadDutyValue:	
  1574                           ; 1 bytes @ 0x2
  1575                           
  1576  0072                     ??_PIN_MANAGER_Initialize:	
  1577                           ; 1 bytes @ 0x2
  1578                           
  1579  0072                     LED_set_state@new_state:	
  1580                           ; 1 bytes @ 0x2
  1581                           
  1582  0072                     EPWM_LoadDutyValue@dutyValue:	
  1583                           ; 1 bytes @ 0x2
  1584                           
  1585  0072                     TMR0_SetInterruptHandler@InterruptHandler:	
  1586                           ; 2 bytes @ 0x2
  1587                           
  1588                           
  1589                           ; 2 bytes @ 0x2
  1590  0072                     	ds	1
  1591  0073                     EUSART_Write@txData:	
  1592                           
  1593                           ; 1 bytes @ 0x3
  1594  0073                     	ds	1
  1595  0074                     ??_TMR0_Initialize:	
  1596  0074                     ??_TMR0_SetInterruptHandler:	
  1597                           ; 1 bytes @ 0x4
  1598                           
  1599  0074                     ??_putch:	
  1600                           ; 1 bytes @ 0x4
  1601                           
  1602  0074                     ??_EPWM_LoadDutyValue:	
  1603                           ; 1 bytes @ 0x4
  1604                           
  1605  0074                     putch@txData:	
  1606                           ; 1 bytes @ 0x4
  1607                           
  1608                           
  1609                           ; 1 bytes @ 0x4
  1610  0074                     	ds	1
  1611  0075                     ??_SYSTEM_Initialize:	
  1612  0075                     ?_printf:	
  1613                           ; 1 bytes @ 0x5
  1614                           
  1615  0075                     printf@f:	
  1616                           ; 2 bytes @ 0x5
  1617                           
  1618                           
  1619                           ; 2 bytes @ 0x5
  1620  0075                     	ds	2
  1621  0077                     ??_printf:	
  1622                           
  1623                           ; 1 bytes @ 0x7
  1624  0077                     	ds	3
  1625                           
  1626                           	psect	cstackBANK0
  1627  003F                     __pcstackBANK0:	
  1628  003F                     printf@ap:	
  1629                           
  1630                           ; 1 bytes @ 0x0
  1631  003F                     	ds	1
  1632  0040                     printf@c:	
  1633                           
  1634                           ; 1 bytes @ 0x1
  1635  0040                     	ds	1
  1636  0041                     ??_GPS_Initialize:	
  1637                           
  1638                           ; 1 bytes @ 0x2
  1639  0041                     	ds	3
  1640  0044                     GPS_Initialize@tmp:	
  1641                           
  1642                           ; 1 bytes @ 0x5
  1643  0044                     	ds	1
  1644  0045                     ??_main:	
  1645                           
  1646                           ; 1 bytes @ 0x6
  1647  0045                     	ds	3
  1648  0048                     main@up:	
  1649                           
  1650                           ; 1 bytes @ 0x9
  1651  0048                     	ds	1
  1652  0049                     main@tmp:	
  1653                           
  1654                           ; 1 bytes @ 0xA
  1655  0049                     	ds	1
  1656  004A                     main@tmp_516:	
  1657                           
  1658                           ; 1 bytes @ 0xB
  1659  004A                     	ds	1
  1660  004B                     main@tmp_517:	
  1661                           
  1662                           ; 1 bytes @ 0xC
  1663  004B                     	ds	1
  1664  004C                     main@tmp_518:	
  1665                           
  1666                           ; 1 bytes @ 0xD
  1667  004C                     	ds	1
  1668  004D                     main@tmp_521:	
  1669                           
  1670                           ; 1 bytes @ 0xE
  1671  004D                     	ds	1
  1672  004E                     main@tmp_524:	
  1673                           
  1674                           ; 1 bytes @ 0xF
  1675  004E                     	ds	1
  1676  004F                     main@tmp_525:	
  1677                           
  1678                           ; 1 bytes @ 0x10
  1679  004F                     	ds	1
  1680  0050                     main@motor_load:	
  1681                           
  1682                           ; 2 bytes @ 0x11
  1683  0050                     	ds	2
  1684                           
  1685                           	psect	maintext
  1686  0030                     __pmaintext:	
  1687 ;;
  1688 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1689 ;;
  1690 ;; *************** function _main *****************
  1691 ;; Defined at:
  1692 ;;		line 106 in file "main.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  tmp             1   16[BANK0 ] unsigned char 
  1697 ;;  tmp             1   15[BANK0 ] unsigned char 
  1698 ;;  tmp             1   14[BANK0 ] unsigned char 
  1699 ;;  tmp             1   13[BANK0 ] unsigned char 
  1700 ;;  tmp             1   12[BANK0 ] unsigned char 
  1701 ;;  tmp             1   11[BANK0 ] unsigned char 
  1702 ;;  tmp             1   10[BANK0 ] unsigned char 
  1703 ;;  motor_load      2   17[BANK0 ] unsigned int 
  1704 ;;  up              1    9[BANK0 ] unsigned char 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : B1F/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0   BANK1
  1714 ;;      Params:         0       0       0
  1715 ;;      Locals:         0      10       0
  1716 ;;      Temps:          0       3       0
  1717 ;;      Totals:         0      13       0
  1718 ;;Total ram usage:       13 bytes
  1719 ;; Hardware stack levels required when called:    9
  1720 ;; This function calls:
  1721 ;;		_EPWM_LoadDutyValue
  1722 ;;		_GPS_Initialize
  1723 ;;		_LED_set_state
  1724 ;;		_SYSTEM_Initialize
  1725 ;;		_TMR0_SetInterruptHandler
  1726 ;;		_TMR2_StartTimer
  1727 ;; This function is called by:
  1728 ;;		Startup code after reset
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           
  1733                           ;psect for function _main
  1734  0030                     _main:	
  1735                           
  1736                           ;main.c: 109: SYSTEM_Initialize();
  1737                           
  1738                           ;incstack = 0
  1739                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1740  0030  2338               	fcall	_SYSTEM_Initialize
  1741                           
  1742                           ;main.c: 110: TMR0_SetInterruptHandler(my10msTimerISR);
  1743  0031  3052               	movlw	low _my10msTimerISR
  1744  0032  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1745  0033  3003               	movlw	high _my10msTimerISR
  1746  0034  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1747  0035  2345               	fcall	_TMR0_SetInterruptHandler
  1748                           
  1749                           ;main.c: 116: (INTCONbits.GIE = 1);
  1750  0036  178B               	bsf	11,7	;volatile
  1751                           
  1752                           ;main.c: 119: (INTCONbits.PEIE = 1);
  1753  0037  170B               	bsf	11,6	;volatile
  1754                           
  1755                           ;main.c: 170: LED_set_state(always_on);
  1756  0038  3000               	movlw	0
  1757  0039  22A1               	fcall	_LED_set_state
  1758                           
  1759                           ;main.c: 171: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  1760  003A  0020               	movlb	0	; select bank0
  1761  003B  01C9               	clrf	main@tmp
  1762  003C  3032               	movlw	50
  1763  003D  0249               	subwf	main@tmp,w
  1764  003E  1803               	btfsc	3,0
  1765  003F  2855               	goto	l1901
  1766  0040                     l1895:	
  1767  0040  3005               	movlw	5
  1768  0041  00C7               	movwf	??_main+2
  1769  0042  300F               	movlw	15
  1770  0043  00C6               	movwf	??_main+1
  1771  0044  30F4               	movlw	244
  1772  0045  00C5               	movwf	??_main
  1773  0046                     u1397:	
  1774  0046  0BC5               	decfsz	??_main,f
  1775  0047  2846               	goto	u1397
  1776  0048  0BC6               	decfsz	??_main+1,f
  1777  0049  2846               	goto	u1397
  1778  004A  0BC7               	decfsz	??_main+2,f
  1779  004B  2846               	goto	u1397
  1780  004C  3001               	movlw	1
  1781  004D  0020               	movlb	0	; select bank0
  1782  004E  00C5               	movwf	??_main
  1783  004F  0845               	movf	??_main,w
  1784  0050  07C9               	addwf	main@tmp,f
  1785  0051  3032               	movlw	50
  1786  0052  0249               	subwf	main@tmp,w
  1787  0053  1C03               	skipc
  1788  0054  2840               	goto	l1895
  1789  0055                     l1901:	
  1790                           
  1791                           ;main.c: 172: LED_set_state(always_off);
  1792  0055  3001               	movlw	1
  1793  0056  22A1               	fcall	_LED_set_state
  1794                           
  1795                           ;main.c: 173: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  1796  0057  0020               	movlb	0	; select bank0
  1797  0058  01CA               	clrf	main@tmp_516
  1798  0059  3032               	movlw	50
  1799  005A  024A               	subwf	main@tmp_516,w
  1800  005B  1803               	btfsc	3,0
  1801  005C  2872               	goto	l1915
  1802  005D                     l1909:	
  1803  005D  3005               	movlw	5
  1804  005E  00C7               	movwf	??_main+2
  1805  005F  300F               	movlw	15
  1806  0060  00C6               	movwf	??_main+1
  1807  0061  30F4               	movlw	244
  1808  0062  00C5               	movwf	??_main
  1809  0063                     u1407:	
  1810  0063  0BC5               	decfsz	??_main,f
  1811  0064  2863               	goto	u1407
  1812  0065  0BC6               	decfsz	??_main+1,f
  1813  0066  2863               	goto	u1407
  1814  0067  0BC7               	decfsz	??_main+2,f
  1815  0068  2863               	goto	u1407
  1816  0069  3001               	movlw	1
  1817  006A  0020               	movlb	0	; select bank0
  1818  006B  00C5               	movwf	??_main
  1819  006C  0845               	movf	??_main,w
  1820  006D  07CA               	addwf	main@tmp_516,f
  1821  006E  3032               	movlw	50
  1822  006F  024A               	subwf	main@tmp_516,w
  1823  0070  1C03               	skipc
  1824  0071  285D               	goto	l1909
  1825  0072                     l1915:	
  1826                           
  1827                           ;main.c: 174: LED_set_state(slow_blinking);
  1828  0072  3002               	movlw	2
  1829  0073  22A1               	fcall	_LED_set_state
  1830                           
  1831                           ;main.c: 175: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  1832  0074  0020               	movlb	0	; select bank0
  1833  0075  01CB               	clrf	main@tmp_517
  1834  0076  3032               	movlw	50
  1835  0077  024B               	subwf	main@tmp_517,w
  1836  0078  1803               	btfsc	3,0
  1837  0079  288F               	goto	l1929
  1838  007A                     l1923:	
  1839  007A  3005               	movlw	5
  1840  007B  00C7               	movwf	??_main+2
  1841  007C  300F               	movlw	15
  1842  007D  00C6               	movwf	??_main+1
  1843  007E  30F4               	movlw	244
  1844  007F  00C5               	movwf	??_main
  1845  0080                     u1417:	
  1846  0080  0BC5               	decfsz	??_main,f
  1847  0081  2880               	goto	u1417
  1848  0082  0BC6               	decfsz	??_main+1,f
  1849  0083  2880               	goto	u1417
  1850  0084  0BC7               	decfsz	??_main+2,f
  1851  0085  2880               	goto	u1417
  1852  0086  3001               	movlw	1
  1853  0087  0020               	movlb	0	; select bank0
  1854  0088  00C5               	movwf	??_main
  1855  0089  0845               	movf	??_main,w
  1856  008A  07CB               	addwf	main@tmp_517,f
  1857  008B  3032               	movlw	50
  1858  008C  024B               	subwf	main@tmp_517,w
  1859  008D  1C03               	skipc
  1860  008E  287A               	goto	l1923
  1861  008F                     l1929:	
  1862                           
  1863                           ;main.c: 176: LED_set_state(fast_blinking);
  1864  008F  3003               	movlw	3
  1865  0090  22A1               	fcall	_LED_set_state
  1866                           
  1867                           ;main.c: 177: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  1868  0091  0020               	movlb	0	; select bank0
  1869  0092  01CC               	clrf	main@tmp_518
  1870  0093  3032               	movlw	50
  1871  0094  024C               	subwf	main@tmp_518,w
  1872  0095  1803               	btfsc	3,0
  1873  0096  28AC               	goto	l310
  1874  0097                     l1937:	
  1875  0097  3005               	movlw	5
  1876  0098  00C7               	movwf	??_main+2
  1877  0099  300F               	movlw	15
  1878  009A  00C6               	movwf	??_main+1
  1879  009B  30F4               	movlw	244
  1880  009C  00C5               	movwf	??_main
  1881  009D                     u1427:	
  1882  009D  0BC5               	decfsz	??_main,f
  1883  009E  289D               	goto	u1427
  1884  009F  0BC6               	decfsz	??_main+1,f
  1885  00A0  289D               	goto	u1427
  1886  00A1  0BC7               	decfsz	??_main+2,f
  1887  00A2  289D               	goto	u1427
  1888  00A3  3001               	movlw	1
  1889  00A4  0020               	movlb	0	; select bank0
  1890  00A5  00C5               	movwf	??_main
  1891  00A6  0845               	movf	??_main,w
  1892  00A7  07CC               	addwf	main@tmp_518,f
  1893  00A8  3032               	movlw	50
  1894  00A9  024C               	subwf	main@tmp_518,w
  1895  00AA  1C03               	skipc
  1896  00AB  2897               	goto	l1937
  1897  00AC                     l310:	
  1898                           ;main.c: 180: {}
  1899                           
  1900                           ;main.c: 179: while(1)
  1901                           
  1902  00AC  28AC               	goto	l310
  1903  00AD                     l1953:	
  1904                           ;main.c: 188: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  1905                           
  1906                           ;main.c: 187: TMR2_StartTimer();
  1907                           
  1908                           ;main.c: 186: EPWM_LoadDutyValue(1023);
  1909                           
  1910                           ;main.c: 185: uint16_t motor_load = 0;
  1911                           
  1912  00AD  3005               	movlw	5
  1913  00AE  00C7               	movwf	??_main+2
  1914  00AF  300F               	movlw	15
  1915  00B0  00C6               	movwf	??_main+1
  1916  00B1  30F4               	movlw	244
  1917  00B2  00C5               	movwf	??_main
  1918  00B3                     u1437:	
  1919  00B3  0BC5               	decfsz	??_main,f
  1920  00B4  28B3               	goto	u1437
  1921  00B5  0BC6               	decfsz	??_main+1,f
  1922  00B6  28B3               	goto	u1437
  1923  00B7  0BC7               	decfsz	??_main+2,f
  1924  00B8  28B3               	goto	u1437
  1925  00B9  3001               	movlw	1
  1926  00BA  0020               	movlb	0	; select bank0
  1927  00BB  00C5               	movwf	??_main
  1928  00BC  0845               	movf	??_main,w
  1929  00BD  07CD               	addwf	main@tmp_521,f
  1930  00BE  3032               	movlw	50
  1931  00BF  024D               	subwf	main@tmp_521,w
  1932  00C0  1C03               	skipc
  1933  00C1  28AD               	goto	l1953
  1934                           
  1935                           ;main.c: 190: GPS_Initialize();
  1936  00C2  21AD               	fcall	_GPS_Initialize
  1937                           
  1938                           ;main.c: 191: bool up = 1;
  1939  00C3  0020               	movlb	0	; select bank0
  1940  00C4  01C8               	clrf	main@up
  1941  00C5  0AC8               	incf	main@up,f
  1942                           
  1943                           ;main.c: 211: EPWM_LoadDutyValue(0);
  1944  00C6  3000               	movlw	0
  1945  00C7  00F2               	movwf	EPWM_LoadDutyValue@dutyValue
  1946  00C8  00F3               	movwf	EPWM_LoadDutyValue@dutyValue+1
  1947  00C9  22BB               	fcall	_EPWM_LoadDutyValue
  1948                           
  1949                           ;main.c: 212: _delay((unsigned long)((10)*(32000000/4000.0)));
  1950  00CA  3068               	movlw	104
  1951  00CB  0020               	movlb	0	; select bank0
  1952  00CC  00C6               	movwf	??_main+1
  1953  00CD  30E4               	movlw	228
  1954  00CE  00C5               	movwf	??_main
  1955  00CF                     u1447:	
  1956  00CF  0BC5               	decfsz	??_main,f
  1957  00D0  28CF               	goto	u1447
  1958  00D1  0BC6               	decfsz	??_main+1,f
  1959  00D2  28CF               	goto	u1447
  1960  00D3  0000               	nop
  1961                           
  1962                           ;main.c: 213: EPWM_LoadDutyValue(1023-148);
  1963  00D4  306B               	movlw	107
  1964  00D5  00F2               	movwf	EPWM_LoadDutyValue@dutyValue
  1965  00D6  3003               	movlw	3
  1966  00D7  00F3               	movwf	EPWM_LoadDutyValue@dutyValue+1
  1967  00D8  22BB               	fcall	_EPWM_LoadDutyValue
  1968                           
  1969                           ;main.c: 214: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  1970  00D9  0020               	movlb	0	; select bank0
  1971  00DA  01CE               	clrf	main@tmp_524
  1972  00DB  3032               	movlw	50
  1973  00DC  024E               	subwf	main@tmp_524,w
  1974  00DD  1803               	btfsc	3,0
  1975  00DE  28F4               	goto	l1981
  1976  00DF                     l1975:	
  1977  00DF  3005               	movlw	5
  1978  00E0  00C7               	movwf	??_main+2
  1979  00E1  300F               	movlw	15
  1980  00E2  00C6               	movwf	??_main+1
  1981  00E3  30F4               	movlw	244
  1982  00E4  00C5               	movwf	??_main
  1983  00E5                     u1457:	
  1984  00E5  0BC5               	decfsz	??_main,f
  1985  00E6  28E5               	goto	u1457
  1986  00E7  0BC6               	decfsz	??_main+1,f
  1987  00E8  28E5               	goto	u1457
  1988  00E9  0BC7               	decfsz	??_main+2,f
  1989  00EA  28E5               	goto	u1457
  1990  00EB  3001               	movlw	1
  1991  00EC  0020               	movlb	0	; select bank0
  1992  00ED  00C5               	movwf	??_main
  1993  00EE  0845               	movf	??_main,w
  1994  00EF  07CE               	addwf	main@tmp_524,f
  1995  00F0  3032               	movlw	50
  1996  00F1  024E               	subwf	main@tmp_524,w
  1997  00F2  1C03               	skipc
  1998  00F3  28DF               	goto	l1975
  1999  00F4                     l1981:	
  2000                           ;main.c: 215: while (1)
  2001                           
  2002                           
  2003                           ;main.c: 216: {
  2004                           ;main.c: 217: if (up == 1)
  2005  00F4  0020               	movlb	0	; select bank0
  2006  00F5  0348               	decf	main@up,w
  2007  00F6  1D03               	btfss	3,2
  2008  00F7  28FD               	goto	l1985
  2009                           
  2010                           ;main.c: 218: motor_load += 1;
  2011  00F8  3001               	movlw	1
  2012  00F9  07D0               	addwf	main@motor_load,f
  2013  00FA  3000               	movlw	0
  2014  00FB  3DD1               	addwfc	main@motor_load+1,f
  2015  00FC  2901               	goto	l318
  2016  00FD                     l1985:	
  2017                           
  2018                           ;main.c: 219: else
  2019                           ;main.c: 220: motor_load -= 1;
  2020  00FD  3001               	movlw	1
  2021  00FE  02D0               	subwf	main@motor_load,f
  2022  00FF  3000               	movlw	0
  2023  0100  3BD1               	subwfb	main@motor_load+1,f
  2024  0101                     l318:	
  2025                           
  2026                           ;main.c: 221: if (motor_load > 300)
  2027  0101  3001               	movlw	1
  2028  0102  0251               	subwf	main@motor_load+1,w
  2029  0103  302D               	movlw	45
  2030  0104  1903               	skipnz
  2031  0105  0250               	subwf	main@motor_load,w
  2032  0106  1C03               	skipc
  2033  0107  290A               	goto	l1989
  2034                           
  2035                           ;main.c: 222: up = 0;
  2036  0108  01C8               	clrf	main@up
  2037  0109  293E               	goto	l2011
  2038  010A                     l1989:	
  2039                           
  2040                           ;main.c: 223: else if (motor_load == 0)
  2041  010A  0850               	movf	main@motor_load,w
  2042  010B  0451               	iorwf	main@motor_load+1,w
  2043  010C  1D03               	btfss	3,2
  2044  010D  293E               	goto	l2011
  2045                           
  2046                           ;main.c: 224: {
  2047                           ;main.c: 225: up = 1;
  2048  010E  01C8               	clrf	main@up
  2049  010F  0AC8               	incf	main@up,f
  2050                           
  2051                           ;main.c: 226: EPWM_LoadDutyValue(1023);
  2052  0110  30FF               	movlw	255
  2053  0111  00F2               	movwf	EPWM_LoadDutyValue@dutyValue
  2054  0112  3003               	movlw	3
  2055  0113  00F3               	movwf	EPWM_LoadDutyValue@dutyValue+1
  2056  0114  22BB               	fcall	_EPWM_LoadDutyValue
  2057                           
  2058                           ;main.c: 227: for(unsigned char tmp=0;tmp<(10*5);tmp++){_delay((unsigned long)((100)*(32
      +                          000000/4000.0)));};
  2059  0115  0020               	movlb	0	; select bank0
  2060  0116  01CF               	clrf	main@tmp_525
  2061  0117  3032               	movlw	50
  2062  0118  024F               	subwf	main@tmp_525,w
  2063  0119  1803               	btfsc	3,0
  2064  011A  2930               	goto	l2007
  2065  011B                     l2001:	
  2066  011B  3005               	movlw	5
  2067  011C  00C7               	movwf	??_main+2
  2068  011D  300F               	movlw	15
  2069  011E  00C6               	movwf	??_main+1
  2070  011F  30F4               	movlw	244
  2071  0120  00C5               	movwf	??_main
  2072  0121                     u1467:	
  2073  0121  0BC5               	decfsz	??_main,f
  2074  0122  2921               	goto	u1467
  2075  0123  0BC6               	decfsz	??_main+1,f
  2076  0124  2921               	goto	u1467
  2077  0125  0BC7               	decfsz	??_main+2,f
  2078  0126  2921               	goto	u1467
  2079  0127  3001               	movlw	1
  2080  0128  0020               	movlb	0	; select bank0
  2081  0129  00C5               	movwf	??_main
  2082  012A  0845               	movf	??_main,w
  2083  012B  07CF               	addwf	main@tmp_525,f
  2084  012C  3032               	movlw	50
  2085  012D  024F               	subwf	main@tmp_525,w
  2086  012E  1C03               	skipc
  2087  012F  291B               	goto	l2001
  2088  0130                     l2007:	
  2089                           
  2090                           ;main.c: 229: EPWM_LoadDutyValue(0);
  2091  0130  3000               	movlw	0
  2092  0131  00F2               	movwf	EPWM_LoadDutyValue@dutyValue
  2093  0132  00F3               	movwf	EPWM_LoadDutyValue@dutyValue+1
  2094  0133  22BB               	fcall	_EPWM_LoadDutyValue
  2095                           
  2096                           ;main.c: 230: _delay((unsigned long)((10)*(32000000/4000.0)));
  2097  0134  3068               	movlw	104
  2098  0135  0020               	movlb	0	; select bank0
  2099  0136  00C6               	movwf	??_main+1
  2100  0137  30E4               	movlw	228
  2101  0138  00C5               	movwf	??_main
  2102  0139                     u1477:	
  2103  0139  0BC5               	decfsz	??_main,f
  2104  013A  2939               	goto	u1477
  2105  013B  0BC6               	decfsz	??_main+1,f
  2106  013C  2939               	goto	u1477
  2107  013D  0000               	nop
  2108  013E                     l2011:	
  2109                           
  2110                           ;main.c: 231: }
  2111                           ;main.c: 232: if (motor_load < 148)
  2112  013E  3000               	movlw	0
  2113  013F  0020               	movlb	0	; select bank0
  2114  0140  0251               	subwf	main@motor_load+1,w
  2115  0141  3094               	movlw	148
  2116  0142  1903               	skipnz
  2117  0143  0250               	subwf	main@motor_load,w
  2118  0144  1803               	skipnc
  2119  0145  294A               	goto	l2015
  2120                           
  2121                           ;main.c: 233: EPWM_LoadDutyValue(1023-135);
  2122  0146  3078               	movlw	120
  2123  0147  00F2               	movwf	EPWM_LoadDutyValue@dutyValue
  2124  0148  3003               	movlw	3
  2125  0149  2957               	goto	L1
  2126  014A                     l2015:	
  2127                           
  2128                           ;main.c: 234: else
  2129                           ;main.c: 235: EPWM_LoadDutyValue(1023-motor_load);
  2130  014A  0020               	movlb	0	; select bank0
  2131  014B  0950               	comf	main@motor_load,w
  2132  014C  00C5               	movwf	??_main
  2133  014D  0951               	comf	main@motor_load+1,w
  2134  014E  00C6               	movwf	??_main+1
  2135  014F  0AC5               	incf	??_main,f
  2136  0150  1903               	skipnz
  2137  0151  0AC6               	incf	??_main+1,f
  2138  0152  0845               	movf	??_main,w
  2139  0153  3EFF               	addlw	255
  2140  0154  00F2               	movwf	EPWM_LoadDutyValue@dutyValue
  2141  0155  3003               	movlw	3
  2142  0156  3D46               	addwfc	??_main+1,w
  2143  0157                     L1:	
  2144  0157  00F3               	movwf	EPWM_LoadDutyValue@dutyValue+1
  2145  0158  22BB               	fcall	_EPWM_LoadDutyValue
  2146                           
  2147                           ;main.c: 236: _delay((unsigned long)((50)*(32000000/4000.0)));
  2148  0159  3003               	movlw	3
  2149  015A  0020               	movlb	0	; select bank0
  2150  015B  00C7               	movwf	??_main+2
  2151  015C  3008               	movlw	8
  2152  015D  00C6               	movwf	??_main+1
  2153  015E  3078               	movlw	120
  2154  015F  00C5               	movwf	??_main
  2155  0160                     u1487:	
  2156  0160  0BC5               	decfsz	??_main,f
  2157  0161  2960               	goto	u1487
  2158  0162  0BC6               	decfsz	??_main+1,f
  2159  0163  2960               	goto	u1487
  2160  0164  0BC7               	decfsz	??_main+2,f
  2161  0165  2960               	goto	u1487
  2162  0166  28F4               	goto	l1981
  2163  0167                     __end_of_main:	
  2164                           
  2165                           	psect	text1
  2166  0338                     __ptext1:	
  2167 ;; *************** function _SYSTEM_Initialize *****************
  2168 ;; Defined at:
  2169 ;;		line 69 in file "mcc_generated_files/mcc.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0, pclath, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1
  2183 ;;      Params:         0       0       0
  2184 ;;      Locals:         0       0       0
  2185 ;;      Temps:          0       0       0
  2186 ;;      Totals:         0       0       0
  2187 ;;Total ram usage:        0 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    7
  2190 ;; This function calls:
  2191 ;;		_EPWM_Initialize
  2192 ;;		_EUSART_Initialize
  2193 ;;		_OSCILLATOR_Initialize
  2194 ;;		_PIN_MANAGER_Initialize
  2195 ;;		_TMR0_Initialize
  2196 ;;		_TMR2_Initialize
  2197 ;; This function is called by:
  2198 ;;		_main
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           
  2203                           ;psect for function _SYSTEM_Initialize
  2204  0338                     _SYSTEM_Initialize:	
  2205                           
  2206                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  2207                           
  2208                           ;incstack = 0
  2209                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2210  0338  22D2               	fcall	_PIN_MANAGER_Initialize
  2211                           
  2212                           ;mcc.c: 73: OSCILLATOR_Initialize();
  2213  0339  2330               	fcall	_OSCILLATOR_Initialize
  2214                           
  2215                           ;mcc.c: 74: EPWM_Initialize();
  2216  033A  2310               	fcall	_EPWM_Initialize
  2217                           
  2218                           ;mcc.c: 75: TMR2_Initialize();
  2219  033B  2327               	fcall	_TMR2_Initialize
  2220                           
  2221                           ;mcc.c: 76: TMR0_Initialize();
  2222  033C  22E8               	fcall	_TMR0_Initialize
  2223                           
  2224                           ;mcc.c: 77: EUSART_Initialize();
  2225  033D  2250               	fcall	_EUSART_Initialize
  2226  033E  0008               	return
  2227  033F                     __end_of_SYSTEM_Initialize:	
  2228                           
  2229                           	psect	text2
  2230  0327                     __ptext2:	
  2231 ;; *************** function _TMR2_Initialize *****************
  2232 ;; Defined at:
  2233 ;;		line 57 in file "mcc_generated_files/tmr2.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, status,2, status,0, pclath, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMMON   BANK0   BANK1
  2247 ;;      Params:         0       0       0
  2248 ;;      Locals:         0       0       0
  2249 ;;      Temps:          0       0       0
  2250 ;;      Totals:         0       0       0
  2251 ;;Total ram usage:        0 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    6
  2254 ;; This function calls:
  2255 ;;		_TMR2_StartTimer
  2256 ;; This function is called by:
  2257 ;;		_SYSTEM_Initialize
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           
  2262                           ;psect for function _TMR2_Initialize
  2263  0327                     _TMR2_Initialize:	
  2264                           
  2265                           ;tmr2.c: 62: T2CON = 0x02;
  2266                           
  2267                           ;incstack = 0
  2268                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2269  0327  3002               	movlw	2
  2270  0328  0020               	movlb	0	; select bank0
  2271  0329  009C               	movwf	28	;volatile
  2272                           
  2273                           ;tmr2.c: 65: PR2 = 0xFF;
  2274  032A  30FF               	movlw	255
  2275  032B  009B               	movwf	27	;volatile
  2276                           
  2277                           ;tmr2.c: 68: TMR2 = 0x00;
  2278  032C  019A               	clrf	26	;volatile
  2279                           
  2280                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
  2281  032D  1091               	bcf	17,1	;volatile
  2282                           
  2283                           ;tmr2.c: 74: TMR2_StartTimer();
  2284  032E  234F               	fcall	_TMR2_StartTimer
  2285  032F  0008               	return
  2286  0330                     __end_of_TMR2_Initialize:	
  2287                           
  2288                           	psect	text3
  2289  034F                     __ptext3:	
  2290 ;; *************** function _TMR2_StartTimer *****************
  2291 ;; Defined at:
  2292 ;;		line 77 in file "mcc_generated_files/tmr2.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;		None
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		None
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1
  2306 ;;      Params:         0       0       0
  2307 ;;      Locals:         0       0       0
  2308 ;;      Temps:          0       0       0
  2309 ;;      Totals:         0       0       0
  2310 ;;Total ram usage:        0 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    5
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_TMR2_Initialize
  2317 ;;		_main
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           
  2322                           ;psect for function _TMR2_StartTimer
  2323  034F                     _TMR2_StartTimer:	
  2324                           
  2325                           ;tmr2.c: 80: T2CONbits.TMR2ON = 1;
  2326                           
  2327                           ;incstack = 0
  2328                           ; Regs used in _TMR2_StartTimer: []
  2329  034F  0020               	movlb	0	; select bank0
  2330  0350  151C               	bsf	28,2	;volatile
  2331  0351  0008               	return
  2332  0352                     __end_of_TMR2_StartTimer:	
  2333                           
  2334                           	psect	text4
  2335  02E8                     __ptext4:	
  2336 ;; *************** function _TMR0_Initialize *****************
  2337 ;; Defined at:
  2338 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;		None
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;		None
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0, pclath, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMMON   BANK0   BANK1
  2352 ;;      Params:         0       0       0
  2353 ;;      Locals:         0       0       0
  2354 ;;      Temps:          1       0       0
  2355 ;;      Totals:         1       0       0
  2356 ;;Total ram usage:        1 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; Hardware stack levels required when called:    6
  2359 ;; This function calls:
  2360 ;;		_TMR0_SetInterruptHandler
  2361 ;; This function is called by:
  2362 ;;		_SYSTEM_Initialize
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           
  2367                           ;psect for function _TMR0_Initialize
  2368  02E8                     _TMR0_Initialize:	
  2369                           
  2370                           ;tmr0.c: 68: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  2371                           
  2372                           ;incstack = 0
  2373                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2374  02E8  0021               	movlb	1	; select bank1
  2375  02E9  0815               	movf	21,w	;volatile
  2376  02EA  39C0               	andlw	192
  2377  02EB  3817               	iorlw	23
  2378  02EC  0095               	movwf	21	;volatile
  2379                           
  2380                           ;tmr0.c: 71: TMR0 = 0x64;
  2381  02ED  3064               	movlw	100
  2382  02EE  0020               	movlb	0	; select bank0
  2383  02EF  0095               	movwf	21	;volatile
  2384                           
  2385                           ;tmr0.c: 74: timer0ReloadVal= 100;
  2386  02F0  3064               	movlw	100
  2387  02F1  00F4               	movwf	??_TMR0_Initialize
  2388  02F2  0874               	movf	??_TMR0_Initialize,w
  2389  02F3  00BE               	movwf	_timer0ReloadVal	;volatile
  2390                           
  2391                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  2392  02F4  110B               	bcf	11,2	;volatile
  2393                           
  2394                           ;tmr0.c: 80: INTCONbits.TMR0IE = 1;
  2395  02F5  168B               	bsf	11,5	;volatile
  2396                           
  2397                           ;tmr0.c: 83: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  2398  02F6  3054               	movlw	low _TMR0_DefaultInterruptHandler
  2399  02F7  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2400  02F8  3003               	movlw	high _TMR0_DefaultInterruptHandler
  2401  02F9  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2402  02FA  2345               	fcall	_TMR0_SetInterruptHandler
  2403  02FB  0008               	return
  2404  02FC                     __end_of_TMR0_Initialize:	
  2405                           
  2406                           	psect	text5
  2407  0345                     __ptext5:	
  2408 ;; *************** function _TMR0_SetInterruptHandler *****************
  2409 ;; Defined at:
  2410 ;;		line 140 in file "mcc_generated_files/tmr0.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  InterruptHan    2    2[COMMON] PTR void 
  2413 ;;		 -> TMR0_DefaultInterruptHandler(1), my10msTimerISR(1), 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;		None
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMMON   BANK0   BANK1
  2425 ;;      Params:         2       0       0
  2426 ;;      Locals:         0       0       0
  2427 ;;      Temps:          0       0       0
  2428 ;;      Totals:         2       0       0
  2429 ;;Total ram usage:        2 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    5
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_main
  2436 ;;		_TMR0_Initialize
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           
  2441                           ;psect for function _TMR0_SetInterruptHandler
  2442  0345                     _TMR0_SetInterruptHandler:	
  2443                           
  2444                           ;tmr0.c: 141: TMR0_InterruptHandler = InterruptHandler;
  2445                           
  2446                           ;incstack = 0
  2447                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2448  0345  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2449  0346  0020               	movlb	0	; select bank0
  2450  0347  00B6               	movwf	_TMR0_InterruptHandler+1
  2451  0348  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2452  0349  00B5               	movwf	_TMR0_InterruptHandler
  2453  034A  0008               	return
  2454  034B                     __end_of_TMR0_SetInterruptHandler:	
  2455                           
  2456                           	psect	text6
  2457  02D2                     __ptext6:	
  2458 ;; *************** function _PIN_MANAGER_Initialize *****************
  2459 ;; Defined at:
  2460 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1
  2474 ;;      Params:         0       0       0
  2475 ;;      Locals:         0       0       0
  2476 ;;      Temps:          0       0       0
  2477 ;;      Totals:         0       0       0
  2478 ;;Total ram usage:        0 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    5
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_SYSTEM_Initialize
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           
  2489                           ;psect for function _PIN_MANAGER_Initialize
  2490  02D2                     _PIN_MANAGER_Initialize:	
  2491                           
  2492                           ;pin_manager.c: 51: LATA = 0x0;
  2493                           
  2494                           ;incstack = 0
  2495                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2496  02D2  0022               	movlb	2	; select bank2
  2497  02D3  018C               	clrf	12	;volatile
  2498                           
  2499                           ;pin_manager.c: 52: LATC = 0x0;
  2500  02D4  018E               	clrf	14	;volatile
  2501                           
  2502                           ;pin_manager.c: 53: ANSELA = 0x17;
  2503  02D5  3017               	movlw	23
  2504  02D6  0023               	movlb	3	; select bank3
  2505  02D7  008C               	movwf	12	;volatile
  2506                           
  2507                           ;pin_manager.c: 54: ANSELC = 0xF;
  2508  02D8  300F               	movlw	15
  2509  02D9  008E               	movwf	14	;volatile
  2510                           
  2511                           ;pin_manager.c: 55: WPUA = 0x3F;
  2512  02DA  303F               	movlw	63
  2513  02DB  0024               	movlb	4	; select bank4
  2514  02DC  008C               	movwf	12	;volatile
  2515                           
  2516                           ;pin_manager.c: 56: WPUC = 0x3F;
  2517  02DD  303F               	movlw	63
  2518  02DE  008E               	movwf	14	;volatile
  2519                           
  2520                           ;pin_manager.c: 57: TRISC = 0x37;
  2521  02DF  3037               	movlw	55
  2522  02E0  0021               	movlb	1	; select bank1
  2523  02E1  008E               	movwf	14	;volatile
  2524                           
  2525                           ;pin_manager.c: 58: TRISA = 0x1F;
  2526  02E2  301F               	movlw	31
  2527  02E3  008C               	movwf	12	;volatile
  2528                           
  2529                           ;pin_manager.c: 60: OPTION_REGbits.nWPUEN = 0x0;
  2530  02E4  1395               	bcf	21,7	;volatile
  2531                           
  2532                           ;pin_manager.c: 61: APFCON = 0x00;
  2533  02E5  0022               	movlb	2	; select bank2
  2534  02E6  019D               	clrf	29	;volatile
  2535  02E7  0008               	return
  2536  02E8                     __end_of_PIN_MANAGER_Initialize:	
  2537                           
  2538                           	psect	text7
  2539  0330                     __ptext7:	
  2540 ;; *************** function _OSCILLATOR_Initialize *****************
  2541 ;; Defined at:
  2542 ;;		line 80 in file "mcc_generated_files/mcc.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1
  2556 ;;      Params:         0       0       0
  2557 ;;      Locals:         0       0       0
  2558 ;;      Temps:          0       0       0
  2559 ;;      Totals:         0       0       0
  2560 ;;Total ram usage:        0 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    5
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_SYSTEM_Initialize
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           
  2571                           ;psect for function _OSCILLATOR_Initialize
  2572  0330                     _OSCILLATOR_Initialize:	
  2573                           
  2574                           ;mcc.c: 83: OSCCON = 0x70;
  2575                           
  2576                           ;incstack = 0
  2577                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2578  0330  3070               	movlw	112
  2579  0331  0021               	movlb	1	; select bank1
  2580  0332  0099               	movwf	25	;volatile
  2581                           
  2582                           ;mcc.c: 85: OSCSTAT = 0x00;
  2583  0333  019A               	clrf	26	;volatile
  2584                           
  2585                           ;mcc.c: 87: OSCTUNE = 0x00;
  2586  0334  0198               	clrf	24	;volatile
  2587  0335                     l220:	
  2588                           ;mcc.c: 92: {
  2589                           
  2590                           ;mcc.c: 91: while(PLLR == 0)
  2591                           
  2592  0335  1B1A               	btfsc	26,6	;volatile
  2593  0336  0008               	return
  2594  0337  2B35               	goto	l220
  2595  0338                     __end_of_OSCILLATOR_Initialize:	
  2596                           
  2597                           	psect	text8
  2598  0250                     __ptext8:	
  2599 ;; *************** function _EUSART_Initialize *****************
  2600 ;; Defined at:
  2601 ;;		line 75 in file "mcc_generated_files/eusart.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMMON   BANK0   BANK1
  2615 ;;      Params:         0       0       0
  2616 ;;      Locals:         0       0       0
  2617 ;;      Temps:          1       0       0
  2618 ;;      Totals:         1       0       0
  2619 ;;Total ram usage:        1 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    5
  2622 ;; This function calls:
  2623 ;;		Nothing
  2624 ;; This function is called by:
  2625 ;;		_SYSTEM_Initialize
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           
  2630                           ;psect for function _EUSART_Initialize
  2631  0250                     _EUSART_Initialize:	
  2632                           
  2633                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  2634                           
  2635                           ;incstack = 0
  2636                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  2637  0250  0021               	movlb	1	; select bank1
  2638  0251  1291               	bcf	17,5	;volatile
  2639                           
  2640                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  2641  0252  1211               	bcf	17,4	;volatile
  2642                           
  2643                           ;eusart.c: 84: BAUDCON = 0x08;
  2644  0253  3008               	movlw	8
  2645  0254  0023               	movlb	3	; select bank3
  2646  0255  009F               	movwf	31	;volatile
  2647                           
  2648                           ;eusart.c: 87: RCSTA = 0x90;
  2649  0256  3090               	movlw	144
  2650  0257  009D               	movwf	29	;volatile
  2651                           
  2652                           ;eusart.c: 90: TXSTA = 0x24;
  2653  0258  3024               	movlw	36
  2654  0259  009E               	movwf	30	;volatile
  2655                           
  2656                           ;eusart.c: 93: SPBRGL = 0x40;
  2657  025A  3040               	movlw	64
  2658  025B  009B               	movwf	27	;volatile
  2659                           
  2660                           ;eusart.c: 96: SPBRGH = 0x03;
  2661  025C  3003               	movlw	3
  2662  025D  009C               	movwf	28	;volatile
  2663                           
  2664                           ;eusart.c: 100: eusartTxHead = 0;
  2665  025E  0020               	movlb	0	; select bank0
  2666  025F  01BB               	clrf	_eusartTxHead
  2667                           
  2668                           ;eusart.c: 101: eusartTxTail = 0;
  2669  0260  01BC               	clrf	_eusartTxTail
  2670                           
  2671                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  2672  0261  3008               	movlw	8
  2673  0262  00F2               	movwf	??_EUSART_Initialize
  2674  0263  0872               	movf	??_EUSART_Initialize,w
  2675  0264  00FB               	movwf	_eusartTxBufferRemaining	;volatile
  2676                           
  2677                           ;eusart.c: 104: eusartRxHead = 0;
  2678  0265  01B9               	clrf	_eusartRxHead
  2679                           
  2680                           ;eusart.c: 105: eusartRxTail = 0;
  2681  0266  01BA               	clrf	_eusartRxTail
  2682                           
  2683                           ;eusart.c: 106: eusartRxCount = 0;
  2684  0267  01FA               	clrf	_eusartRxCount	;volatile
  2685                           
  2686                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  2687  0268  0021               	movlb	1	; select bank1
  2688  0269  1691               	bsf	17,5	;volatile
  2689  026A  0008               	return
  2690  026B                     __end_of_EUSART_Initialize:	
  2691                           
  2692                           	psect	text9
  2693  0310                     __ptext9:	
  2694 ;; *************** function _EPWM_Initialize *****************
  2695 ;; Defined at:
  2696 ;;		line 63 in file "mcc_generated_files/epwm.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		wreg, status,2
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1
  2710 ;;      Params:         0       0       0
  2711 ;;      Locals:         0       0       0
  2712 ;;      Temps:          0       0       0
  2713 ;;      Totals:         0       0       0
  2714 ;;Total ram usage:        0 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:    5
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_SYSTEM_Initialize
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           
  2725                           ;psect for function _EPWM_Initialize
  2726  0310                     _EPWM_Initialize:	
  2727                           
  2728                           ;epwm.c: 68: CCP1CON = 0x3C;
  2729                           
  2730                           ;incstack = 0
  2731                           ; Regs used in _EPWM_Initialize: [wreg+status,2]
  2732  0310  303C               	movlw	60
  2733  0311  0025               	movlb	5	; select bank5
  2734  0312  0093               	movwf	19	;volatile
  2735                           
  2736                           ;epwm.c: 71: ECCP1AS = 0x00;
  2737  0313  0195               	clrf	21	;volatile
  2738                           
  2739                           ;epwm.c: 74: PWM1CON = 0x80;
  2740  0314  3080               	movlw	128
  2741  0315  0094               	movwf	20	;volatile
  2742                           
  2743                           ;epwm.c: 77: PSTR1CON = 0x04;
  2744  0316  3004               	movlw	4
  2745  0317  0096               	movwf	22	;volatile
  2746                           
  2747                           ;epwm.c: 80: CCPR1L = 0x7F;
  2748  0318  307F               	movlw	127
  2749  0319  0091               	movwf	17	;volatile
  2750                           
  2751                           ;epwm.c: 83: CCPR1H = 0x00;
  2752  031A  0192               	clrf	18	;volatile
  2753  031B  0008               	return
  2754  031C                     __end_of_EPWM_Initialize:	
  2755                           
  2756                           	psect	text10
  2757  02A1                     __ptext10:	
  2758 ;; *************** function _LED_set_state *****************
  2759 ;; Defined at:
  2760 ;;		line 4 in file "interact.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  new_state       1    wreg     enum E2612
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  new_state       1    2[COMMON] enum E2612
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      void 
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1
  2774 ;;      Params:         0       0       0
  2775 ;;      Locals:         1       0       0
  2776 ;;      Temps:          0       0       0
  2777 ;;      Totals:         1       0       0
  2778 ;;Total ram usage:        1 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    5
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_main
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           
  2789                           ;psect for function _LED_set_state
  2790  02A1                     _LED_set_state:	
  2791                           
  2792                           ;incstack = 0
  2793                           ; Regs used in _LED_set_state: [wreg+status,2+status,0]
  2794                           ;LED_set_state@new_state stored from wreg
  2795  02A1  00F2               	movwf	LED_set_state@new_state
  2796                           
  2797                           ;interact.c: 6: if (new_state == always_off)
  2798  02A2  0372               	decf	LED_set_state@new_state,w
  2799  02A3  1D03               	btfss	3,2
  2800  02A4  2AA8               	goto	l1653
  2801                           
  2802                           ;interact.c: 7: do { LATA5 = 0; } while(0);
  2803  02A5  0022               	movlb	2	; select bank2
  2804  02A6  128C               	bcf	12,5	;volatile
  2805  02A7  0008               	return
  2806  02A8                     l1653:	
  2807                           
  2808                           ;interact.c: 8: else if (new_state == always_on)
  2809  02A8  0872               	movf	LED_set_state@new_state,w
  2810  02A9  1D03               	btfss	3,2
  2811  02AA  2AAE               	goto	l1655
  2812                           
  2813                           ;interact.c: 9: do { LATA5 = 1; } while(0);
  2814  02AB  0022               	movlb	2	; select bank2
  2815  02AC  168C               	bsf	12,5	;volatile
  2816  02AD  0008               	return
  2817  02AE                     l1655:	
  2818                           
  2819                           ;interact.c: 10: else if ((new_state == slow_blinking)||(new_state == fast_blinking))
  2820  02AE  3002               	movlw	2
  2821  02AF  0672               	xorwf	LED_set_state@new_state,w
  2822  02B0  1903               	btfsc	3,2
  2823  02B1  2AB6               	goto	l397
  2824  02B2  3003               	movlw	3
  2825  02B3  0672               	xorwf	LED_set_state@new_state,w
  2826  02B4  1D03               	btfss	3,2
  2827  02B5  0008               	return
  2828  02B6                     l397:	
  2829                           ;interact.c: 11: {
  2830                           ;interact.c: 12: do { LATA5 = 1; } while(0);
  2831                           
  2832  02B6  0022               	movlb	2	; select bank2
  2833  02B7  168C               	bsf	12,5	;volatile
  2834                           
  2835                           ;interact.c: 13: LED_counter = 0;
  2836  02B8  0020               	movlb	0	; select bank0
  2837  02B9  01B7               	clrf	_LED_counter	;volatile
  2838  02BA  0008               	return
  2839  02BB                     __end_of_LED_set_state:	
  2840                           
  2841                           	psect	text11
  2842  01AD                     __ptext11:	
  2843 ;; *************** function _GPS_Initialize *****************
  2844 ;; Defined at:
  2845 ;;		line 70 in file "main.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  tmp             1    5[BANK0 ] unsigned char 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMMON   BANK0   BANK1
  2859 ;;      Params:         0       0       0
  2860 ;;      Locals:         0       1       0
  2861 ;;      Temps:          0       3       0
  2862 ;;      Totals:         0       4       0
  2863 ;;Total ram usage:        4 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    8
  2866 ;; This function calls:
  2867 ;;		_printf
  2868 ;; This function is called by:
  2869 ;;		_main
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           
  2874                           ;psect for function _GPS_Initialize
  2875  01AD                     _GPS_Initialize:	
  2876                           
  2877                           ;main.c: 72: for(unsigned char tmp=0;tmp<(10*1);tmp++){_delay((unsigned long)((100)*(320
      +                          00000/4000.0)));};
  2878                           
  2879                           ;incstack = 0
  2880                           ; Regs used in _GPS_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2881  01AD  0020               	movlb	0	; select bank0
  2882  01AE  01C4               	clrf	GPS_Initialize@tmp
  2883  01AF  300A               	movlw	10
  2884  01B0  0244               	subwf	GPS_Initialize@tmp,w
  2885  01B1  1803               	btfsc	3,0
  2886  01B2  29C8               	goto	l1877
  2887  01B3                     l1871:	
  2888  01B3  3005               	movlw	5
  2889  01B4  00C3               	movwf	??_GPS_Initialize+2
  2890  01B5  300F               	movlw	15
  2891  01B6  00C2               	movwf	??_GPS_Initialize+1
  2892  01B7  30F4               	movlw	244
  2893  01B8  00C1               	movwf	??_GPS_Initialize
  2894  01B9                     u1497:	
  2895  01B9  0BC1               	decfsz	??_GPS_Initialize,f
  2896  01BA  29B9               	goto	u1497
  2897  01BB  0BC2               	decfsz	??_GPS_Initialize+1,f
  2898  01BC  29B9               	goto	u1497
  2899  01BD  0BC3               	decfsz	??_GPS_Initialize+2,f
  2900  01BE  29B9               	goto	u1497
  2901  01BF  3001               	movlw	1
  2902  01C0  0020               	movlb	0	; select bank0
  2903  01C1  00C1               	movwf	??_GPS_Initialize
  2904  01C2  0841               	movf	??_GPS_Initialize,w
  2905  01C3  07C4               	addwf	GPS_Initialize@tmp,f
  2906  01C4  300A               	movlw	10
  2907  01C5  0244               	subwf	GPS_Initialize@tmp,w
  2908  01C6  1C03               	skipc
  2909  01C7  29B3               	goto	l1871
  2910  01C8                     l1877:	
  2911                           
  2912                           ;main.c: 74: printf("$PMTK314,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0*29\r\n");
  2913  01C8  3067               	movlw	low (STR_1| (0+32768))
  2914  01C9  00F5               	movwf	printf@f
  2915  01CA  3081               	movlw	high (STR_1| (0+32768))
  2916  01CB  00F6               	movwf	printf@f+1
  2917  01CC  226B               	fcall	_printf
  2918                           
  2919                           ;main.c: 75: _delay((unsigned long)((100)*(32000000/4000.0)));
  2920  01CD  3005               	movlw	5
  2921  01CE  0020               	movlb	0	; select bank0
  2922  01CF  00C3               	movwf	??_GPS_Initialize+2
  2923  01D0  300F               	movlw	15
  2924  01D1  00C2               	movwf	??_GPS_Initialize+1
  2925  01D2  30F4               	movlw	244
  2926  01D3  00C1               	movwf	??_GPS_Initialize
  2927  01D4                     u1507:	
  2928  01D4  0BC1               	decfsz	??_GPS_Initialize,f
  2929  01D5  29D4               	goto	u1507
  2930  01D6  0BC2               	decfsz	??_GPS_Initialize+1,f
  2931  01D7  29D4               	goto	u1507
  2932  01D8  0BC3               	decfsz	??_GPS_Initialize+2,f
  2933  01D9  29D4               	goto	u1507
  2934                           
  2935                           ;main.c: 76: printf("$PMTK220,100*2F\r\n");
  2936  01DA  309B               	movlw	low (STR_2| (0+32768))
  2937  01DB  00F5               	movwf	printf@f
  2938  01DC  3081               	movlw	high (STR_2| (0+32768))
  2939  01DD  00F6               	movwf	printf@f+1
  2940  01DE  226B               	fcall	_printf
  2941                           
  2942                           ;main.c: 77: _delay((unsigned long)((100)*(32000000/4000.0)));
  2943  01DF  3005               	movlw	5
  2944  01E0  0020               	movlb	0	; select bank0
  2945  01E1  00C3               	movwf	??_GPS_Initialize+2
  2946  01E2  300F               	movlw	15
  2947  01E3  00C2               	movwf	??_GPS_Initialize+1
  2948  01E4  30F4               	movlw	244
  2949  01E5  00C1               	movwf	??_GPS_Initialize
  2950  01E6                     u1517:	
  2951  01E6  0BC1               	decfsz	??_GPS_Initialize,f
  2952  01E7  29E6               	goto	u1517
  2953  01E8  0BC2               	decfsz	??_GPS_Initialize+1,f
  2954  01E9  29E6               	goto	u1517
  2955  01EA  0BC3               	decfsz	??_GPS_Initialize+2,f
  2956  01EB  29E6               	goto	u1517
  2957  01EC  0008               	return
  2958  01ED                     __end_of_GPS_Initialize:	
  2959                           
  2960                           	psect	text12
  2961  026B                     __ptext12:	
  2962 ;; *************** function _printf *****************
  2963 ;; Defined at:
  2964 ;;		line 464 in file "/opt/microchip/xc8/v1.38/sources/common/doprnt.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  f               2    5[COMMON] PTR const unsigned char 
  2967 ;;		 -> STR_2(18), STR_1(52), 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  tmpval          4    0        struct .
  2970 ;;  cp              2    0        PTR const unsigned char 
  2971 ;;  len             2    0        unsigned int 
  2972 ;;  val             2    0        unsigned int 
  2973 ;;  c               1    1[BANK0 ] char 
  2974 ;;  ap              1    0[BANK0 ] PTR void [1]
  2975 ;;		 -> ?_printf(2), 
  2976 ;;  flag            1    0        unsigned char 
  2977 ;;  prec            1    0        char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  2    5[COMMON] int 
  2980 ;; Registers used:
  2981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1
  2987 ;;      Params:         2       0       0
  2988 ;;      Locals:         0       2       0
  2989 ;;      Temps:          3       0       0
  2990 ;;      Totals:         5       2       0
  2991 ;;Total ram usage:        7 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    7
  2994 ;; This function calls:
  2995 ;;		_putch
  2996 ;; This function is called by:
  2997 ;;		_GPS_Initialize
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           
  3002                           ;psect for function _printf
  3003  026B                     _printf:	
  3004                           
  3005                           ;doprnt.c: 466: va_list ap;
  3006                           ;doprnt.c: 499: signed char c;
  3007                           ;doprnt.c: 506: signed char prec;
  3008                           ;doprnt.c: 508: unsigned char flag;
  3009                           ;doprnt.c: 523: union {
  3010                           ;doprnt.c: 524: unsigned long vd;
  3011                           ;doprnt.c: 525: double integ;
  3012                           ;doprnt.c: 526: } tmpval;
  3013                           ;doprnt.c: 528: unsigned int val;
  3014                           ;doprnt.c: 529: unsigned len;
  3015                           ;doprnt.c: 530: const char * cp;
  3016                           ;doprnt.c: 533: *ap = __va_start();
  3017                           
  3018                           ;incstack = 0
  3019                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3020  026B  3077               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3021  026C  00F7               	movwf	??_printf
  3022  026D  0877               	movf	??_printf,w
  3023  026E  0020               	movlb	0	; select bank0
  3024  026F  00BF               	movwf	printf@ap
  3025  0270                     l1863:	
  3026                           ;doprnt.c: 543: }
  3027                           ;doprnt.c: 1422: {
  3028                           
  3029                           ;doprnt.c: 542: continue;
  3030                           
  3031                           ;doprnt.c: 536: while(c = *f++) {
  3032                           
  3033  0270  0876               	movf	printf@f+1,w
  3034  0271  00F8               	movwf	??_printf+1
  3035  0272  0875               	movf	printf@f,w
  3036  0273  00F7               	movwf	??_printf
  3037  0274  0AF5               	incf	printf@f,f
  3038  0275  1903               	skipnz
  3039  0276  0AF6               	incf	printf@f+1,f
  3040  0277  0877               	movf	??_printf,w
  3041  0278  0084               	movwf	4
  3042  0279  0878               	movf	??_printf+1,w
  3043  027A  0085               	movwf	5
  3044  027B  0800               	movf	0,w	;code access
  3045  027C  00F9               	movwf	??_printf+2
  3046  027D  0879               	movf	??_printf+2,w
  3047  027E  0020               	movlb	0	; select bank0
  3048  027F  00C0               	movwf	printf@c
  3049  0280  0840               	movf	printf@c,w
  3050  0281  1903               	btfsc	3,2
  3051  0282  0008               	return
  3052                           
  3053                           ;doprnt.c: 540: {
  3054                           ;doprnt.c: 541: (putch(c) );
  3055  0283  0840               	movf	printf@c,w
  3056  0284  234B               	fcall	_putch
  3057  0285  2A70               	goto	l1863
  3058  0286                     __end_of_printf:	
  3059                           ;doprnt.c: 1469: }
  3060                           ;doprnt.c: 1533: }
  3061                           ;doprnt.c: 1540: return 0;
  3062                           ;	Return value of _printf is never used
  3063                           
  3064                           
  3065                           	psect	text13
  3066  034B                     __ptext13:	
  3067 ;; *************** function _putch *****************
  3068 ;; Defined at:
  3069 ;;		line 164 in file "mcc_generated_files/eusart.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  txData          1    wreg     unsigned char 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  txData          1    4[COMMON] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      void 
  3076 ;; Registers used:
  3077 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1
  3083 ;;      Params:         0       0       0
  3084 ;;      Locals:         1       0       0
  3085 ;;      Temps:          0       0       0
  3086 ;;      Totals:         1       0       0
  3087 ;;Total ram usage:        1 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    6
  3090 ;; This function calls:
  3091 ;;		_EUSART_Write
  3092 ;; This function is called by:
  3093 ;;		_printf
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           
  3098                           ;psect for function _putch
  3099  034B                     _putch:	
  3100                           
  3101                           ;incstack = 0
  3102                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3103                           ;putch@txData stored from wreg
  3104  034B  00F4               	movwf	putch@txData
  3105                           
  3106                           ;eusart.c: 166: EUSART_Write(txData);
  3107  034C  0874               	movf	putch@txData,w
  3108  034D  2211               	fcall	_EUSART_Write
  3109  034E  0008               	return
  3110  034F                     __end_of_putch:	
  3111                           
  3112                           	psect	text14
  3113  0211                     __ptext14:	
  3114 ;; *************** function _EUSART_Write *****************
  3115 ;; Defined at:
  3116 ;;		line 136 in file "mcc_generated_files/eusart.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  txData          1    wreg     unsigned char 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  txData          1    3[COMMON] unsigned char 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  1    wreg      void 
  3123 ;; Registers used:
  3124 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMMON   BANK0   BANK1
  3130 ;;      Params:         0       0       0
  3131 ;;      Locals:         1       0       0
  3132 ;;      Temps:          1       0       0
  3133 ;;      Totals:         2       0       0
  3134 ;;Total ram usage:        2 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    5
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_putch
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           
  3145                           ;psect for function _EUSART_Write
  3146  0211                     _EUSART_Write:	
  3147                           
  3148                           ;incstack = 0
  3149                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  3150                           ;EUSART_Write@txData stored from wreg
  3151  0211  00F3               	movwf	EUSART_Write@txData
  3152  0212                     l1841:	
  3153                           ;eusart.c: 139: {
  3154                           
  3155                           ;eusart.c: 138: while(0 == eusartTxBufferRemaining)
  3156                           
  3157  0212  087B               	movf	_eusartTxBufferRemaining,w	;volatile
  3158  0213  1903               	btfsc	3,2
  3159  0214  2A12               	goto	l1841
  3160                           
  3161                           ;eusart.c: 140: }
  3162                           ;eusart.c: 142: if(0 == PIE1bits.TXIE)
  3163  0215  0021               	movlb	1	; select bank1
  3164  0216  1A11               	btfsc	17,4	;volatile
  3165  0217  2A1C               	goto	l131
  3166                           
  3167                           ;eusart.c: 143: {
  3168                           ;eusart.c: 144: TXREG = txData;
  3169  0218  0873               	movf	EUSART_Write@txData,w
  3170  0219  0023               	movlb	3	; select bank3
  3171  021A  009A               	movwf	26	;volatile
  3172                           
  3173                           ;eusart.c: 145: }
  3174  021B  2A30               	goto	l1855
  3175  021C                     l131:	
  3176                           
  3177                           ;eusart.c: 146: else
  3178                           ;eusart.c: 147: {
  3179                           ;eusart.c: 148: PIE1bits.TXIE = 0;
  3180  021C  1211               	bcf	17,4	;volatile
  3181                           
  3182                           ;eusart.c: 149: eusartTxBuffer[eusartTxHead++] = txData;
  3183  021D  0873               	movf	EUSART_Write@txData,w
  3184  021E  00F2               	movwf	??_EUSART_Write
  3185  021F  0020               	movlb	0	; select bank0
  3186  0220  083B               	movf	_eusartTxHead,w
  3187  0221  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  3188  0222  0086               	movwf	6
  3189  0223  0187               	clrf	7
  3190  0224  0872               	movf	??_EUSART_Write,w
  3191  0225  0081               	movwf	1
  3192  0226  3001               	movlw	1
  3193  0227  00F2               	movwf	??_EUSART_Write
  3194  0228  0872               	movf	??_EUSART_Write,w
  3195  0229  07BB               	addwf	_eusartTxHead,f
  3196                           
  3197                           ;eusart.c: 150: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  3198  022A  3008               	movlw	8
  3199  022B  023B               	subwf	_eusartTxHead,w
  3200  022C  1803               	btfsc	3,0
  3201                           
  3202                           ;eusart.c: 151: {
  3203                           ;eusart.c: 152: eusartTxHead = 0;
  3204  022D  01BB               	clrf	_eusartTxHead
  3205                           
  3206                           ;eusart.c: 153: }
  3207                           ;eusart.c: 154: eusartTxBufferRemaining--;
  3208  022E  3001               	movlw	1
  3209  022F  02FB               	subwf	_eusartTxBufferRemaining,f	;volatile
  3210  0230                     l1855:	
  3211                           
  3212                           ;eusart.c: 155: }
  3213                           ;eusart.c: 156: PIE1bits.TXIE = 1;
  3214  0230  0021               	movlb	1	; select bank1
  3215  0231  1611               	bsf	17,4	;volatile
  3216  0232  0008               	return
  3217  0233                     __end_of_EUSART_Write:	
  3218                           
  3219                           	psect	text15
  3220  02BB                     __ptext15:	
  3221 ;; *************** function _EPWM_LoadDutyValue *****************
  3222 ;; Defined at:
  3223 ;;		line 87 in file "mcc_generated_files/epwm.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  dutyValue       2    2[COMMON] unsigned int 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;		None
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      void 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1
  3237 ;;      Params:         2       0       0
  3238 ;;      Locals:         0       0       0
  3239 ;;      Temps:          2       0       0
  3240 ;;      Totals:         4       0       0
  3241 ;;Total ram usage:        4 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    5
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		_main
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           
  3252                           ;psect for function _EPWM_LoadDutyValue
  3253  02BB                     _EPWM_LoadDutyValue:	
  3254                           
  3255                           ;epwm.c: 90: CCPR1L = ((dutyValue & 0x03FC)>>2);
  3256                           
  3257                           ;incstack = 0
  3258                           ; Regs used in _EPWM_LoadDutyValue: [wreg+status,2+status,0]
  3259  02BB  0873               	movf	EPWM_LoadDutyValue@dutyValue+1,w
  3260  02BC  00F5               	movwf	??_EPWM_LoadDutyValue+1
  3261  02BD  0872               	movf	EPWM_LoadDutyValue@dutyValue,w
  3262  02BE  00F4               	movwf	??_EPWM_LoadDutyValue
  3263  02BF  36F5               	lsrf	??_EPWM_LoadDutyValue+1,f
  3264  02C0  0CF4               	rrf	??_EPWM_LoadDutyValue,f
  3265  02C1  36F5               	lsrf	??_EPWM_LoadDutyValue+1,f
  3266  02C2  0CF4               	rrf	??_EPWM_LoadDutyValue,f
  3267  02C3  0874               	movf	??_EPWM_LoadDutyValue,w
  3268  02C4  0025               	movlb	5	; select bank5
  3269  02C5  0091               	movwf	17	;volatile
  3270                           
  3271                           ;epwm.c: 93: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3272  02C6  0872               	movf	EPWM_LoadDutyValue@dutyValue,w
  3273  02C7  3903               	andlw	3
  3274  02C8  00F4               	movwf	??_EPWM_LoadDutyValue
  3275  02C9  3004               	movlw	4
  3276  02CA                     u785:	
  3277  02CA  35F4               	lslf	??_EPWM_LoadDutyValue,f
  3278  02CB  0B89               	decfsz	9,f
  3279  02CC  2ACA               	goto	u785
  3280  02CD  0813               	movf	19,w	;volatile
  3281  02CE  39CF               	andlw	207
  3282  02CF  0474               	iorwf	??_EPWM_LoadDutyValue,w
  3283  02D0  0093               	movwf	19	;volatile
  3284  02D1  0008               	return
  3285  02D2                     __end_of_EPWM_LoadDutyValue:	
  3286                           
  3287                           	psect	intentry
  3288  0004                     __pintentry:	
  3289 ;; *************** function _INTERRUPT_InterruptManager *****************
  3290 ;; Defined at:
  3291 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMMON   BANK0   BANK1
  3305 ;;      Params:         0       0       0
  3306 ;;      Locals:         0       0       0
  3307 ;;      Temps:          1       0       0
  3308 ;;      Totals:         1       0       0
  3309 ;;Total ram usage:        1 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    4
  3312 ;; This function calls:
  3313 ;;		_EUSART_Receive_ISR
  3314 ;;		_EUSART_Transmit_ISR
  3315 ;;		_TMR0_ISR
  3316 ;; This function is called by:
  3317 ;;		Interrupt level 1
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321  0004                     _INTERRUPT_InterruptManager:	
  3322                           
  3323                           ;incstack = 0
  3324  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3325                           
  3326                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  3327  0005  3180               	pagesel	$
  3328  0006  0020               	movlb	0	; select bank0
  3329  0007  087F               	movf	127,w
  3330  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  3331                           
  3332                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  3333  0009  1A8B               	btfsc	11,5	;volatile
  3334  000A  1D0B               	btfss	11,2	;volatile
  3335  000B  280D               	goto	i1l1671
  3336                           
  3337                           ;interrupt_manager.c: 55: {
  3338                           ;interrupt_manager.c: 56: TMR0_ISR();
  3339  000C  22FC               	fcall	_TMR0_ISR
  3340  000D                     i1l1671:	
  3341                           
  3342                           ;interrupt_manager.c: 57: }
  3343                           ;interrupt_manager.c: 58: if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits.TXIF
      +                           == 1)
  3344  000D  1F0B               	btfss	11,6	;volatile
  3345  000E  2816               	goto	i1l1679
  3346  000F  0021               	movlb	1	; select bank1
  3347  0010  1E11               	btfss	17,4	;volatile
  3348  0011  2816               	goto	i1l1679
  3349  0012  0020               	movlb	0	; select bank0
  3350  0013  1E11               	btfss	17,4	;volatile
  3351  0014  2816               	goto	i1l1679
  3352                           
  3353                           ;interrupt_manager.c: 59: {
  3354                           ;interrupt_manager.c: 60: EUSART_Transmit_ISR();
  3355  0015  2233               	fcall	_EUSART_Transmit_ISR
  3356  0016                     i1l1679:	
  3357                           
  3358                           ;interrupt_manager.c: 61: }
  3359                           ;interrupt_manager.c: 62: if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits.RCIF
      +                           == 1)
  3360  0016  1F0B               	btfss	11,6	;volatile
  3361  0017  281F               	goto	i1l244
  3362  0018  0021               	movlb	1	; select bank1
  3363  0019  1E91               	btfss	17,5	;volatile
  3364  001A  281F               	goto	i1l244
  3365  001B  0020               	movlb	0	; select bank0
  3366  001C  1E91               	btfss	17,5	;volatile
  3367  001D  281F               	goto	i1l244
  3368                           
  3369                           ;interrupt_manager.c: 63: {
  3370                           ;interrupt_manager.c: 64: EUSART_Receive_ISR();
  3371  001E  2286               	fcall	_EUSART_Receive_ISR
  3372  001F                     i1l244:	
  3373                           ;interrupt_manager.c: 66: else
  3374                           ;interrupt_manager.c: 67: {
  3375                           
  3376                           ;interrupt_manager.c: 65: }
  3377                           
  3378  001F  0871               	movf	??_INTERRUPT_InterruptManager,w
  3379  0020  0020               	movlb	0	; select bank0
  3380  0021  00FF               	movwf	127
  3381  0022  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3382  0023  0009               	retfie
  3383  0024                     __end_of_INTERRUPT_InterruptManager:	
  3384                           
  3385                           	psect	text17
  3386  02FC                     __ptext17:	
  3387 ;; *************** function _TMR0_ISR *****************
  3388 ;; Defined at:
  3389 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, pclath, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1
  3403 ;;      Params:         0       0       0
  3404 ;;      Locals:         0       0       0
  3405 ;;      Temps:          0       0       0
  3406 ;;      Totals:         0       0       0
  3407 ;;Total ram usage:        0 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    3
  3410 ;; This function calls:
  3411 ;;		_TMR0_CallBack
  3412 ;; This function is called by:
  3413 ;;		_INTERRUPT_InterruptManager
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           
  3418                           ;psect for function _TMR0_ISR
  3419  02FC                     _TMR0_ISR:	
  3420                           
  3421                           ;tmr0.c: 110: static volatile uint16_t CountCallBack = 0;
  3422                           ;tmr0.c: 113: INTCONbits.TMR0IF = 0;
  3423                           
  3424                           ;incstack = 0
  3425                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3426  02FC  110B               	bcf	11,2	;volatile
  3427                           
  3428                           ;tmr0.c: 115: TMR0 = timer0ReloadVal;
  3429  02FD  0020               	movlb	0	; select bank0
  3430  02FE  083E               	movf	_timer0ReloadVal,w	;volatile
  3431  02FF  0095               	movwf	21	;volatile
  3432                           
  3433                           ;tmr0.c: 118: if (++CountCallBack >= 2)
  3434  0300  3001               	movlw	1
  3435  0301  07B3               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  3436  0302  3000               	movlw	0
  3437  0303  3DB4               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  3438  0304  3000               	movlw	0
  3439  0305  0234               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  3440  0306  3002               	movlw	2
  3441  0307  1903               	skipnz
  3442  0308  0233               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  3443  0309  1C03               	skipc
  3444  030A  0008               	return
  3445                           
  3446                           ;tmr0.c: 119: {
  3447                           ;tmr0.c: 121: TMR0_CallBack();
  3448  030B  231C               	fcall	_TMR0_CallBack
  3449                           
  3450                           ;tmr0.c: 124: CountCallBack = 0;
  3451  030C  0020               	movlb	0	; select bank0
  3452  030D  01B3               	clrf	TMR0_ISR@CountCallBack	;volatile
  3453  030E  01B4               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  3454  030F  0008               	return
  3455  0310                     __end_of_TMR0_ISR:	
  3456                           
  3457                           	psect	text18
  3458  031C                     __ptext18:	
  3459 ;; *************** function _TMR0_CallBack *****************
  3460 ;; Defined at:
  3461 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, status,0, pclath, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMMON   BANK0   BANK1
  3475 ;;      Params:         0       0       0
  3476 ;;      Locals:         0       0       0
  3477 ;;      Temps:          0       0       0
  3478 ;;      Totals:         0       0       0
  3479 ;;Total ram usage:        0 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    2
  3482 ;; This function calls:
  3483 ;;		Absolute function
  3484 ;;		_TMR0_DefaultInterruptHandler
  3485 ;;		_my10msTimerISR
  3486 ;; This function is called by:
  3487 ;;		_TMR0_ISR
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           
  3492                           ;psect for function _TMR0_CallBack
  3493  031C                     _TMR0_CallBack:	
  3494                           
  3495                           ;tmr0.c: 134: if(TMR0_InterruptHandler)
  3496                           
  3497                           ;incstack = 0
  3498                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3499  031C  0020               	movlb	0	; select bank0
  3500  031D  0835               	movf	_TMR0_InterruptHandler,w
  3501  031E  0436               	iorwf	_TMR0_InterruptHandler+1,w
  3502  031F  1903               	btfsc	3,2
  3503  0320  0008               	return
  3504                           
  3505                           ;tmr0.c: 135: {
  3506                           ;tmr0.c: 136: TMR0_InterruptHandler();
  3507  0321  0836               	movf	_TMR0_InterruptHandler+1,w
  3508  0322  008A               	movwf	10
  3509  0323  0835               	movf	_TMR0_InterruptHandler,w
  3510  0324  000A               	callw
  3511  0325  3183               	pagesel	$
  3512  0326  0008               	return
  3513  0327                     __end_of_TMR0_CallBack:	
  3514                           
  3515                           	psect	text19
  3516  0354                     __ptext19:	
  3517 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3518 ;; Defined at:
  3519 ;;		line 144 in file "mcc_generated_files/tmr0.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		None
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMMON   BANK0   BANK1
  3533 ;;      Params:         0       0       0
  3534 ;;      Locals:         0       0       0
  3535 ;;      Temps:          0       0       0
  3536 ;;      Totals:         0       0       0
  3537 ;;Total ram usage:        0 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_TMR0_Initialize
  3543 ;;		_TMR0_CallBack
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           
  3548                           ;psect for function _TMR0_DefaultInterruptHandler
  3549  0354                     _TMR0_DefaultInterruptHandler:	
  3550                           
  3551                           ;incstack = 0
  3552                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  3553  0354  0008               	return
  3554  0355                     __end_of_TMR0_DefaultInterruptHandler:	
  3555                           
  3556                           	psect	text20
  3557  0352                     __ptext20:	
  3558 ;; *************** function _my10msTimerISR *****************
  3559 ;; Defined at:
  3560 ;;		line 256 in file "main.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;		None
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;		None
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      void 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0, pclath, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMMON   BANK0   BANK1
  3574 ;;      Params:         0       0       0
  3575 ;;      Locals:         0       0       0
  3576 ;;      Temps:          0       0       0
  3577 ;;      Totals:         0       0       0
  3578 ;;Total ram usage:        0 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:    1
  3581 ;; This function calls:
  3582 ;;		_LED_update_loop
  3583 ;; This function is called by:
  3584 ;;		_main
  3585 ;;		_TMR0_CallBack
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           
  3590                           ;psect for function _my10msTimerISR
  3591  0352                     _my10msTimerISR:	
  3592                           
  3593                           ;main.c: 258: LED_update_loop();
  3594                           
  3595                           ;incstack = 0
  3596                           ; Regs used in _my10msTimerISR: [wreg+status,2+status,0+pclath+cstack]
  3597  0352  21ED               	fcall	_LED_update_loop
  3598  0353  0008               	return
  3599  0354                     __end_of_my10msTimerISR:	
  3600                           
  3601                           	psect	text21
  3602  01ED                     __ptext21:	
  3603 ;; *************** function _LED_update_loop *****************
  3604 ;; Defined at:
  3605 ;;		line 17 in file "interact.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1
  3619 ;;      Params:         0       0       0
  3620 ;;      Locals:         0       0       0
  3621 ;;      Temps:          1       0       0
  3622 ;;      Totals:         1       0       0
  3623 ;;Total ram usage:        1 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_my10msTimerISR
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           
  3633                           ;psect for function _LED_update_loop
  3634  01ED                     _LED_update_loop:	
  3635                           
  3636                           ;interact.c: 19: if (LED_state == slow_blinking)
  3637                           
  3638                           ;incstack = 0
  3639                           ; Regs used in _LED_update_loop: [wreg+status,2+status,0]
  3640  01ED  3002               	movlw	2
  3641  01EE  0020               	movlb	0	; select bank0
  3642  01EF  0638               	xorwf	_LED_state,w
  3643  01F0  1D03               	btfss	3,2
  3644  01F1  29FF               	goto	i1l1477
  3645                           
  3646                           ;interact.c: 20: {
  3647                           ;interact.c: 21: LED_counter++;
  3648  01F2  3001               	movlw	1
  3649  01F3  00F0               	movwf	??_LED_update_loop
  3650  01F4  0870               	movf	??_LED_update_loop,w
  3651  01F5  07B7               	addwf	_LED_counter,f	;volatile
  3652                           
  3653                           ;interact.c: 22: if (LED_counter >= 100)
  3654  01F6  3064               	movlw	100
  3655  01F7  0237               	subwf	_LED_counter,w	;volatile
  3656  01F8  1C03               	skipc
  3657  01F9  0008               	return
  3658                           
  3659                           ;interact.c: 23: {
  3660                           ;interact.c: 24: LED_counter = 0;
  3661  01FA  01B7               	clrf	_LED_counter	;volatile
  3662                           
  3663                           ;interact.c: 25: do { LATA5 = ~LATA5; } while(0);
  3664  01FB  3020               	movlw	32
  3665  01FC  0022               	movlb	2	; select bank2
  3666  01FD  068C               	xorwf	12,f
  3667                           
  3668                           ;interact.c: 26: }
  3669                           ;interact.c: 27: }
  3670  01FE  0008               	return
  3671  01FF                     i1l1477:	
  3672                           
  3673                           ;interact.c: 28: else if (LED_state == fast_blinking)
  3674  01FF  3003               	movlw	3
  3675  0200  0020               	movlb	0	; select bank0
  3676  0201  0638               	xorwf	_LED_state,w
  3677  0202  1D03               	btfss	3,2
  3678  0203  0008               	return
  3679                           
  3680                           ;interact.c: 29: {
  3681                           ;interact.c: 30: LED_counter++;
  3682  0204  3001               	movlw	1
  3683  0205  00F0               	movwf	??_LED_update_loop
  3684  0206  0870               	movf	??_LED_update_loop,w
  3685  0207  07B7               	addwf	_LED_counter,f	;volatile
  3686                           
  3687                           ;interact.c: 31: if (LED_counter >= 50)
  3688  0208  3032               	movlw	50
  3689  0209  0237               	subwf	_LED_counter,w	;volatile
  3690  020A  1C03               	skipc
  3691  020B  0008               	return
  3692                           
  3693                           ;interact.c: 32: {
  3694                           ;interact.c: 33: LED_counter = 0;
  3695  020C  01B7               	clrf	_LED_counter	;volatile
  3696                           
  3697                           ;interact.c: 34: do { LATA5 = ~LATA5; } while(0);
  3698  020D  3020               	movlw	32
  3699  020E  0022               	movlb	2	; select bank2
  3700  020F  068C               	xorwf	12,f
  3701  0210  0008               	return
  3702  0211                     __end_of_LED_update_loop:	
  3703                           
  3704                           	psect	text22
  3705  0233                     __ptext22:	
  3706 ;; *************** function _EUSART_Transmit_ISR *****************
  3707 ;; Defined at:
  3708 ;;		line 169 in file "mcc_generated_files/eusart.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;		None
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1
  3722 ;;      Params:         0       0       0
  3723 ;;      Locals:         0       0       0
  3724 ;;      Temps:          1       0       0
  3725 ;;      Totals:         1       0       0
  3726 ;;Total ram usage:        1 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_INTERRUPT_InterruptManager
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           
  3736                           ;psect for function _EUSART_Transmit_ISR
  3737  0233                     _EUSART_Transmit_ISR:	
  3738                           
  3739                           ;eusart.c: 173: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  3740                           
  3741                           ;incstack = 0
  3742                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3743  0233  3008               	movlw	8
  3744  0234  027B               	subwf	_eusartTxBufferRemaining,w	;volatile
  3745  0235  1803               	skipnc
  3746  0236  2A4D               	goto	i1l143
  3747                           
  3748                           ;eusart.c: 174: {
  3749                           ;eusart.c: 175: TXREG = eusartTxBuffer[eusartTxTail++];
  3750  0237  0020               	movlb	0	; select bank0
  3751  0238  083C               	movf	_eusartTxTail,w
  3752  0239  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  3753  023A  0086               	movwf	6
  3754  023B  0187               	clrf	7
  3755  023C  0801               	movf	1,w
  3756  023D  0023               	movlb	3	; select bank3
  3757  023E  009A               	movwf	26	;volatile
  3758  023F  3001               	movlw	1
  3759  0240  00F0               	movwf	??_EUSART_Transmit_ISR
  3760  0241  0870               	movf	??_EUSART_Transmit_ISR,w
  3761  0242  0020               	movlb	0	; select bank0
  3762  0243  07BC               	addwf	_eusartTxTail,f
  3763                           
  3764                           ;eusart.c: 176: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  3765  0244  3008               	movlw	8
  3766  0245  023C               	subwf	_eusartTxTail,w
  3767  0246  1803               	btfsc	3,0
  3768                           
  3769                           ;eusart.c: 177: {
  3770                           ;eusart.c: 178: eusartTxTail = 0;
  3771  0247  01BC               	clrf	_eusartTxTail
  3772                           
  3773                           ;eusart.c: 179: }
  3774                           ;eusart.c: 180: eusartTxBufferRemaining++;
  3775  0248  3001               	movlw	1
  3776  0249  00F0               	movwf	??_EUSART_Transmit_ISR
  3777  024A  0870               	movf	??_EUSART_Transmit_ISR,w
  3778  024B  07FB               	addwf	_eusartTxBufferRemaining,f	;volatile
  3779                           
  3780                           ;eusart.c: 181: }
  3781  024C  0008               	return
  3782  024D                     i1l143:	
  3783                           
  3784                           ;eusart.c: 182: else
  3785                           ;eusart.c: 183: {
  3786                           ;eusart.c: 184: PIE1bits.TXIE = 0;
  3787  024D  0021               	movlb	1	; select bank1
  3788  024E  1211               	bcf	17,4	;volatile
  3789  024F  0008               	return
  3790  0250                     __end_of_EUSART_Transmit_ISR:	
  3791                           
  3792                           	psect	text23
  3793  0286                     __ptext23:	
  3794 ;; *************** function _EUSART_Receive_ISR *****************
  3795 ;; Defined at:
  3796 ;;		line 188 in file "mcc_generated_files/eusart.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1
  3810 ;;      Params:         0       0       0
  3811 ;;      Locals:         0       0       0
  3812 ;;      Temps:          1       0       0
  3813 ;;      Totals:         1       0       0
  3814 ;;Total ram usage:        1 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_INTERRUPT_InterruptManager
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           
  3824                           ;psect for function _EUSART_Receive_ISR
  3825  0286                     _EUSART_Receive_ISR:	
  3826                           
  3827                           ;eusart.c: 191: if(1 == RCSTAbits.OERR)
  3828                           
  3829                           ;incstack = 0
  3830                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3831  0286  0023               	movlb	3	; select bank3
  3832  0287  1C9D               	btfss	29,1	;volatile
  3833  0288  2A8B               	goto	i1l1611
  3834                           
  3835                           ;eusart.c: 192: {
  3836                           ;eusart.c: 195: RCSTAbits.SPEN = 0;
  3837  0289  139D               	bcf	29,7	;volatile
  3838                           
  3839                           ;eusart.c: 196: RCSTAbits.SPEN = 1;
  3840  028A  179D               	bsf	29,7	;volatile
  3841  028B                     i1l1611:	
  3842                           
  3843                           ;eusart.c: 197: }
  3844                           ;eusart.c: 200: eusartRxBuffer[eusartRxHead++] = RCREG;
  3845  028B  0819               	movf	25,w	;volatile
  3846  028C  00F0               	movwf	??_EUSART_Receive_ISR
  3847  028D  0020               	movlb	0	; select bank0
  3848  028E  0839               	movf	_eusartRxHead,w
  3849  028F  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  3850  0290  0086               	movwf	6
  3851  0291  0187               	clrf	7
  3852  0292  0870               	movf	??_EUSART_Receive_ISR,w
  3853  0293  0081               	movwf	1
  3854  0294  3001               	movlw	1
  3855  0295  00F0               	movwf	??_EUSART_Receive_ISR
  3856  0296  0870               	movf	??_EUSART_Receive_ISR,w
  3857  0297  07B9               	addwf	_eusartRxHead,f
  3858                           
  3859                           ;eusart.c: 201: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  3860  0298  3008               	movlw	8
  3861  0299  0239               	subwf	_eusartRxHead,w
  3862  029A  1803               	btfsc	3,0
  3863                           
  3864                           ;eusart.c: 202: {
  3865                           ;eusart.c: 203: eusartRxHead = 0;
  3866  029B  01B9               	clrf	_eusartRxHead
  3867                           
  3868                           ;eusart.c: 204: }
  3869                           ;eusart.c: 205: eusartRxCount++;
  3870  029C  3001               	movlw	1
  3871  029D  00F0               	movwf	??_EUSART_Receive_ISR
  3872  029E  0870               	movf	??_EUSART_Receive_ISR,w
  3873  029F  07FA               	addwf	_eusartRxCount,f	;volatile
  3874  02A0  0008               	return
  3875  02A1                     __end_of_EUSART_Receive_ISR:	
  3876  007E                     btemp	set	126	;btemp
  3877  007E                     int$flags	set	126
  3878  007E                     wtemp	set	126
  3879  007E                     wtemp0	set	126
  3880  0080                     wtemp1	set	128
  3881  0082                     wtemp2	set	130
  3882  0084                     wtemp3	set	132
  3883  0086                     wtemp4	set	134
  3884  0088                     wtemp5	set	136
  3885  007F                     wtemp6	set	127
  3886  007E                     ttemp	set	126
  3887  007E                     ttemp0	set	126
  3888  0081                     ttemp1	set	129
  3889  0084                     ttemp2	set	132
  3890  0087                     ttemp3	set	135
  3891  007F                     ttemp4	set	127
  3892  007E                     ltemp	set	126
  3893  007E                     ltemp0	set	126
  3894  0082                     ltemp1	set	130
  3895  0086                     ltemp2	set	134
  3896  0080                     ltemp3	set	128


Data Sizes:
    Strings     70
    Constant    0
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     19      50
    BANK1            32      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_2(CODE[18]), STR_1(CODE[52]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), my10msTimerISR(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), my10msTimerISR(), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _GPS_Initialize->_printf
    _printf->_putch
    _putch->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _my10msTimerISR->_LED_update_loop

Critical Paths under _main in BANK0

    _main->_GPS_Initialize
    _GPS_Initialize->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    1912
                                              6 BANK0     13    13      0
                 _EPWM_LoadDutyValue
                     _GPS_Initialize
                      _LED_set_state
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     150
                    _EPWM_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     150
                                              4 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     150
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EPWM_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_set_state                                        1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _GPS_Initialize                                       4     4      0     383
                                              2 BANK0      4     4      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              19    17      2     315
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      93
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _EPWM_LoadDutyValue                                   4     2      2     492
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                     _my10msTimerISR *
 ---------------------------------------------------------------------------------
 (8) _my10msTimerISR                                       0     0      0       0
                    _LED_update_loop
 ---------------------------------------------------------------------------------
 (9) _LED_update_loop                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM_LoadDutyValue
   _GPS_Initialize
     _printf
       _putch
         _EUSART_Write
   _LED_set_state
   _SYSTEM_Initialize
     _EPWM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_StartTimer
   _TMR0_SetInterruptHandler
   _TMR2_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _my10msTimerISR *
         _LED_update_loop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      32       6       62.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      3E       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Sep 13 13:03:37 2016

                             __CFG_CP$OFF 0000                           _timer0ReloadVal 003E  
                                     l131 021C                                       l220 0335  
                                     l310 00AC                    __end_of_my10msTimerISR 0354  
                                     l318 0101                                       l397 02B6  
                                     _PR2 001B                              __CFG_CPD$OFF 0000  
                                     u785 02CA                           _TMR2_Initialize 0327  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_IESO$ON 0000                              __CFG_LVP$OFF 0000  
                                    l2001 011B                                      l2011 013E  
                                    l2015 014A                                      l2007 0130  
                                    l1653 02A8                                      l1901 0055  
                                    l1655 02AE                                      l1841 0212  
                                    l1923 007A                                      l1915 0072  
                                    l1909 005D                                      l1855 0230  
                                    l1863 0270                                      l1871 01B3  
                                    l1953 00AD                                      l1937 0097  
                                    l1929 008F                                      l1877 01C8  
                                    l1981 00F4                                      l1975 00DF  
                                    l1895 0040                                      l1985 00FD  
                                    l1989 010A                                      STR_1 0167  
                                    STR_2 019B                                      _LATA 010C  
                                    u1407 0063                                      _LATC 010E  
                                    u1417 0080                                      u1507 01D4  
                                    u1427 009D                                      u1517 01E6  
                                    u1437 00B3                                      u1447 00CF  
                                    u1457 00E5                                      u1467 0121  
                                    u1477 0139                                      u1397 0046  
                                    u1487 0160                                      u1497 01B9  
                                    _PLLR 04D6                                      _TMR0 0015  
                                    _TMR2 001A                                      _WPUA 020C  
                                    _WPUC 020E                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                               main@tmp_521 004D  
                             main@tmp_524 004E                               main@tmp_516 004A  
                             main@tmp_525 004F                               main@tmp_517 004B  
                             main@tmp_518 004C                                      _main 0030  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    ltemp 007E                                      start 0024  
                                    ttemp 007E                                      wtemp 007E  
                           __CFG_MCLRE$ON 0000                   __end_of_TMR0_Initialize 02FC  
                           __CFG_PLLEN$ON 0000            ??_TMR0_DefaultInterruptHandler 0070  
                           ?_EUSART_Write 0070            __size_of_OSCILLATOR_Initialize 0008  
           __end_of_OSCILLATOR_Initialize 0338                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000                                     _T2CON 001C  
                                   _LATA5 0865                           ?_my10msTimerISR 0070  
                                   i1l143 024D                                     i1l244 001F  
                                   _RCREG 0199                                     _RCSTA 019D  
                                   _TRISA 008C                                     _TRISC 008E  
                                   _TXREG 019A                                     _TXSTA 019E  
                        ??_GPS_Initialize 0041         __size_of_TMR0_SetInterruptHandler 0006  
               ?_TMR0_SetInterruptHandler 0072                          __end_of_TMR0_ISR 0310  
                                   _speed 0030                                     _putch 034B  
                 __end_of_LED_update_loop 0211                                     pclath 000A  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                           _TMR2_StartTimer 034F  
                         __initialization 0025                    __size_of_LED_set_state 001A  
                            __end_of_main 0167                            ??_EUSART_Write 0072  
                 __end_of_TMR2_Initialize 0330               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 0045                                    _EEADRH 0192  
                                  _EEADRL 0191                                    _CCPR1H 0292  
                                  _EEDATH 0194                                    _CCPR1L 0291  
                                  _EEDATL 0193                                    _EECON2 0196  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  ?_putch 0070                                    _ANSELC 018E  
                                  i1l1611 028B                                    i1l1477 01FF  
                                  i1l1671 000D                                    i1l1679 0016  
                                  _OSCCON 0099                                    _SPBRGH 019C  
                                  _SPBRGL 019B                            __CFG_PWRTE$OFF 0000  
                          __CFG_STVREN$ON 0000                       _EUSART_Transmit_ISR 0233  
                        ?_TMR0_Initialize 0070                                    _printf 026B  
                                  main@up 0048                  __size_of_EPWM_Initialize 000C  
                           _LED_set_state 02A1                     __end_of_TMR0_CallBack 0327  
                 __end_of_TMR2_StartTimer 0352  TMR0_SetInterruptHandler@InterruptHandler 0072  
                    ?_EUSART_Transmit_ISR 0070               __size_of_EPWM_LoadDutyValue 0017  
                        ?_LED_update_loop 0070                         _SYSTEM_Initialize 0338  
                 __end_of__initialization 002D                        ?_SYSTEM_Initialize 0070  
                          __pcstackCOMMON 0070                       ??_SYSTEM_Initialize 0075  
                               ?_TMR0_ISR 0070                             __end_of_putch 034F  
                        ?_TMR2_Initialize 0070                            _OPTION_REGbits 0095  
                   TMR0_ISR@CountCallBack 0033                            ?_LED_set_state 0070  
               __end_of_SYSTEM_Initialize 033F                     ??_EUSART_Transmit_ISR 0070  
                                 ??_putch 0074                                __pbssBANK0 0020  
                    __end_of_EUSART_Write 0233               __size_of_EUSART_Receive_ISR 001B  
                              __pmaintext 0030          __end_of_TMR0_SetInterruptHandler 034B  
                              ??_TMR0_ISR 0071                          ??_my10msTimerISR 0071  
                              __pintentry 0004                                   _CCP1CON 0293  
                                 _ECCP1AS 0295                                   _BAUDCON 019F  
                                 ?_printf 0075                             _eusartRxCount 007A  
                                 _OSCSTAT 009A                                   _OSCTUNE 0098  
                                 _PWM1CON 0294                          ?_TMR2_StartTimer 0070  
                       ??_EPWM_Initialize 0072                                   __ptext1 0338  
                                 __ptext2 0327                                   __ptext3 034F  
                                 __ptext4 02E8                                   __ptext5 0345  
                                 __ptext6 02D2                                   __ptext7 0330  
                                 __ptext8 0250                                   __ptext9 0310  
                         __size_of_printf 001B                           ??_LED_set_state 0072  
                   _OSCILLATOR_Initialize 0330                                 _T2CONbits 001C  
                ??_PIN_MANAGER_Initialize 0072                __size_of_SYSTEM_Initialize 0007  
                                 clrloop0 0340                                   main@tmp 0049  
                          main@motor_load 0050                      end_of_initialization 002D  
                  LED_set_state@new_state 0072                                 _LED_state 0038  
             EPWM_LoadDutyValue@dutyValue 0072                         _EUSART_Initialize 0250  
                      ?_EUSART_Initialize 0070                                 _RCSTAbits 019D  
                                 printf@c 0040                                   printf@f 0075  
                            __pstringtext 0167                       ??_EUSART_Initialize 0072  
                _TMR0_SetInterruptHandler 0345                          __CFG_FOSC$INTOSC 0000  
                   __size_of_EUSART_Write 0022                 __end_of_EUSART_Initialize 026B  
                 __size_of_GPS_Initialize 0040                              _EUSART_Write 0211  
                       __size_of_TMR0_ISR 0014                    ?_OSCILLATOR_Initialize 0070  
                          __end_of_printf 0286                       start_initialization 0025  
                __size_of_TMR0_Initialize 0014           __size_of_PIN_MANAGER_Initialize 0016  
              __end_of_EPWM_LoadDutyValue 02D2                               putch@txData 0074  
                __size_of_LED_update_loop 0024                    __size_of_TMR0_CallBack 000B  
                                ??_printf 0077                           _EPWM_Initialize 0310  
             __end_of_EUSART_Transmit_ISR 0250                               __pbssCOMMON 007A  
                               ___latbits 0000                             __pcstackBANK0 003F  
                __size_of_TMR2_Initialize 0009                __end_of_EUSART_Receive_ISR 02A1  
              __size_of_EUSART_Initialize 001B                     _TMR0_InterruptHandler 0035  
                  _PIN_MANAGER_Initialize 02D2                              _eusartRxHead 0039  
                            _eusartTxHead 003B                              _eusartRxTail 003A  
                            _eusartTxTail 003C              ??_INTERRUPT_InterruptManager 0071  
                 _eusartTxBufferRemaining 007B                             _TMR0_CallBack 031C  
                          __size_of_putch 0004                            _eusartRxBuffer 0020  
                       ??_TMR0_Initialize 0074                            _GPS_Initialize 01AD  
                          _eusartTxBuffer 0028                                 clear_ram0 033F  
                                _PIE1bits 0091                  __size_of_TMR2_StartTimer 0003  
     __size_of_INTERRUPT_InterruptManager 0020                ??_TMR0_SetInterruptHandler 0074  
                                _PIR1bits 0011                                  _TMR0_ISR 02FC  
                                _PSTR1CON 0296                   __end_of_EPWM_Initialize 031C  
                       ??_LED_update_loop 0070                     __end_of_LED_set_state 02BB  
                 __size_of_my10msTimerISR 0002                            ?_TMR0_CallBack 0070  
                  __end_of_GPS_Initialize 01ED                         ??_TMR2_Initialize 0072  
                              _EECON1bits 0195                               _LED_counter 0037  
                       GPS_Initialize@tmp 0044                   ??_OSCILLATOR_Initialize 0072  
                                __ptext10 02A1                                  __ptext11 01AD  
                                __ptext20 0352                                  __ptext12 026B  
                                __ptext21 01ED                                  __ptext13 034B  
                                __ptext22 0233                                  __ptext14 0211  
                                __ptext23 0286                                  __ptext15 02BB  
                                __ptext17 02FC                                  __ptext18 031C  
                                __ptext19 0354                           ?_GPS_Initialize 0070  
                           __size_of_main 0137      __end_of_TMR0_DefaultInterruptHandler 0355  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 0354  
                      _EPWM_LoadDutyValue 02BB                                  int$flags 007E  
                        ?_EPWM_Initialize 0070                         ??_TMR2_StartTimer 0072  
      __end_of_INTERRUPT_InterruptManager 0024                _INTERRUPT_InterruptManager 0004  
                     ?_EPWM_LoadDutyValue 0072                                _INTCONbits 000B  
                         ??_TMR0_CallBack 0071                      ??_EPWM_LoadDutyValue 0074  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0070  
                       __CFG_CLKOUTEN$OFF 0000             ?_TMR0_DefaultInterruptHandler 0070  
                                printf@ap 003F                        _EUSART_Receive_ISR 0286  
                              _OPTION_REG 0095                       ?_EUSART_Receive_ISR 0070  
                         _TMR0_Initialize 02E8                            _my10msTimerISR 0352  
                             _speed_units 003D                        EUSART_Write@txData 0073  
            __size_of_EUSART_Transmit_ISR 001D            __end_of_PIN_MANAGER_Initialize 02E8  
                    ??_EUSART_Receive_ISR 0070                           _LED_update_loop 01ED  
